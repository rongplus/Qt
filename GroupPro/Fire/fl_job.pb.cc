// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: fl_job.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "fl_job.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
class DeviceModelDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<DeviceModel> {
} _DeviceModel_default_instance_;
class DeviceModelsDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<DeviceModels> {
} _DeviceModels_default_instance_;
class PBVersionDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<PBVersion> {
} _PBVersion_default_instance_;
class PBPositionDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<PBPosition> {
} _PBPosition_default_instance_;
class PBTransformDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<PBTransform> {
} _PBTransform_default_instance_;
class PBGraphicsDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<PBGraphics> {
} _PBGraphics_default_instance_;
class PBWioDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<PBWio> {
} _PBWio_default_instance_;
class PBCorrelationInputFromZCDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<PBCorrelationInputFromZC> {
  public:
  int input_;
  int system_status_;
  int local_trouble_;
  int remote_trouble_;
} _PBCorrelationInputFromZC_default_instance_;
class PBCorrelationInputFromWIODefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<PBCorrelationInputFromWIO> {
} _PBCorrelationInputFromWIO_default_instance_;
class PBCorrelationInputDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<PBCorrelationInput> {
} _PBCorrelationInput_default_instance_;
class PBCorrelationDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<PBCorrelation> {
} _PBCorrelation_default_instance_;
class PBZoneControllerDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<PBZoneController> {
} _PBZoneController_default_instance_;
class PBFloorDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<PBFloor> {
} _PBFloor_default_instance_;
class PBJobDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<PBJob> {
} _PBJob_default_instance_;

namespace protobuf_fl_5fjob_2eproto {


namespace {

::google::protobuf::Metadata file_level_metadata[14];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[4];

}  // namespace

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTableField
    const TableStruct::entries[] = {
  {0, 0, 0, ::google::protobuf::internal::kInvalidMask, 0, 0},
};

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::AuxillaryParseTableField
    const TableStruct::aux[] = {
  ::google::protobuf::internal::AuxillaryParseTableField(),
};
PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTable const
    TableStruct::schema[] = {
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
};

const ::google::protobuf::uint32 TableStruct::offsets[] = {
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DeviceModel, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DeviceModel, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DeviceModel, base_model_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DeviceModel, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DeviceModel, description_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DeviceModel, type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DeviceModel, category_),
  2,
  0,
  1,
  3,
  4,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DeviceModels, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DeviceModels, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DeviceModels, dev_),
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBVersion, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBVersion, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBVersion, major_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBVersion, minor_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBVersion, patch_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBVersion, suffix_),
  1,
  2,
  3,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBPosition, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBPosition, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBPosition, x_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBPosition, y_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBPosition, z_),
  0,
  1,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBTransform, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBTransform, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBTransform, m11_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBTransform, m12_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBTransform, m13_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBTransform, m21_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBTransform, m22_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBTransform, m23_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBTransform, m31_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBTransform, m32_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBTransform, m33_),
  0,
  1,
  2,
  3,
  4,
  5,
  6,
  7,
  8,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBGraphics, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBGraphics, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBGraphics, pos_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBGraphics, transform_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBGraphics, type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBGraphics, z_value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBGraphics, svg_data_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBGraphics, img_data_),
  3,
  4,
  0,
  5,
  1,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBWio, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBWio, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBWio, guid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBWio, title_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBWio, location_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBWio, mac_address_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBWio, model_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBWio, signaling_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBWio, graphics_),
  0,
  1,
  2,
  3,
  5,
  6,
  4,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBCorrelationInputFromZC, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBCorrelationInputFromZC, _internal_metadata_),
  ~0u,  // no _extensions_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBCorrelationInputFromZC, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBCorrelationInputFromZC, zc_guid_),
  GOOGLE_PROTOBUF_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET((&_PBCorrelationInputFromZC_default_instance_), input_),
  GOOGLE_PROTOBUF_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET((&_PBCorrelationInputFromZC_default_instance_), system_status_),
  GOOGLE_PROTOBUF_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET((&_PBCorrelationInputFromZC_default_instance_), local_trouble_),
  GOOGLE_PROTOBUF_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET((&_PBCorrelationInputFromZC_default_instance_), remote_trouble_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBCorrelationInputFromZC, source_),
  0,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBCorrelationInputFromWIO, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBCorrelationInputFromWIO, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBCorrelationInputFromWIO, wio_guid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBCorrelationInputFromWIO, input_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBCorrelationInput, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBCorrelationInput, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBCorrelationInput, guid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBCorrelationInput, pos_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBCorrelationInput, wio_input_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBCorrelationInput, zc_input_),
  0,
  1,
  2,
  3,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBCorrelation, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBCorrelation, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBCorrelation, guid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBCorrelation, relay_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBCorrelation, trigger_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBCorrelation, input_),
  0,
  1,
  2,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBZoneController, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBZoneController, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBZoneController, guid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBZoneController, title_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBZoneController, location_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBZoneController, mac_address_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBZoneController, pan_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBZoneController, channel_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBZoneController, graphics_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBZoneController, wio_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBZoneController, correlation_),
  0,
  1,
  2,
  3,
  4,
  6,
  5,
  ~0u,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBFloor, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBFloor, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBFloor, guid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBFloor, title_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBFloor, unit_of_measure_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBFloor, graphics_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBFloor, zc_),
  0,
  1,
  3,
  2,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBJob, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBJob, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBJob, guid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBJob, job_version_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBJob, configurator_version_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBJob, creation_date_utc_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBJob, creation_time_utc_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBJob, title_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBJob, password_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBJob, standard_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBJob, floor_),
  0,
  5,
  6,
  1,
  2,
  3,
  4,
  7,
  ~0u,
};

static const ::google::protobuf::internal::MigrationSchema schemas[] = {
  { 0, 10, sizeof(DeviceModel)},
  { 15, 21, sizeof(DeviceModels)},
  { 22, 31, sizeof(PBVersion)},
  { 35, 43, sizeof(PBPosition)},
  { 46, 60, sizeof(PBTransform)},
  { 69, 80, sizeof(PBGraphics)},
  { 86, 98, sizeof(PBWio)},
  { 105, 116, sizeof(PBCorrelationInputFromZC)},
  { 121, 128, sizeof(PBCorrelationInputFromWIO)},
  { 130, 139, sizeof(PBCorrelationInput)},
  { 143, 152, sizeof(PBCorrelation)},
  { 156, 170, sizeof(PBZoneController)},
  { 179, 189, sizeof(PBFloor)},
  { 194, 208, sizeof(PBJob)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&_DeviceModel_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_DeviceModels_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_PBVersion_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_PBPosition_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_PBTransform_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_PBGraphics_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_PBWio_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_PBCorrelationInputFromZC_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_PBCorrelationInputFromWIO_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_PBCorrelationInput_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_PBCorrelation_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_PBZoneController_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_PBFloor_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_PBJob_default_instance_),
};

namespace {

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "fl_job.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 14);
}

}  // namespace

void TableStruct::Shutdown() {
  _DeviceModel_default_instance_.Shutdown();
  delete file_level_metadata[0].reflection;
  _DeviceModels_default_instance_.Shutdown();
  delete file_level_metadata[1].reflection;
  _PBVersion_default_instance_.Shutdown();
  delete file_level_metadata[2].reflection;
  _PBPosition_default_instance_.Shutdown();
  delete file_level_metadata[3].reflection;
  _PBTransform_default_instance_.Shutdown();
  delete file_level_metadata[4].reflection;
  _PBGraphics_default_instance_.Shutdown();
  delete file_level_metadata[5].reflection;
  _PBWio_default_instance_.Shutdown();
  delete file_level_metadata[6].reflection;
  _PBCorrelationInputFromZC_default_instance_.Shutdown();
  delete file_level_metadata[7].reflection;
  _PBCorrelationInputFromWIO_default_instance_.Shutdown();
  delete file_level_metadata[8].reflection;
  _PBCorrelationInput_default_instance_.Shutdown();
  delete file_level_metadata[9].reflection;
  _PBCorrelation_default_instance_.Shutdown();
  delete file_level_metadata[10].reflection;
  _PBZoneController_default_instance_.Shutdown();
  delete file_level_metadata[11].reflection;
  _PBFloor_default_instance_.Shutdown();
  delete file_level_metadata[12].reflection;
  _PBJob_default_instance_.Shutdown();
  delete file_level_metadata[13].reflection;
}

void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  ::protobuf_fl_5fdefs_2eproto::InitDefaults();
  _DeviceModel_default_instance_.DefaultConstruct();
  _DeviceModels_default_instance_.DefaultConstruct();
  _PBVersion_default_instance_.DefaultConstruct();
  _PBPosition_default_instance_.DefaultConstruct();
  _PBTransform_default_instance_.DefaultConstruct();
  _PBGraphics_default_instance_.DefaultConstruct();
  _PBWio_default_instance_.DefaultConstruct();
  _PBCorrelationInputFromZC_default_instance_.DefaultConstruct();
  _PBCorrelationInputFromWIO_default_instance_.DefaultConstruct();
  _PBCorrelationInput_default_instance_.DefaultConstruct();
  _PBCorrelation_default_instance_.DefaultConstruct();
  _PBZoneController_default_instance_.DefaultConstruct();
  _PBFloor_default_instance_.DefaultConstruct();
  _PBJob_default_instance_.DefaultConstruct();
  _PBGraphics_default_instance_.get_mutable()->pos_ = const_cast< ::PBPosition*>(
      ::PBPosition::internal_default_instance());
  _PBGraphics_default_instance_.get_mutable()->transform_ = const_cast< ::PBTransform*>(
      ::PBTransform::internal_default_instance());
  _PBWio_default_instance_.get_mutable()->graphics_ = const_cast< ::PBGraphics*>(
      ::PBGraphics::internal_default_instance());
  _PBCorrelationInputFromZC_default_instance_.input_ = 0;
  _PBCorrelationInputFromZC_default_instance_.system_status_ = 0;
  _PBCorrelationInputFromZC_default_instance_.local_trouble_ = 0;
  _PBCorrelationInputFromZC_default_instance_.remote_trouble_ = 0;
  _PBCorrelationInput_default_instance_.get_mutable()->pos_ = const_cast< ::PBPosition*>(
      ::PBPosition::internal_default_instance());
  _PBCorrelationInput_default_instance_.get_mutable()->wio_input_ = const_cast< ::PBCorrelationInputFromWIO*>(
      ::PBCorrelationInputFromWIO::internal_default_instance());
  _PBCorrelationInput_default_instance_.get_mutable()->zc_input_ = const_cast< ::PBCorrelationInputFromZC*>(
      ::PBCorrelationInputFromZC::internal_default_instance());
  _PBZoneController_default_instance_.get_mutable()->graphics_ = const_cast< ::PBGraphics*>(
      ::PBGraphics::internal_default_instance());
  _PBFloor_default_instance_.get_mutable()->graphics_ = const_cast< ::PBGraphics*>(
      ::PBGraphics::internal_default_instance());
  _PBJob_default_instance_.get_mutable()->job_version_ = const_cast< ::PBVersion*>(
      ::PBVersion::internal_default_instance());
  _PBJob_default_instance_.get_mutable()->configurator_version_ = const_cast< ::PBVersion*>(
      ::PBVersion::internal_default_instance());
}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] = {
      "\n\014fl_job.proto\032\rfl_defs.proto\"\334\002\n\013Device"
      "Model\022$\n\nbase_model\030\001 \002(\0162\020.DeviceBaseMo"
      "del\022\014\n\004name\030\002 \002(\t\022\023\n\013description\030\003 \002(\t\022\037"
      "\n\004type\030\004 \002(\0162\021.DeviceModel.Type\022\'\n\010categ"
      "ory\030\005 \002(\0162\025.DeviceModel.Category\"\232\001\n\010Cat"
      "egory\022\026\n\022UNDEFINED_CATEGORY\020\000\022#\n\037TWO_WIR"
      "E_NOTIFICATION_APPLIANCE\020\001\022\037\n\033CONVENTION"
      "AL_SMOKE_DETECTOR\020\002\022\036\n\032CONVENTIONAL_HEAT"
      "_DETECTOR\020\003\022\020\n\014PULL_STATION\020\004\"\035\n\004Type\022\t\n"
      "\005INPUT\020\000\022\n\n\006OUTPUT\020\001\")\n\014DeviceModels\022\031\n\003"
      "dev\030\001 \003(\0132\014.DeviceModel\"H\n\tPBVersion\022\r\n\005"
      "major\030\001 \001(\r\022\r\n\005minor\030\002 \001(\r\022\r\n\005patch\030\003 \001("
      "\r\022\016\n\006suffix\030\004 \001(\t\"-\n\nPBPosition\022\t\n\001x\030\001 \002"
      "(\002\022\t\n\001y\030\002 \002(\002\022\t\n\001z\030\003 \001(\002\"\202\001\n\013PBTransform"
      "\022\013\n\003m11\030\001 \002(\002\022\013\n\003m12\030\002 \002(\002\022\013\n\003m13\030\003 \002(\002\022"
      "\013\n\003m21\030\004 \002(\002\022\013\n\003m22\030\005 \002(\002\022\013\n\003m23\030\006 \002(\002\022\013"
      "\n\003m31\030\007 \002(\002\022\013\n\003m32\030\010 \002(\002\022\013\n\003m33\030\t \002(\002\"\212\001"
      "\n\nPBGraphics\022\030\n\003pos\030\001 \001(\0132\013.PBPosition\022\037"
      "\n\ttransform\030\002 \001(\0132\014.PBTransform\022\014\n\004type\030"
      "\003 \001(\t\022\017\n\007z_value\030\004 \001(\002\022\020\n\010svg_data\030\005 \001(\014"
      "\022\020\n\010img_data\030\006 \001(\014\"\256\001\n\005PBWio\022\014\n\004guid\030\001 \001"
      "(\t\022\r\n\005title\030\002 \001(\t\022\020\n\010location\030\003 \001(\t\022\023\n\013m"
      "ac_address\030\004 \001(\t\022\037\n\005model\030\005 \001(\0162\020.Device"
      "BaseModel\022!\n\tsignaling\030\006 \001(\0162\016.Signaling"
      "Type\022\035\n\010graphics\030\007 \001(\0132\013.PBGraphics\"\330\001\n\030"
      "PBCorrelationInputFromZC\022\017\n\007zc_guid\030\001 \001("
      "\t\022\033\n\005input\030\002 \001(\0162\n.InputTypeH\000\022*\n\rsystem"
      "_status\030\003 \001(\0162\021.SystemStatusTypeH\000\022*\n\rlo"
      "cal_trouble\030\004 \001(\0162\021.LocalTroubleTypeH\000\022,"
      "\n\016remote_trouble\030\005 \001(\0162\022.RemoteTroubleTy"
      "peH\000B\010\n\006source\"H\n\031PBCorrelationInputFrom"
      "WIO\022\020\n\010wio_guid\030\001 \001(\t\022\031\n\005input\030\002 \001(\0162\n.I"
      "nputType\"\230\001\n\022PBCorrelationInput\022\014\n\004guid\030"
      "\001 \001(\t\022\030\n\003pos\030\002 \001(\0132\013.PBPosition\022-\n\twio_i"
      "nput\030\003 \001(\0132\032.PBCorrelationInputFromWIO\022+"
      "\n\010zc_input\030\004 \001(\0132\031.PBCorrelationInputFro"
      "mZC\"\271\001\n\rPBCorrelation\022\014\n\004guid\030\001 \001(\t\022\032\n\005r"
      "elay\030\002 \001(\0162\013.LocalRelay\022+\n\007trigger\030\003 \001(\016"
      "2\032.PBCorrelation.TriggerType\022\"\n\005input\030\004 "
      "\003(\0132\023.PBCorrelationInput\"-\n\013TriggerType\022"
      "\016\n\nANY_INPUTS\020\000\022\016\n\nALL_INPUTS\020\001\"\320\001\n\020PBZo"
      "neController\022\014\n\004guid\030\001 \001(\t\022\r\n\005title\030\002 \001("
      "\t\022\020\n\010location\030\003 \001(\t\022\023\n\013mac_address\030\004 \001(\t"
      "\022\016\n\006pan_id\030\005 \001(\t\022\017\n\007channel\030\006 \001(\r\022\035\n\010gra"
      "phics\030\007 \001(\0132\013.PBGraphics\022\023\n\003wio\030\010 \003(\0132\006."
      "PBWio\022#\n\013correlation\030\t \003(\0132\016.PBCorrelati"
      "on\"\344\001\n\007PBFloor\022\014\n\004guid\030\001 \001(\t\022\r\n\005title\030\002 "
      "\001(\t\022/\n\017unit_of_measure\030\003 \001(\0162\026.PBFloor.U"
      "nitOfMeasure\022\035\n\010graphics\030\004 \001(\0132\013.PBGraph"
      "ics\022\035\n\002zc\030\005 \003(\0132\021.PBZoneController\"M\n\rUn"
      "itOfMeasure\022\n\n\006METERS\020\000\022\t\n\005YARDS\020\001\022\010\n\004FE"
      "ET\020\002\022\n\n\006INCHES\020\003\022\017\n\013CENTIMETERS\020\004\"\361\001\n\005PB"
      "Job\022\014\n\004guid\030\001 \001(\t\022\037\n\013job_version\030\002 \001(\0132\n"
      ".PBVersion\022(\n\024configurator_version\030\003 \001(\013"
      "2\n.PBVersion\022\031\n\021creation_date_utc\030\004 \001(\t\022"
      "\031\n\021creation_time_utc\030\005 \001(\t\022\r\n\005title\030\006 \001("
      "\t\022\020\n\010password\030\007 \001(\t\022\037\n\010standard\030\010 \001(\0162\r."
      "StandardType\022\027\n\005floor\030\t \003(\0132\010.PBFloor"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 2317);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "fl_job.proto", &protobuf_RegisterTypes);
  ::protobuf_fl_5fdefs_2eproto::AddDescriptors();
  ::google::protobuf::internal::OnShutdown(&TableStruct::Shutdown);
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;

}  // namespace protobuf_fl_5fjob_2eproto

const ::google::protobuf::EnumDescriptor* DeviceModel_Category_descriptor() {
  protobuf_fl_5fjob_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_fl_5fjob_2eproto::file_level_enum_descriptors[0];
}
bool DeviceModel_Category_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const DeviceModel_Category DeviceModel::UNDEFINED_CATEGORY;
const DeviceModel_Category DeviceModel::TWO_WIRE_NOTIFICATION_APPLIANCE;
const DeviceModel_Category DeviceModel::CONVENTIONAL_SMOKE_DETECTOR;
const DeviceModel_Category DeviceModel::CONVENTIONAL_HEAT_DETECTOR;
const DeviceModel_Category DeviceModel::PULL_STATION;
const DeviceModel_Category DeviceModel::Category_MIN;
const DeviceModel_Category DeviceModel::Category_MAX;
const int DeviceModel::Category_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* DeviceModel_Type_descriptor() {
  protobuf_fl_5fjob_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_fl_5fjob_2eproto::file_level_enum_descriptors[1];
}
bool DeviceModel_Type_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const DeviceModel_Type DeviceModel::INPUT;
const DeviceModel_Type DeviceModel::OUTPUT;
const DeviceModel_Type DeviceModel::Type_MIN;
const DeviceModel_Type DeviceModel::Type_MAX;
const int DeviceModel::Type_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* PBCorrelation_TriggerType_descriptor() {
  protobuf_fl_5fjob_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_fl_5fjob_2eproto::file_level_enum_descriptors[2];
}
bool PBCorrelation_TriggerType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const PBCorrelation_TriggerType PBCorrelation::ANY_INPUTS;
const PBCorrelation_TriggerType PBCorrelation::ALL_INPUTS;
const PBCorrelation_TriggerType PBCorrelation::TriggerType_MIN;
const PBCorrelation_TriggerType PBCorrelation::TriggerType_MAX;
const int PBCorrelation::TriggerType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* PBFloor_UnitOfMeasure_descriptor() {
  protobuf_fl_5fjob_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_fl_5fjob_2eproto::file_level_enum_descriptors[3];
}
bool PBFloor_UnitOfMeasure_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const PBFloor_UnitOfMeasure PBFloor::METERS;
const PBFloor_UnitOfMeasure PBFloor::YARDS;
const PBFloor_UnitOfMeasure PBFloor::FEET;
const PBFloor_UnitOfMeasure PBFloor::INCHES;
const PBFloor_UnitOfMeasure PBFloor::CENTIMETERS;
const PBFloor_UnitOfMeasure PBFloor::UnitOfMeasure_MIN;
const PBFloor_UnitOfMeasure PBFloor::UnitOfMeasure_MAX;
const int PBFloor::UnitOfMeasure_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DeviceModel::kBaseModelFieldNumber;
const int DeviceModel::kNameFieldNumber;
const int DeviceModel::kDescriptionFieldNumber;
const int DeviceModel::kTypeFieldNumber;
const int DeviceModel::kCategoryFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DeviceModel::DeviceModel()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_fl_5fjob_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:DeviceModel)
}
DeviceModel::DeviceModel(const DeviceModel& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_name()) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  description_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_description()) {
    description_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.description_);
  }
  ::memcpy(&base_model_, &from.base_model_,
    reinterpret_cast<char*>(&category_) -
    reinterpret_cast<char*>(&base_model_) + sizeof(category_));
  // @@protoc_insertion_point(copy_constructor:DeviceModel)
}

void DeviceModel::SharedCtor() {
  _cached_size_ = 0;
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  description_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&base_model_, 0, reinterpret_cast<char*>(&category_) -
    reinterpret_cast<char*>(&base_model_) + sizeof(category_));
}

DeviceModel::~DeviceModel() {
  // @@protoc_insertion_point(destructor:DeviceModel)
  SharedDtor();
}

void DeviceModel::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  description_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void DeviceModel::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DeviceModel::descriptor() {
  protobuf_fl_5fjob_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_fl_5fjob_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DeviceModel& DeviceModel::default_instance() {
  protobuf_fl_5fjob_2eproto::InitDefaults();
  return *internal_default_instance();
}

DeviceModel* DeviceModel::New(::google::protobuf::Arena* arena) const {
  DeviceModel* n = new DeviceModel;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void DeviceModel::Clear() {
// @@protoc_insertion_point(message_clear_start:DeviceModel)
  if (_has_bits_[0 / 32] & 3u) {
    if (has_name()) {
      GOOGLE_DCHECK(!name_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*name_.UnsafeRawStringPointer())->clear();
    }
    if (has_description()) {
      GOOGLE_DCHECK(!description_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*description_.UnsafeRawStringPointer())->clear();
    }
  }
  if (_has_bits_[0 / 32] & 28u) {
    ::memset(&base_model_, 0, reinterpret_cast<char*>(&category_) -
      reinterpret_cast<char*>(&base_model_) + sizeof(category_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool DeviceModel::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:DeviceModel)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .DeviceBaseModel base_model = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::DeviceBaseModel_IsValid(value)) {
            set_base_model(static_cast< ::DeviceBaseModel >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required string name = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "DeviceModel.name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required string description = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_description()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->description().data(), this->description().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "DeviceModel.description");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required .DeviceModel.Type type = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::DeviceModel_Type_IsValid(value)) {
            set_type(static_cast< ::DeviceModel_Type >(value));
          } else {
            mutable_unknown_fields()->AddVarint(4, value);
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required .DeviceModel.Category category = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::DeviceModel_Category_IsValid(value)) {
            set_category(static_cast< ::DeviceModel_Category >(value));
          } else {
            mutable_unknown_fields()->AddVarint(5, value);
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:DeviceModel)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:DeviceModel)
  return false;
#undef DO_
}

void DeviceModel::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:DeviceModel)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .DeviceBaseModel base_model = 1;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->base_model(), output);
  }

  // required string name = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "DeviceModel.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->name(), output);
  }

  // required string description = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->description().data(), this->description().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "DeviceModel.description");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->description(), output);
  }

  // required .DeviceModel.Type type = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      4, this->type(), output);
  }

  // required .DeviceModel.Category category = 5;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      5, this->category(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:DeviceModel)
}

::google::protobuf::uint8* DeviceModel::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:DeviceModel)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .DeviceBaseModel base_model = 1;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->base_model(), target);
  }

  // required string name = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "DeviceModel.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->name(), target);
  }

  // required string description = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->description().data(), this->description().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "DeviceModel.description");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->description(), target);
  }

  // required .DeviceModel.Type type = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      4, this->type(), target);
  }

  // required .DeviceModel.Category category = 5;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      5, this->category(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:DeviceModel)
  return target;
}

size_t DeviceModel::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:DeviceModel)
  size_t total_size = 0;

  if (has_name()) {
    // required string name = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  if (has_description()) {
    // required string description = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->description());
  }

  if (has_base_model()) {
    // required .DeviceBaseModel base_model = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->base_model());
  }

  if (has_type()) {
    // required .DeviceModel.Type type = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->type());
  }

  if (has_category()) {
    // required .DeviceModel.Category category = 5;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->category());
  }

  return total_size;
}
size_t DeviceModel::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:DeviceModel)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (((_has_bits_[0] & 0x0000001f) ^ 0x0000001f) == 0) {  // All required fields are present.
    // required string name = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());

    // required string description = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->description());

    // required .DeviceBaseModel base_model = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->base_model());

    // required .DeviceModel.Type type = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->type());

    // required .DeviceModel.Category category = 5;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->category());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DeviceModel::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:DeviceModel)
  GOOGLE_DCHECK_NE(&from, this);
  const DeviceModel* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DeviceModel>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:DeviceModel)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:DeviceModel)
    MergeFrom(*source);
  }
}

void DeviceModel::MergeFrom(const DeviceModel& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:DeviceModel)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 31u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_name();
      name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_description();
      description_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.description_);
    }
    if (cached_has_bits & 0x00000004u) {
      base_model_ = from.base_model_;
    }
    if (cached_has_bits & 0x00000008u) {
      type_ = from.type_;
    }
    if (cached_has_bits & 0x00000010u) {
      category_ = from.category_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void DeviceModel::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:DeviceModel)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DeviceModel::CopyFrom(const DeviceModel& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:DeviceModel)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeviceModel::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000001f) != 0x0000001f) return false;
  return true;
}

void DeviceModel::Swap(DeviceModel* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DeviceModel::InternalSwap(DeviceModel* other) {
  name_.Swap(&other->name_);
  description_.Swap(&other->description_);
  std::swap(base_model_, other->base_model_);
  std::swap(type_, other->type_);
  std::swap(category_, other->category_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata DeviceModel::GetMetadata() const {
  protobuf_fl_5fjob_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_fl_5fjob_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// DeviceModel

// required .DeviceBaseModel base_model = 1;
bool DeviceModel::has_base_model() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void DeviceModel::set_has_base_model() {
  _has_bits_[0] |= 0x00000004u;
}
void DeviceModel::clear_has_base_model() {
  _has_bits_[0] &= ~0x00000004u;
}
void DeviceModel::clear_base_model() {
  base_model_ = 0;
  clear_has_base_model();
}
::DeviceBaseModel DeviceModel::base_model() const {
  // @@protoc_insertion_point(field_get:DeviceModel.base_model)
  return static_cast< ::DeviceBaseModel >(base_model_);
}
void DeviceModel::set_base_model(::DeviceBaseModel value) {
  assert(::DeviceBaseModel_IsValid(value));
  set_has_base_model();
  base_model_ = value;
  // @@protoc_insertion_point(field_set:DeviceModel.base_model)
}

// required string name = 2;
bool DeviceModel::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void DeviceModel::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
void DeviceModel::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
void DeviceModel::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_name();
}
const ::std::string& DeviceModel::name() const {
  // @@protoc_insertion_point(field_get:DeviceModel.name)
  return name_.GetNoArena();
}
void DeviceModel::set_name(const ::std::string& value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:DeviceModel.name)
}
#if LANG_CXX11
void DeviceModel::set_name(::std::string&& value) {
  set_has_name();
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:DeviceModel.name)
}
#endif
void DeviceModel::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:DeviceModel.name)
}
void DeviceModel::set_name(const char* value, size_t size) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:DeviceModel.name)
}
::std::string* DeviceModel::mutable_name() {
  set_has_name();
  // @@protoc_insertion_point(field_mutable:DeviceModel.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* DeviceModel::release_name() {
  // @@protoc_insertion_point(field_release:DeviceModel.name)
  clear_has_name();
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void DeviceModel::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:DeviceModel.name)
}

// required string description = 3;
bool DeviceModel::has_description() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void DeviceModel::set_has_description() {
  _has_bits_[0] |= 0x00000002u;
}
void DeviceModel::clear_has_description() {
  _has_bits_[0] &= ~0x00000002u;
}
void DeviceModel::clear_description() {
  description_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_description();
}
const ::std::string& DeviceModel::description() const {
  // @@protoc_insertion_point(field_get:DeviceModel.description)
  return description_.GetNoArena();
}
void DeviceModel::set_description(const ::std::string& value) {
  set_has_description();
  description_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:DeviceModel.description)
}
#if LANG_CXX11
void DeviceModel::set_description(::std::string&& value) {
  set_has_description();
  description_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:DeviceModel.description)
}
#endif
void DeviceModel::set_description(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_description();
  description_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:DeviceModel.description)
}
void DeviceModel::set_description(const char* value, size_t size) {
  set_has_description();
  description_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:DeviceModel.description)
}
::std::string* DeviceModel::mutable_description() {
  set_has_description();
  // @@protoc_insertion_point(field_mutable:DeviceModel.description)
  return description_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* DeviceModel::release_description() {
  // @@protoc_insertion_point(field_release:DeviceModel.description)
  clear_has_description();
  return description_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void DeviceModel::set_allocated_description(::std::string* description) {
  if (description != NULL) {
    set_has_description();
  } else {
    clear_has_description();
  }
  description_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), description);
  // @@protoc_insertion_point(field_set_allocated:DeviceModel.description)
}

// required .DeviceModel.Type type = 4;
bool DeviceModel::has_type() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void DeviceModel::set_has_type() {
  _has_bits_[0] |= 0x00000008u;
}
void DeviceModel::clear_has_type() {
  _has_bits_[0] &= ~0x00000008u;
}
void DeviceModel::clear_type() {
  type_ = 0;
  clear_has_type();
}
::DeviceModel_Type DeviceModel::type() const {
  // @@protoc_insertion_point(field_get:DeviceModel.type)
  return static_cast< ::DeviceModel_Type >(type_);
}
void DeviceModel::set_type(::DeviceModel_Type value) {
  assert(::DeviceModel_Type_IsValid(value));
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:DeviceModel.type)
}

// required .DeviceModel.Category category = 5;
bool DeviceModel::has_category() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void DeviceModel::set_has_category() {
  _has_bits_[0] |= 0x00000010u;
}
void DeviceModel::clear_has_category() {
  _has_bits_[0] &= ~0x00000010u;
}
void DeviceModel::clear_category() {
  category_ = 0;
  clear_has_category();
}
::DeviceModel_Category DeviceModel::category() const {
  // @@protoc_insertion_point(field_get:DeviceModel.category)
  return static_cast< ::DeviceModel_Category >(category_);
}
void DeviceModel::set_category(::DeviceModel_Category value) {
  assert(::DeviceModel_Category_IsValid(value));
  set_has_category();
  category_ = value;
  // @@protoc_insertion_point(field_set:DeviceModel.category)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DeviceModels::kDevFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DeviceModels::DeviceModels()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_fl_5fjob_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:DeviceModels)
}
DeviceModels::DeviceModels(const DeviceModels& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      dev_(from.dev_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:DeviceModels)
}

void DeviceModels::SharedCtor() {
  _cached_size_ = 0;
}

DeviceModels::~DeviceModels() {
  // @@protoc_insertion_point(destructor:DeviceModels)
  SharedDtor();
}

void DeviceModels::SharedDtor() {
}

void DeviceModels::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DeviceModels::descriptor() {
  protobuf_fl_5fjob_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_fl_5fjob_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DeviceModels& DeviceModels::default_instance() {
  protobuf_fl_5fjob_2eproto::InitDefaults();
  return *internal_default_instance();
}

DeviceModels* DeviceModels::New(::google::protobuf::Arena* arena) const {
  DeviceModels* n = new DeviceModels;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void DeviceModels::Clear() {
// @@protoc_insertion_point(message_clear_start:DeviceModels)
  dev_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool DeviceModels::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:DeviceModels)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .DeviceModel dev = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_dev()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:DeviceModels)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:DeviceModels)
  return false;
#undef DO_
}

void DeviceModels::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:DeviceModels)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .DeviceModel dev = 1;
  for (unsigned int i = 0, n = this->dev_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->dev(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:DeviceModels)
}

::google::protobuf::uint8* DeviceModels::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:DeviceModels)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .DeviceModel dev = 1;
  for (unsigned int i = 0, n = this->dev_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->dev(i), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:DeviceModels)
  return target;
}

size_t DeviceModels::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:DeviceModels)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // repeated .DeviceModel dev = 1;
  {
    unsigned int count = this->dev_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->dev(i));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DeviceModels::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:DeviceModels)
  GOOGLE_DCHECK_NE(&from, this);
  const DeviceModels* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DeviceModels>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:DeviceModels)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:DeviceModels)
    MergeFrom(*source);
  }
}

void DeviceModels::MergeFrom(const DeviceModels& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:DeviceModels)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  dev_.MergeFrom(from.dev_);
}

void DeviceModels::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:DeviceModels)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DeviceModels::CopyFrom(const DeviceModels& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:DeviceModels)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeviceModels::IsInitialized() const {
  if (!::google::protobuf::internal::AllAreInitialized(this->dev())) return false;
  return true;
}

void DeviceModels::Swap(DeviceModels* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DeviceModels::InternalSwap(DeviceModels* other) {
  dev_.InternalSwap(&other->dev_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata DeviceModels::GetMetadata() const {
  protobuf_fl_5fjob_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_fl_5fjob_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// DeviceModels

// repeated .DeviceModel dev = 1;
int DeviceModels::dev_size() const {
  return dev_.size();
}
void DeviceModels::clear_dev() {
  dev_.Clear();
}
const ::DeviceModel& DeviceModels::dev(int index) const {
  // @@protoc_insertion_point(field_get:DeviceModels.dev)
  return dev_.Get(index);
}
::DeviceModel* DeviceModels::mutable_dev(int index) {
  // @@protoc_insertion_point(field_mutable:DeviceModels.dev)
  return dev_.Mutable(index);
}
::DeviceModel* DeviceModels::add_dev() {
  // @@protoc_insertion_point(field_add:DeviceModels.dev)
  return dev_.Add();
}
::google::protobuf::RepeatedPtrField< ::DeviceModel >*
DeviceModels::mutable_dev() {
  // @@protoc_insertion_point(field_mutable_list:DeviceModels.dev)
  return &dev_;
}
const ::google::protobuf::RepeatedPtrField< ::DeviceModel >&
DeviceModels::dev() const {
  // @@protoc_insertion_point(field_list:DeviceModels.dev)
  return dev_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PBVersion::kMajorFieldNumber;
const int PBVersion::kMinorFieldNumber;
const int PBVersion::kPatchFieldNumber;
const int PBVersion::kSuffixFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PBVersion::PBVersion()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_fl_5fjob_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:PBVersion)
}
PBVersion::PBVersion(const PBVersion& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  suffix_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_suffix()) {
    suffix_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.suffix_);
  }
  ::memcpy(&major_, &from.major_,
    reinterpret_cast<char*>(&patch_) -
    reinterpret_cast<char*>(&major_) + sizeof(patch_));
  // @@protoc_insertion_point(copy_constructor:PBVersion)
}

void PBVersion::SharedCtor() {
  _cached_size_ = 0;
  suffix_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&major_, 0, reinterpret_cast<char*>(&patch_) -
    reinterpret_cast<char*>(&major_) + sizeof(patch_));
}

PBVersion::~PBVersion() {
  // @@protoc_insertion_point(destructor:PBVersion)
  SharedDtor();
}

void PBVersion::SharedDtor() {
  suffix_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void PBVersion::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PBVersion::descriptor() {
  protobuf_fl_5fjob_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_fl_5fjob_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PBVersion& PBVersion::default_instance() {
  protobuf_fl_5fjob_2eproto::InitDefaults();
  return *internal_default_instance();
}

PBVersion* PBVersion::New(::google::protobuf::Arena* arena) const {
  PBVersion* n = new PBVersion;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PBVersion::Clear() {
// @@protoc_insertion_point(message_clear_start:PBVersion)
  if (has_suffix()) {
    GOOGLE_DCHECK(!suffix_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
    (*suffix_.UnsafeRawStringPointer())->clear();
  }
  if (_has_bits_[0 / 32] & 14u) {
    ::memset(&major_, 0, reinterpret_cast<char*>(&patch_) -
      reinterpret_cast<char*>(&major_) + sizeof(patch_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool PBVersion::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:PBVersion)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 major = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          set_has_major();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &major_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 minor = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {
          set_has_minor();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &minor_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 patch = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u)) {
          set_has_patch();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &patch_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string suffix = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_suffix()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->suffix().data(), this->suffix().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "PBVersion.suffix");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:PBVersion)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:PBVersion)
  return false;
#undef DO_
}

void PBVersion::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:PBVersion)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 major = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->major(), output);
  }

  // optional uint32 minor = 2;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->minor(), output);
  }

  // optional uint32 patch = 3;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->patch(), output);
  }

  // optional string suffix = 4;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->suffix().data(), this->suffix().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "PBVersion.suffix");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->suffix(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:PBVersion)
}

::google::protobuf::uint8* PBVersion::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:PBVersion)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 major = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->major(), target);
  }

  // optional uint32 minor = 2;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->minor(), target);
  }

  // optional uint32 patch = 3;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->patch(), target);
  }

  // optional string suffix = 4;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->suffix().data(), this->suffix().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "PBVersion.suffix");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->suffix(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:PBVersion)
  return target;
}

size_t PBVersion::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:PBVersion)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (_has_bits_[0 / 32] & 15u) {
    // optional string suffix = 4;
    if (has_suffix()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->suffix());
    }

    // optional uint32 major = 1;
    if (has_major()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->major());
    }

    // optional uint32 minor = 2;
    if (has_minor()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->minor());
    }

    // optional uint32 patch = 3;
    if (has_patch()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->patch());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PBVersion::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:PBVersion)
  GOOGLE_DCHECK_NE(&from, this);
  const PBVersion* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PBVersion>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:PBVersion)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:PBVersion)
    MergeFrom(*source);
  }
}

void PBVersion::MergeFrom(const PBVersion& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:PBVersion)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_suffix();
      suffix_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.suffix_);
    }
    if (cached_has_bits & 0x00000002u) {
      major_ = from.major_;
    }
    if (cached_has_bits & 0x00000004u) {
      minor_ = from.minor_;
    }
    if (cached_has_bits & 0x00000008u) {
      patch_ = from.patch_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void PBVersion::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:PBVersion)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PBVersion::CopyFrom(const PBVersion& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PBVersion)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PBVersion::IsInitialized() const {
  return true;
}

void PBVersion::Swap(PBVersion* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PBVersion::InternalSwap(PBVersion* other) {
  suffix_.Swap(&other->suffix_);
  std::swap(major_, other->major_);
  std::swap(minor_, other->minor_);
  std::swap(patch_, other->patch_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PBVersion::GetMetadata() const {
  protobuf_fl_5fjob_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_fl_5fjob_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PBVersion

// optional uint32 major = 1;
bool PBVersion::has_major() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void PBVersion::set_has_major() {
  _has_bits_[0] |= 0x00000002u;
}
void PBVersion::clear_has_major() {
  _has_bits_[0] &= ~0x00000002u;
}
void PBVersion::clear_major() {
  major_ = 0u;
  clear_has_major();
}
::google::protobuf::uint32 PBVersion::major() const {
  // @@protoc_insertion_point(field_get:PBVersion.major)
  return major_;
}
void PBVersion::set_major(::google::protobuf::uint32 value) {
  set_has_major();
  major_ = value;
  // @@protoc_insertion_point(field_set:PBVersion.major)
}

// optional uint32 minor = 2;
bool PBVersion::has_minor() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void PBVersion::set_has_minor() {
  _has_bits_[0] |= 0x00000004u;
}
void PBVersion::clear_has_minor() {
  _has_bits_[0] &= ~0x00000004u;
}
void PBVersion::clear_minor() {
  minor_ = 0u;
  clear_has_minor();
}
::google::protobuf::uint32 PBVersion::minor() const {
  // @@protoc_insertion_point(field_get:PBVersion.minor)
  return minor_;
}
void PBVersion::set_minor(::google::protobuf::uint32 value) {
  set_has_minor();
  minor_ = value;
  // @@protoc_insertion_point(field_set:PBVersion.minor)
}

// optional uint32 patch = 3;
bool PBVersion::has_patch() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void PBVersion::set_has_patch() {
  _has_bits_[0] |= 0x00000008u;
}
void PBVersion::clear_has_patch() {
  _has_bits_[0] &= ~0x00000008u;
}
void PBVersion::clear_patch() {
  patch_ = 0u;
  clear_has_patch();
}
::google::protobuf::uint32 PBVersion::patch() const {
  // @@protoc_insertion_point(field_get:PBVersion.patch)
  return patch_;
}
void PBVersion::set_patch(::google::protobuf::uint32 value) {
  set_has_patch();
  patch_ = value;
  // @@protoc_insertion_point(field_set:PBVersion.patch)
}

// optional string suffix = 4;
bool PBVersion::has_suffix() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void PBVersion::set_has_suffix() {
  _has_bits_[0] |= 0x00000001u;
}
void PBVersion::clear_has_suffix() {
  _has_bits_[0] &= ~0x00000001u;
}
void PBVersion::clear_suffix() {
  suffix_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_suffix();
}
const ::std::string& PBVersion::suffix() const {
  // @@protoc_insertion_point(field_get:PBVersion.suffix)
  return suffix_.GetNoArena();
}
void PBVersion::set_suffix(const ::std::string& value) {
  set_has_suffix();
  suffix_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:PBVersion.suffix)
}
#if LANG_CXX11
void PBVersion::set_suffix(::std::string&& value) {
  set_has_suffix();
  suffix_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:PBVersion.suffix)
}
#endif
void PBVersion::set_suffix(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_suffix();
  suffix_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:PBVersion.suffix)
}
void PBVersion::set_suffix(const char* value, size_t size) {
  set_has_suffix();
  suffix_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:PBVersion.suffix)
}
::std::string* PBVersion::mutable_suffix() {
  set_has_suffix();
  // @@protoc_insertion_point(field_mutable:PBVersion.suffix)
  return suffix_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* PBVersion::release_suffix() {
  // @@protoc_insertion_point(field_release:PBVersion.suffix)
  clear_has_suffix();
  return suffix_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void PBVersion::set_allocated_suffix(::std::string* suffix) {
  if (suffix != NULL) {
    set_has_suffix();
  } else {
    clear_has_suffix();
  }
  suffix_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), suffix);
  // @@protoc_insertion_point(field_set_allocated:PBVersion.suffix)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PBPosition::kXFieldNumber;
const int PBPosition::kYFieldNumber;
const int PBPosition::kZFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PBPosition::PBPosition()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_fl_5fjob_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:PBPosition)
}
PBPosition::PBPosition(const PBPosition& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&x_, &from.x_,
    reinterpret_cast<char*>(&z_) -
    reinterpret_cast<char*>(&x_) + sizeof(z_));
  // @@protoc_insertion_point(copy_constructor:PBPosition)
}

void PBPosition::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&x_, 0, reinterpret_cast<char*>(&z_) -
    reinterpret_cast<char*>(&x_) + sizeof(z_));
}

PBPosition::~PBPosition() {
  // @@protoc_insertion_point(destructor:PBPosition)
  SharedDtor();
}

void PBPosition::SharedDtor() {
}

void PBPosition::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PBPosition::descriptor() {
  protobuf_fl_5fjob_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_fl_5fjob_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PBPosition& PBPosition::default_instance() {
  protobuf_fl_5fjob_2eproto::InitDefaults();
  return *internal_default_instance();
}

PBPosition* PBPosition::New(::google::protobuf::Arena* arena) const {
  PBPosition* n = new PBPosition;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PBPosition::Clear() {
// @@protoc_insertion_point(message_clear_start:PBPosition)
  if (_has_bits_[0 / 32] & 7u) {
    ::memset(&x_, 0, reinterpret_cast<char*>(&z_) -
      reinterpret_cast<char*>(&x_) + sizeof(z_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool PBPosition::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:PBPosition)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required float x = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(13u)) {
          set_has_x();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &x_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required float y = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(21u)) {
          set_has_y();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &y_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional float z = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(29u)) {
          set_has_z();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &z_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:PBPosition)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:PBPosition)
  return false;
#undef DO_
}

void PBPosition::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:PBPosition)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required float x = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(1, this->x(), output);
  }

  // required float y = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->y(), output);
  }

  // optional float z = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(3, this->z(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:PBPosition)
}

::google::protobuf::uint8* PBPosition::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:PBPosition)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required float x = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(1, this->x(), target);
  }

  // required float y = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->y(), target);
  }

  // optional float z = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(3, this->z(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:PBPosition)
  return target;
}

size_t PBPosition::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:PBPosition)
  size_t total_size = 0;

  if (has_x()) {
    // required float x = 1;
    total_size += 1 + 4;
  }

  if (has_y()) {
    // required float y = 2;
    total_size += 1 + 4;
  }

  return total_size;
}
size_t PBPosition::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:PBPosition)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required float x = 1;
    total_size += 1 + 4;

    // required float y = 2;
    total_size += 1 + 4;

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  // optional float z = 3;
  if (has_z()) {
    total_size += 1 + 4;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PBPosition::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:PBPosition)
  GOOGLE_DCHECK_NE(&from, this);
  const PBPosition* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PBPosition>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:PBPosition)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:PBPosition)
    MergeFrom(*source);
  }
}

void PBPosition::MergeFrom(const PBPosition& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:PBPosition)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      x_ = from.x_;
    }
    if (cached_has_bits & 0x00000002u) {
      y_ = from.y_;
    }
    if (cached_has_bits & 0x00000004u) {
      z_ = from.z_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void PBPosition::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:PBPosition)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PBPosition::CopyFrom(const PBPosition& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PBPosition)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PBPosition::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  return true;
}

void PBPosition::Swap(PBPosition* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PBPosition::InternalSwap(PBPosition* other) {
  std::swap(x_, other->x_);
  std::swap(y_, other->y_);
  std::swap(z_, other->z_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PBPosition::GetMetadata() const {
  protobuf_fl_5fjob_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_fl_5fjob_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PBPosition

// required float x = 1;
bool PBPosition::has_x() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void PBPosition::set_has_x() {
  _has_bits_[0] |= 0x00000001u;
}
void PBPosition::clear_has_x() {
  _has_bits_[0] &= ~0x00000001u;
}
void PBPosition::clear_x() {
  x_ = 0;
  clear_has_x();
}
float PBPosition::x() const {
  // @@protoc_insertion_point(field_get:PBPosition.x)
  return x_;
}
void PBPosition::set_x(float value) {
  set_has_x();
  x_ = value;
  // @@protoc_insertion_point(field_set:PBPosition.x)
}

// required float y = 2;
bool PBPosition::has_y() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void PBPosition::set_has_y() {
  _has_bits_[0] |= 0x00000002u;
}
void PBPosition::clear_has_y() {
  _has_bits_[0] &= ~0x00000002u;
}
void PBPosition::clear_y() {
  y_ = 0;
  clear_has_y();
}
float PBPosition::y() const {
  // @@protoc_insertion_point(field_get:PBPosition.y)
  return y_;
}
void PBPosition::set_y(float value) {
  set_has_y();
  y_ = value;
  // @@protoc_insertion_point(field_set:PBPosition.y)
}

// optional float z = 3;
bool PBPosition::has_z() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void PBPosition::set_has_z() {
  _has_bits_[0] |= 0x00000004u;
}
void PBPosition::clear_has_z() {
  _has_bits_[0] &= ~0x00000004u;
}
void PBPosition::clear_z() {
  z_ = 0;
  clear_has_z();
}
float PBPosition::z() const {
  // @@protoc_insertion_point(field_get:PBPosition.z)
  return z_;
}
void PBPosition::set_z(float value) {
  set_has_z();
  z_ = value;
  // @@protoc_insertion_point(field_set:PBPosition.z)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PBTransform::kM11FieldNumber;
const int PBTransform::kM12FieldNumber;
const int PBTransform::kM13FieldNumber;
const int PBTransform::kM21FieldNumber;
const int PBTransform::kM22FieldNumber;
const int PBTransform::kM23FieldNumber;
const int PBTransform::kM31FieldNumber;
const int PBTransform::kM32FieldNumber;
const int PBTransform::kM33FieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PBTransform::PBTransform()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_fl_5fjob_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:PBTransform)
}
PBTransform::PBTransform(const PBTransform& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&m11_, &from.m11_,
    reinterpret_cast<char*>(&m33_) -
    reinterpret_cast<char*>(&m11_) + sizeof(m33_));
  // @@protoc_insertion_point(copy_constructor:PBTransform)
}

void PBTransform::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&m11_, 0, reinterpret_cast<char*>(&m33_) -
    reinterpret_cast<char*>(&m11_) + sizeof(m33_));
}

PBTransform::~PBTransform() {
  // @@protoc_insertion_point(destructor:PBTransform)
  SharedDtor();
}

void PBTransform::SharedDtor() {
}

void PBTransform::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PBTransform::descriptor() {
  protobuf_fl_5fjob_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_fl_5fjob_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PBTransform& PBTransform::default_instance() {
  protobuf_fl_5fjob_2eproto::InitDefaults();
  return *internal_default_instance();
}

PBTransform* PBTransform::New(::google::protobuf::Arena* arena) const {
  PBTransform* n = new PBTransform;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PBTransform::Clear() {
// @@protoc_insertion_point(message_clear_start:PBTransform)
  if (_has_bits_[0 / 32] & 255u) {
    ::memset(&m11_, 0, reinterpret_cast<char*>(&m32_) -
      reinterpret_cast<char*>(&m11_) + sizeof(m32_));
  }
  m33_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool PBTransform::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:PBTransform)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required float m11 = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(13u)) {
          set_has_m11();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &m11_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required float m12 = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(21u)) {
          set_has_m12();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &m12_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required float m13 = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(29u)) {
          set_has_m13();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &m13_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required float m21 = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(37u)) {
          set_has_m21();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &m21_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required float m22 = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(45u)) {
          set_has_m22();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &m22_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required float m23 = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(53u)) {
          set_has_m23();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &m23_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required float m31 = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(61u)) {
          set_has_m31();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &m31_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required float m32 = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(69u)) {
          set_has_m32();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &m32_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required float m33 = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(77u)) {
          set_has_m33();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &m33_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:PBTransform)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:PBTransform)
  return false;
#undef DO_
}

void PBTransform::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:PBTransform)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required float m11 = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(1, this->m11(), output);
  }

  // required float m12 = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->m12(), output);
  }

  // required float m13 = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(3, this->m13(), output);
  }

  // required float m21 = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(4, this->m21(), output);
  }

  // required float m22 = 5;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(5, this->m22(), output);
  }

  // required float m23 = 6;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(6, this->m23(), output);
  }

  // required float m31 = 7;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(7, this->m31(), output);
  }

  // required float m32 = 8;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(8, this->m32(), output);
  }

  // required float m33 = 9;
  if (cached_has_bits & 0x00000100u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(9, this->m33(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:PBTransform)
}

::google::protobuf::uint8* PBTransform::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:PBTransform)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required float m11 = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(1, this->m11(), target);
  }

  // required float m12 = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->m12(), target);
  }

  // required float m13 = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(3, this->m13(), target);
  }

  // required float m21 = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(4, this->m21(), target);
  }

  // required float m22 = 5;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(5, this->m22(), target);
  }

  // required float m23 = 6;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(6, this->m23(), target);
  }

  // required float m31 = 7;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(7, this->m31(), target);
  }

  // required float m32 = 8;
  if (cached_has_bits & 0x00000080u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(8, this->m32(), target);
  }

  // required float m33 = 9;
  if (cached_has_bits & 0x00000100u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(9, this->m33(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:PBTransform)
  return target;
}

size_t PBTransform::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:PBTransform)
  size_t total_size = 0;

  if (has_m11()) {
    // required float m11 = 1;
    total_size += 1 + 4;
  }

  if (has_m12()) {
    // required float m12 = 2;
    total_size += 1 + 4;
  }

  if (has_m13()) {
    // required float m13 = 3;
    total_size += 1 + 4;
  }

  if (has_m21()) {
    // required float m21 = 4;
    total_size += 1 + 4;
  }

  if (has_m22()) {
    // required float m22 = 5;
    total_size += 1 + 4;
  }

  if (has_m23()) {
    // required float m23 = 6;
    total_size += 1 + 4;
  }

  if (has_m31()) {
    // required float m31 = 7;
    total_size += 1 + 4;
  }

  if (has_m32()) {
    // required float m32 = 8;
    total_size += 1 + 4;
  }

  if (has_m33()) {
    // required float m33 = 9;
    total_size += 1 + 4;
  }

  return total_size;
}
size_t PBTransform::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:PBTransform)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (((_has_bits_[0] & 0x000001ff) ^ 0x000001ff) == 0) {  // All required fields are present.
    // required float m11 = 1;
    total_size += 1 + 4;

    // required float m12 = 2;
    total_size += 1 + 4;

    // required float m13 = 3;
    total_size += 1 + 4;

    // required float m21 = 4;
    total_size += 1 + 4;

    // required float m22 = 5;
    total_size += 1 + 4;

    // required float m23 = 6;
    total_size += 1 + 4;

    // required float m31 = 7;
    total_size += 1 + 4;

    // required float m32 = 8;
    total_size += 1 + 4;

    // required float m33 = 9;
    total_size += 1 + 4;

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PBTransform::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:PBTransform)
  GOOGLE_DCHECK_NE(&from, this);
  const PBTransform* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PBTransform>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:PBTransform)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:PBTransform)
    MergeFrom(*source);
  }
}

void PBTransform::MergeFrom(const PBTransform& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:PBTransform)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      m11_ = from.m11_;
    }
    if (cached_has_bits & 0x00000002u) {
      m12_ = from.m12_;
    }
    if (cached_has_bits & 0x00000004u) {
      m13_ = from.m13_;
    }
    if (cached_has_bits & 0x00000008u) {
      m21_ = from.m21_;
    }
    if (cached_has_bits & 0x00000010u) {
      m22_ = from.m22_;
    }
    if (cached_has_bits & 0x00000020u) {
      m23_ = from.m23_;
    }
    if (cached_has_bits & 0x00000040u) {
      m31_ = from.m31_;
    }
    if (cached_has_bits & 0x00000080u) {
      m32_ = from.m32_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 0x00000100u) {
    set_m33(from.m33());
  }
}

void PBTransform::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:PBTransform)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PBTransform::CopyFrom(const PBTransform& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PBTransform)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PBTransform::IsInitialized() const {
  if ((_has_bits_[0] & 0x000001ff) != 0x000001ff) return false;
  return true;
}

void PBTransform::Swap(PBTransform* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PBTransform::InternalSwap(PBTransform* other) {
  std::swap(m11_, other->m11_);
  std::swap(m12_, other->m12_);
  std::swap(m13_, other->m13_);
  std::swap(m21_, other->m21_);
  std::swap(m22_, other->m22_);
  std::swap(m23_, other->m23_);
  std::swap(m31_, other->m31_);
  std::swap(m32_, other->m32_);
  std::swap(m33_, other->m33_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PBTransform::GetMetadata() const {
  protobuf_fl_5fjob_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_fl_5fjob_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PBTransform

// required float m11 = 1;
bool PBTransform::has_m11() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void PBTransform::set_has_m11() {
  _has_bits_[0] |= 0x00000001u;
}
void PBTransform::clear_has_m11() {
  _has_bits_[0] &= ~0x00000001u;
}
void PBTransform::clear_m11() {
  m11_ = 0;
  clear_has_m11();
}
float PBTransform::m11() const {
  // @@protoc_insertion_point(field_get:PBTransform.m11)
  return m11_;
}
void PBTransform::set_m11(float value) {
  set_has_m11();
  m11_ = value;
  // @@protoc_insertion_point(field_set:PBTransform.m11)
}

// required float m12 = 2;
bool PBTransform::has_m12() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void PBTransform::set_has_m12() {
  _has_bits_[0] |= 0x00000002u;
}
void PBTransform::clear_has_m12() {
  _has_bits_[0] &= ~0x00000002u;
}
void PBTransform::clear_m12() {
  m12_ = 0;
  clear_has_m12();
}
float PBTransform::m12() const {
  // @@protoc_insertion_point(field_get:PBTransform.m12)
  return m12_;
}
void PBTransform::set_m12(float value) {
  set_has_m12();
  m12_ = value;
  // @@protoc_insertion_point(field_set:PBTransform.m12)
}

// required float m13 = 3;
bool PBTransform::has_m13() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void PBTransform::set_has_m13() {
  _has_bits_[0] |= 0x00000004u;
}
void PBTransform::clear_has_m13() {
  _has_bits_[0] &= ~0x00000004u;
}
void PBTransform::clear_m13() {
  m13_ = 0;
  clear_has_m13();
}
float PBTransform::m13() const {
  // @@protoc_insertion_point(field_get:PBTransform.m13)
  return m13_;
}
void PBTransform::set_m13(float value) {
  set_has_m13();
  m13_ = value;
  // @@protoc_insertion_point(field_set:PBTransform.m13)
}

// required float m21 = 4;
bool PBTransform::has_m21() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void PBTransform::set_has_m21() {
  _has_bits_[0] |= 0x00000008u;
}
void PBTransform::clear_has_m21() {
  _has_bits_[0] &= ~0x00000008u;
}
void PBTransform::clear_m21() {
  m21_ = 0;
  clear_has_m21();
}
float PBTransform::m21() const {
  // @@protoc_insertion_point(field_get:PBTransform.m21)
  return m21_;
}
void PBTransform::set_m21(float value) {
  set_has_m21();
  m21_ = value;
  // @@protoc_insertion_point(field_set:PBTransform.m21)
}

// required float m22 = 5;
bool PBTransform::has_m22() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void PBTransform::set_has_m22() {
  _has_bits_[0] |= 0x00000010u;
}
void PBTransform::clear_has_m22() {
  _has_bits_[0] &= ~0x00000010u;
}
void PBTransform::clear_m22() {
  m22_ = 0;
  clear_has_m22();
}
float PBTransform::m22() const {
  // @@protoc_insertion_point(field_get:PBTransform.m22)
  return m22_;
}
void PBTransform::set_m22(float value) {
  set_has_m22();
  m22_ = value;
  // @@protoc_insertion_point(field_set:PBTransform.m22)
}

// required float m23 = 6;
bool PBTransform::has_m23() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void PBTransform::set_has_m23() {
  _has_bits_[0] |= 0x00000020u;
}
void PBTransform::clear_has_m23() {
  _has_bits_[0] &= ~0x00000020u;
}
void PBTransform::clear_m23() {
  m23_ = 0;
  clear_has_m23();
}
float PBTransform::m23() const {
  // @@protoc_insertion_point(field_get:PBTransform.m23)
  return m23_;
}
void PBTransform::set_m23(float value) {
  set_has_m23();
  m23_ = value;
  // @@protoc_insertion_point(field_set:PBTransform.m23)
}

// required float m31 = 7;
bool PBTransform::has_m31() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
void PBTransform::set_has_m31() {
  _has_bits_[0] |= 0x00000040u;
}
void PBTransform::clear_has_m31() {
  _has_bits_[0] &= ~0x00000040u;
}
void PBTransform::clear_m31() {
  m31_ = 0;
  clear_has_m31();
}
float PBTransform::m31() const {
  // @@protoc_insertion_point(field_get:PBTransform.m31)
  return m31_;
}
void PBTransform::set_m31(float value) {
  set_has_m31();
  m31_ = value;
  // @@protoc_insertion_point(field_set:PBTransform.m31)
}

// required float m32 = 8;
bool PBTransform::has_m32() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
void PBTransform::set_has_m32() {
  _has_bits_[0] |= 0x00000080u;
}
void PBTransform::clear_has_m32() {
  _has_bits_[0] &= ~0x00000080u;
}
void PBTransform::clear_m32() {
  m32_ = 0;
  clear_has_m32();
}
float PBTransform::m32() const {
  // @@protoc_insertion_point(field_get:PBTransform.m32)
  return m32_;
}
void PBTransform::set_m32(float value) {
  set_has_m32();
  m32_ = value;
  // @@protoc_insertion_point(field_set:PBTransform.m32)
}

// required float m33 = 9;
bool PBTransform::has_m33() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
void PBTransform::set_has_m33() {
  _has_bits_[0] |= 0x00000100u;
}
void PBTransform::clear_has_m33() {
  _has_bits_[0] &= ~0x00000100u;
}
void PBTransform::clear_m33() {
  m33_ = 0;
  clear_has_m33();
}
float PBTransform::m33() const {
  // @@protoc_insertion_point(field_get:PBTransform.m33)
  return m33_;
}
void PBTransform::set_m33(float value) {
  set_has_m33();
  m33_ = value;
  // @@protoc_insertion_point(field_set:PBTransform.m33)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PBGraphics::kPosFieldNumber;
const int PBGraphics::kTransformFieldNumber;
const int PBGraphics::kTypeFieldNumber;
const int PBGraphics::kZValueFieldNumber;
const int PBGraphics::kSvgDataFieldNumber;
const int PBGraphics::kImgDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PBGraphics::PBGraphics()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_fl_5fjob_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:PBGraphics)
}
PBGraphics::PBGraphics(const PBGraphics& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_type()) {
    type_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.type_);
  }
  svg_data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_svg_data()) {
    svg_data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.svg_data_);
  }
  img_data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_img_data()) {
    img_data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.img_data_);
  }
  if (from.has_pos()) {
    pos_ = new ::PBPosition(*from.pos_);
  } else {
    pos_ = NULL;
  }
  if (from.has_transform()) {
    transform_ = new ::PBTransform(*from.transform_);
  } else {
    transform_ = NULL;
  }
  z_value_ = from.z_value_;
  // @@protoc_insertion_point(copy_constructor:PBGraphics)
}

void PBGraphics::SharedCtor() {
  _cached_size_ = 0;
  type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  svg_data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  img_data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&pos_, 0, reinterpret_cast<char*>(&z_value_) -
    reinterpret_cast<char*>(&pos_) + sizeof(z_value_));
}

PBGraphics::~PBGraphics() {
  // @@protoc_insertion_point(destructor:PBGraphics)
  SharedDtor();
}

void PBGraphics::SharedDtor() {
  type_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  svg_data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  img_data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) {
    delete pos_;
  }
  if (this != internal_default_instance()) {
    delete transform_;
  }
}

void PBGraphics::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PBGraphics::descriptor() {
  protobuf_fl_5fjob_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_fl_5fjob_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PBGraphics& PBGraphics::default_instance() {
  protobuf_fl_5fjob_2eproto::InitDefaults();
  return *internal_default_instance();
}

PBGraphics* PBGraphics::New(::google::protobuf::Arena* arena) const {
  PBGraphics* n = new PBGraphics;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PBGraphics::Clear() {
// @@protoc_insertion_point(message_clear_start:PBGraphics)
  if (_has_bits_[0 / 32] & 31u) {
    if (has_type()) {
      GOOGLE_DCHECK(!type_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*type_.UnsafeRawStringPointer())->clear();
    }
    if (has_svg_data()) {
      GOOGLE_DCHECK(!svg_data_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*svg_data_.UnsafeRawStringPointer())->clear();
    }
    if (has_img_data()) {
      GOOGLE_DCHECK(!img_data_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*img_data_.UnsafeRawStringPointer())->clear();
    }
    if (has_pos()) {
      GOOGLE_DCHECK(pos_ != NULL);
      pos_->::PBPosition::Clear();
    }
    if (has_transform()) {
      GOOGLE_DCHECK(transform_ != NULL);
      transform_->::PBTransform::Clear();
    }
  }
  z_value_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool PBGraphics::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:PBGraphics)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .PBPosition pos = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_pos()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .PBTransform transform = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_transform()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string type = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_type()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->type().data(), this->type().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "PBGraphics.type");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional float z_value = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(37u)) {
          set_has_z_value();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &z_value_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes svg_data = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_svg_data()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes img_data = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_img_data()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:PBGraphics)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:PBGraphics)
  return false;
#undef DO_
}

void PBGraphics::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:PBGraphics)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .PBPosition pos = 1;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->pos_, output);
  }

  // optional .PBTransform transform = 2;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->transform_, output);
  }

  // optional string type = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->type().data(), this->type().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "PBGraphics.type");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->type(), output);
  }

  // optional float z_value = 4;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(4, this->z_value(), output);
  }

  // optional bytes svg_data = 5;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      5, this->svg_data(), output);
  }

  // optional bytes img_data = 6;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      6, this->img_data(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:PBGraphics)
}

::google::protobuf::uint8* PBGraphics::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:PBGraphics)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .PBPosition pos = 1;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->pos_, deterministic, target);
  }

  // optional .PBTransform transform = 2;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->transform_, deterministic, target);
  }

  // optional string type = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->type().data(), this->type().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "PBGraphics.type");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->type(), target);
  }

  // optional float z_value = 4;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(4, this->z_value(), target);
  }

  // optional bytes svg_data = 5;
  if (cached_has_bits & 0x00000002u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        5, this->svg_data(), target);
  }

  // optional bytes img_data = 6;
  if (cached_has_bits & 0x00000004u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        6, this->img_data(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:PBGraphics)
  return target;
}

size_t PBGraphics::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:PBGraphics)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (_has_bits_[0 / 32] & 63u) {
    // optional string type = 3;
    if (has_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->type());
    }

    // optional bytes svg_data = 5;
    if (has_svg_data()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->svg_data());
    }

    // optional bytes img_data = 6;
    if (has_img_data()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->img_data());
    }

    // optional .PBPosition pos = 1;
    if (has_pos()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->pos_);
    }

    // optional .PBTransform transform = 2;
    if (has_transform()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->transform_);
    }

    // optional float z_value = 4;
    if (has_z_value()) {
      total_size += 1 + 4;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PBGraphics::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:PBGraphics)
  GOOGLE_DCHECK_NE(&from, this);
  const PBGraphics* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PBGraphics>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:PBGraphics)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:PBGraphics)
    MergeFrom(*source);
  }
}

void PBGraphics::MergeFrom(const PBGraphics& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:PBGraphics)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 63u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_type();
      type_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.type_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_svg_data();
      svg_data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.svg_data_);
    }
    if (cached_has_bits & 0x00000004u) {
      set_has_img_data();
      img_data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.img_data_);
    }
    if (cached_has_bits & 0x00000008u) {
      mutable_pos()->::PBPosition::MergeFrom(from.pos());
    }
    if (cached_has_bits & 0x00000010u) {
      mutable_transform()->::PBTransform::MergeFrom(from.transform());
    }
    if (cached_has_bits & 0x00000020u) {
      z_value_ = from.z_value_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void PBGraphics::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:PBGraphics)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PBGraphics::CopyFrom(const PBGraphics& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PBGraphics)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PBGraphics::IsInitialized() const {
  if (has_pos()) {
    if (!this->pos_->IsInitialized()) return false;
  }
  if (has_transform()) {
    if (!this->transform_->IsInitialized()) return false;
  }
  return true;
}

void PBGraphics::Swap(PBGraphics* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PBGraphics::InternalSwap(PBGraphics* other) {
  type_.Swap(&other->type_);
  svg_data_.Swap(&other->svg_data_);
  img_data_.Swap(&other->img_data_);
  std::swap(pos_, other->pos_);
  std::swap(transform_, other->transform_);
  std::swap(z_value_, other->z_value_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PBGraphics::GetMetadata() const {
  protobuf_fl_5fjob_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_fl_5fjob_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PBGraphics

// optional .PBPosition pos = 1;
bool PBGraphics::has_pos() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void PBGraphics::set_has_pos() {
  _has_bits_[0] |= 0x00000008u;
}
void PBGraphics::clear_has_pos() {
  _has_bits_[0] &= ~0x00000008u;
}
void PBGraphics::clear_pos() {
  if (pos_ != NULL) pos_->::PBPosition::Clear();
  clear_has_pos();
}
const ::PBPosition& PBGraphics::pos() const {
  // @@protoc_insertion_point(field_get:PBGraphics.pos)
  return pos_ != NULL ? *pos_
                         : *::PBPosition::internal_default_instance();
}
::PBPosition* PBGraphics::mutable_pos() {
  set_has_pos();
  if (pos_ == NULL) {
    pos_ = new ::PBPosition;
  }
  // @@protoc_insertion_point(field_mutable:PBGraphics.pos)
  return pos_;
}
::PBPosition* PBGraphics::release_pos() {
  // @@protoc_insertion_point(field_release:PBGraphics.pos)
  clear_has_pos();
  ::PBPosition* temp = pos_;
  pos_ = NULL;
  return temp;
}
void PBGraphics::set_allocated_pos(::PBPosition* pos) {
  delete pos_;
  pos_ = pos;
  if (pos) {
    set_has_pos();
  } else {
    clear_has_pos();
  }
  // @@protoc_insertion_point(field_set_allocated:PBGraphics.pos)
}

// optional .PBTransform transform = 2;
bool PBGraphics::has_transform() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void PBGraphics::set_has_transform() {
  _has_bits_[0] |= 0x00000010u;
}
void PBGraphics::clear_has_transform() {
  _has_bits_[0] &= ~0x00000010u;
}
void PBGraphics::clear_transform() {
  if (transform_ != NULL) transform_->::PBTransform::Clear();
  clear_has_transform();
}
const ::PBTransform& PBGraphics::transform() const {
  // @@protoc_insertion_point(field_get:PBGraphics.transform)
  return transform_ != NULL ? *transform_
                         : *::PBTransform::internal_default_instance();
}
::PBTransform* PBGraphics::mutable_transform() {
  set_has_transform();
  if (transform_ == NULL) {
    transform_ = new ::PBTransform;
  }
  // @@protoc_insertion_point(field_mutable:PBGraphics.transform)
  return transform_;
}
::PBTransform* PBGraphics::release_transform() {
  // @@protoc_insertion_point(field_release:PBGraphics.transform)
  clear_has_transform();
  ::PBTransform* temp = transform_;
  transform_ = NULL;
  return temp;
}
void PBGraphics::set_allocated_transform(::PBTransform* transform) {
  delete transform_;
  transform_ = transform;
  if (transform) {
    set_has_transform();
  } else {
    clear_has_transform();
  }
  // @@protoc_insertion_point(field_set_allocated:PBGraphics.transform)
}

// optional string type = 3;
bool PBGraphics::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void PBGraphics::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
void PBGraphics::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
void PBGraphics::clear_type() {
  type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_type();
}
const ::std::string& PBGraphics::type() const {
  // @@protoc_insertion_point(field_get:PBGraphics.type)
  return type_.GetNoArena();
}
void PBGraphics::set_type(const ::std::string& value) {
  set_has_type();
  type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:PBGraphics.type)
}
#if LANG_CXX11
void PBGraphics::set_type(::std::string&& value) {
  set_has_type();
  type_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:PBGraphics.type)
}
#endif
void PBGraphics::set_type(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_type();
  type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:PBGraphics.type)
}
void PBGraphics::set_type(const char* value, size_t size) {
  set_has_type();
  type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:PBGraphics.type)
}
::std::string* PBGraphics::mutable_type() {
  set_has_type();
  // @@protoc_insertion_point(field_mutable:PBGraphics.type)
  return type_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* PBGraphics::release_type() {
  // @@protoc_insertion_point(field_release:PBGraphics.type)
  clear_has_type();
  return type_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void PBGraphics::set_allocated_type(::std::string* type) {
  if (type != NULL) {
    set_has_type();
  } else {
    clear_has_type();
  }
  type_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), type);
  // @@protoc_insertion_point(field_set_allocated:PBGraphics.type)
}

// optional float z_value = 4;
bool PBGraphics::has_z_value() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void PBGraphics::set_has_z_value() {
  _has_bits_[0] |= 0x00000020u;
}
void PBGraphics::clear_has_z_value() {
  _has_bits_[0] &= ~0x00000020u;
}
void PBGraphics::clear_z_value() {
  z_value_ = 0;
  clear_has_z_value();
}
float PBGraphics::z_value() const {
  // @@protoc_insertion_point(field_get:PBGraphics.z_value)
  return z_value_;
}
void PBGraphics::set_z_value(float value) {
  set_has_z_value();
  z_value_ = value;
  // @@protoc_insertion_point(field_set:PBGraphics.z_value)
}

// optional bytes svg_data = 5;
bool PBGraphics::has_svg_data() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void PBGraphics::set_has_svg_data() {
  _has_bits_[0] |= 0x00000002u;
}
void PBGraphics::clear_has_svg_data() {
  _has_bits_[0] &= ~0x00000002u;
}
void PBGraphics::clear_svg_data() {
  svg_data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_svg_data();
}
const ::std::string& PBGraphics::svg_data() const {
  // @@protoc_insertion_point(field_get:PBGraphics.svg_data)
  return svg_data_.GetNoArena();
}
void PBGraphics::set_svg_data(const ::std::string& value) {
  set_has_svg_data();
  svg_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:PBGraphics.svg_data)
}
#if LANG_CXX11
void PBGraphics::set_svg_data(::std::string&& value) {
  set_has_svg_data();
  svg_data_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:PBGraphics.svg_data)
}
#endif
void PBGraphics::set_svg_data(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_svg_data();
  svg_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:PBGraphics.svg_data)
}
void PBGraphics::set_svg_data(const void* value, size_t size) {
  set_has_svg_data();
  svg_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:PBGraphics.svg_data)
}
::std::string* PBGraphics::mutable_svg_data() {
  set_has_svg_data();
  // @@protoc_insertion_point(field_mutable:PBGraphics.svg_data)
  return svg_data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* PBGraphics::release_svg_data() {
  // @@protoc_insertion_point(field_release:PBGraphics.svg_data)
  clear_has_svg_data();
  return svg_data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void PBGraphics::set_allocated_svg_data(::std::string* svg_data) {
  if (svg_data != NULL) {
    set_has_svg_data();
  } else {
    clear_has_svg_data();
  }
  svg_data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), svg_data);
  // @@protoc_insertion_point(field_set_allocated:PBGraphics.svg_data)
}

// optional bytes img_data = 6;
bool PBGraphics::has_img_data() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void PBGraphics::set_has_img_data() {
  _has_bits_[0] |= 0x00000004u;
}
void PBGraphics::clear_has_img_data() {
  _has_bits_[0] &= ~0x00000004u;
}
void PBGraphics::clear_img_data() {
  img_data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_img_data();
}
const ::std::string& PBGraphics::img_data() const {
  // @@protoc_insertion_point(field_get:PBGraphics.img_data)
  return img_data_.GetNoArena();
}
void PBGraphics::set_img_data(const ::std::string& value) {
  set_has_img_data();
  img_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:PBGraphics.img_data)
}
#if LANG_CXX11
void PBGraphics::set_img_data(::std::string&& value) {
  set_has_img_data();
  img_data_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:PBGraphics.img_data)
}
#endif
void PBGraphics::set_img_data(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_img_data();
  img_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:PBGraphics.img_data)
}
void PBGraphics::set_img_data(const void* value, size_t size) {
  set_has_img_data();
  img_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:PBGraphics.img_data)
}
::std::string* PBGraphics::mutable_img_data() {
  set_has_img_data();
  // @@protoc_insertion_point(field_mutable:PBGraphics.img_data)
  return img_data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* PBGraphics::release_img_data() {
  // @@protoc_insertion_point(field_release:PBGraphics.img_data)
  clear_has_img_data();
  return img_data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void PBGraphics::set_allocated_img_data(::std::string* img_data) {
  if (img_data != NULL) {
    set_has_img_data();
  } else {
    clear_has_img_data();
  }
  img_data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), img_data);
  // @@protoc_insertion_point(field_set_allocated:PBGraphics.img_data)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PBWio::kGuidFieldNumber;
const int PBWio::kTitleFieldNumber;
const int PBWio::kLocationFieldNumber;
const int PBWio::kMacAddressFieldNumber;
const int PBWio::kModelFieldNumber;
const int PBWio::kSignalingFieldNumber;
const int PBWio::kGraphicsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PBWio::PBWio()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_fl_5fjob_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:PBWio)
}
PBWio::PBWio(const PBWio& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  guid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_guid()) {
    guid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.guid_);
  }
  title_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_title()) {
    title_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.title_);
  }
  location_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_location()) {
    location_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.location_);
  }
  mac_address_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_mac_address()) {
    mac_address_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.mac_address_);
  }
  if (from.has_graphics()) {
    graphics_ = new ::PBGraphics(*from.graphics_);
  } else {
    graphics_ = NULL;
  }
  ::memcpy(&model_, &from.model_,
    reinterpret_cast<char*>(&signaling_) -
    reinterpret_cast<char*>(&model_) + sizeof(signaling_));
  // @@protoc_insertion_point(copy_constructor:PBWio)
}

void PBWio::SharedCtor() {
  _cached_size_ = 0;
  guid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  title_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  location_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  mac_address_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&graphics_, 0, reinterpret_cast<char*>(&signaling_) -
    reinterpret_cast<char*>(&graphics_) + sizeof(signaling_));
}

PBWio::~PBWio() {
  // @@protoc_insertion_point(destructor:PBWio)
  SharedDtor();
}

void PBWio::SharedDtor() {
  guid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  title_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  location_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  mac_address_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) {
    delete graphics_;
  }
}

void PBWio::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PBWio::descriptor() {
  protobuf_fl_5fjob_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_fl_5fjob_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PBWio& PBWio::default_instance() {
  protobuf_fl_5fjob_2eproto::InitDefaults();
  return *internal_default_instance();
}

PBWio* PBWio::New(::google::protobuf::Arena* arena) const {
  PBWio* n = new PBWio;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PBWio::Clear() {
// @@protoc_insertion_point(message_clear_start:PBWio)
  if (_has_bits_[0 / 32] & 31u) {
    if (has_guid()) {
      GOOGLE_DCHECK(!guid_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*guid_.UnsafeRawStringPointer())->clear();
    }
    if (has_title()) {
      GOOGLE_DCHECK(!title_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*title_.UnsafeRawStringPointer())->clear();
    }
    if (has_location()) {
      GOOGLE_DCHECK(!location_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*location_.UnsafeRawStringPointer())->clear();
    }
    if (has_mac_address()) {
      GOOGLE_DCHECK(!mac_address_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*mac_address_.UnsafeRawStringPointer())->clear();
    }
    if (has_graphics()) {
      GOOGLE_DCHECK(graphics_ != NULL);
      graphics_->::PBGraphics::Clear();
    }
  }
  if (_has_bits_[0 / 32] & 96u) {
    ::memset(&model_, 0, reinterpret_cast<char*>(&signaling_) -
      reinterpret_cast<char*>(&model_) + sizeof(signaling_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool PBWio::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:PBWio)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string guid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_guid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->guid().data(), this->guid().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "PBWio.guid");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string title = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_title()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->title().data(), this->title().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "PBWio.title");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string location = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_location()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->location().data(), this->location().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "PBWio.location");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string mac_address = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_mac_address()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->mac_address().data(), this->mac_address().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "PBWio.mac_address");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .DeviceBaseModel model = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::DeviceBaseModel_IsValid(value)) {
            set_model(static_cast< ::DeviceBaseModel >(value));
          } else {
            mutable_unknown_fields()->AddVarint(5, value);
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .SignalingType signaling = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::SignalingType_IsValid(value)) {
            set_signaling(static_cast< ::SignalingType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(6, value);
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .PBGraphics graphics = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_graphics()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:PBWio)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:PBWio)
  return false;
#undef DO_
}

void PBWio::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:PBWio)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string guid = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->guid().data(), this->guid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "PBWio.guid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->guid(), output);
  }

  // optional string title = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->title().data(), this->title().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "PBWio.title");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->title(), output);
  }

  // optional string location = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->location().data(), this->location().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "PBWio.location");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->location(), output);
  }

  // optional string mac_address = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->mac_address().data(), this->mac_address().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "PBWio.mac_address");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->mac_address(), output);
  }

  // optional .DeviceBaseModel model = 5;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      5, this->model(), output);
  }

  // optional .SignalingType signaling = 6;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      6, this->signaling(), output);
  }

  // optional .PBGraphics graphics = 7;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, *this->graphics_, output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:PBWio)
}

::google::protobuf::uint8* PBWio::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:PBWio)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string guid = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->guid().data(), this->guid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "PBWio.guid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->guid(), target);
  }

  // optional string title = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->title().data(), this->title().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "PBWio.title");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->title(), target);
  }

  // optional string location = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->location().data(), this->location().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "PBWio.location");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->location(), target);
  }

  // optional string mac_address = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->mac_address().data(), this->mac_address().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "PBWio.mac_address");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->mac_address(), target);
  }

  // optional .DeviceBaseModel model = 5;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      5, this->model(), target);
  }

  // optional .SignalingType signaling = 6;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      6, this->signaling(), target);
  }

  // optional .PBGraphics graphics = 7;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        7, *this->graphics_, deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:PBWio)
  return target;
}

size_t PBWio::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:PBWio)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (_has_bits_[0 / 32] & 127u) {
    // optional string guid = 1;
    if (has_guid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->guid());
    }

    // optional string title = 2;
    if (has_title()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->title());
    }

    // optional string location = 3;
    if (has_location()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->location());
    }

    // optional string mac_address = 4;
    if (has_mac_address()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->mac_address());
    }

    // optional .PBGraphics graphics = 7;
    if (has_graphics()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->graphics_);
    }

    // optional .DeviceBaseModel model = 5;
    if (has_model()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->model());
    }

    // optional .SignalingType signaling = 6;
    if (has_signaling()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->signaling());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PBWio::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:PBWio)
  GOOGLE_DCHECK_NE(&from, this);
  const PBWio* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PBWio>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:PBWio)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:PBWio)
    MergeFrom(*source);
  }
}

void PBWio::MergeFrom(const PBWio& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:PBWio)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 127u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_guid();
      guid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.guid_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_title();
      title_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.title_);
    }
    if (cached_has_bits & 0x00000004u) {
      set_has_location();
      location_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.location_);
    }
    if (cached_has_bits & 0x00000008u) {
      set_has_mac_address();
      mac_address_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.mac_address_);
    }
    if (cached_has_bits & 0x00000010u) {
      mutable_graphics()->::PBGraphics::MergeFrom(from.graphics());
    }
    if (cached_has_bits & 0x00000020u) {
      model_ = from.model_;
    }
    if (cached_has_bits & 0x00000040u) {
      signaling_ = from.signaling_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void PBWio::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:PBWio)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PBWio::CopyFrom(const PBWio& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PBWio)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PBWio::IsInitialized() const {
  if (has_graphics()) {
    if (!this->graphics_->IsInitialized()) return false;
  }
  return true;
}

void PBWio::Swap(PBWio* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PBWio::InternalSwap(PBWio* other) {
  guid_.Swap(&other->guid_);
  title_.Swap(&other->title_);
  location_.Swap(&other->location_);
  mac_address_.Swap(&other->mac_address_);
  std::swap(graphics_, other->graphics_);
  std::swap(model_, other->model_);
  std::swap(signaling_, other->signaling_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PBWio::GetMetadata() const {
  protobuf_fl_5fjob_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_fl_5fjob_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PBWio

// optional string guid = 1;
bool PBWio::has_guid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void PBWio::set_has_guid() {
  _has_bits_[0] |= 0x00000001u;
}
void PBWio::clear_has_guid() {
  _has_bits_[0] &= ~0x00000001u;
}
void PBWio::clear_guid() {
  guid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_guid();
}
const ::std::string& PBWio::guid() const {
  // @@protoc_insertion_point(field_get:PBWio.guid)
  return guid_.GetNoArena();
}
void PBWio::set_guid(const ::std::string& value) {
  set_has_guid();
  guid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:PBWio.guid)
}
#if LANG_CXX11
void PBWio::set_guid(::std::string&& value) {
  set_has_guid();
  guid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:PBWio.guid)
}
#endif
void PBWio::set_guid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_guid();
  guid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:PBWio.guid)
}
void PBWio::set_guid(const char* value, size_t size) {
  set_has_guid();
  guid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:PBWio.guid)
}
::std::string* PBWio::mutable_guid() {
  set_has_guid();
  // @@protoc_insertion_point(field_mutable:PBWio.guid)
  return guid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* PBWio::release_guid() {
  // @@protoc_insertion_point(field_release:PBWio.guid)
  clear_has_guid();
  return guid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void PBWio::set_allocated_guid(::std::string* guid) {
  if (guid != NULL) {
    set_has_guid();
  } else {
    clear_has_guid();
  }
  guid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), guid);
  // @@protoc_insertion_point(field_set_allocated:PBWio.guid)
}

// optional string title = 2;
bool PBWio::has_title() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void PBWio::set_has_title() {
  _has_bits_[0] |= 0x00000002u;
}
void PBWio::clear_has_title() {
  _has_bits_[0] &= ~0x00000002u;
}
void PBWio::clear_title() {
  title_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_title();
}
const ::std::string& PBWio::title() const {
  // @@protoc_insertion_point(field_get:PBWio.title)
  return title_.GetNoArena();
}
void PBWio::set_title(const ::std::string& value) {
  set_has_title();
  title_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:PBWio.title)
}
#if LANG_CXX11
void PBWio::set_title(::std::string&& value) {
  set_has_title();
  title_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:PBWio.title)
}
#endif
void PBWio::set_title(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_title();
  title_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:PBWio.title)
}
void PBWio::set_title(const char* value, size_t size) {
  set_has_title();
  title_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:PBWio.title)
}
::std::string* PBWio::mutable_title() {
  set_has_title();
  // @@protoc_insertion_point(field_mutable:PBWio.title)
  return title_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* PBWio::release_title() {
  // @@protoc_insertion_point(field_release:PBWio.title)
  clear_has_title();
  return title_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void PBWio::set_allocated_title(::std::string* title) {
  if (title != NULL) {
    set_has_title();
  } else {
    clear_has_title();
  }
  title_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), title);
  // @@protoc_insertion_point(field_set_allocated:PBWio.title)
}

// optional string location = 3;
bool PBWio::has_location() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void PBWio::set_has_location() {
  _has_bits_[0] |= 0x00000004u;
}
void PBWio::clear_has_location() {
  _has_bits_[0] &= ~0x00000004u;
}
void PBWio::clear_location() {
  location_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_location();
}
const ::std::string& PBWio::location() const {
  // @@protoc_insertion_point(field_get:PBWio.location)
  return location_.GetNoArena();
}
void PBWio::set_location(const ::std::string& value) {
  set_has_location();
  location_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:PBWio.location)
}
#if LANG_CXX11
void PBWio::set_location(::std::string&& value) {
  set_has_location();
  location_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:PBWio.location)
}
#endif
void PBWio::set_location(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_location();
  location_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:PBWio.location)
}
void PBWio::set_location(const char* value, size_t size) {
  set_has_location();
  location_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:PBWio.location)
}
::std::string* PBWio::mutable_location() {
  set_has_location();
  // @@protoc_insertion_point(field_mutable:PBWio.location)
  return location_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* PBWio::release_location() {
  // @@protoc_insertion_point(field_release:PBWio.location)
  clear_has_location();
  return location_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void PBWio::set_allocated_location(::std::string* location) {
  if (location != NULL) {
    set_has_location();
  } else {
    clear_has_location();
  }
  location_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), location);
  // @@protoc_insertion_point(field_set_allocated:PBWio.location)
}

// optional string mac_address = 4;
bool PBWio::has_mac_address() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void PBWio::set_has_mac_address() {
  _has_bits_[0] |= 0x00000008u;
}
void PBWio::clear_has_mac_address() {
  _has_bits_[0] &= ~0x00000008u;
}
void PBWio::clear_mac_address() {
  mac_address_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_mac_address();
}
const ::std::string& PBWio::mac_address() const {
  // @@protoc_insertion_point(field_get:PBWio.mac_address)
  return mac_address_.GetNoArena();
}
void PBWio::set_mac_address(const ::std::string& value) {
  set_has_mac_address();
  mac_address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:PBWio.mac_address)
}
#if LANG_CXX11
void PBWio::set_mac_address(::std::string&& value) {
  set_has_mac_address();
  mac_address_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:PBWio.mac_address)
}
#endif
void PBWio::set_mac_address(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_mac_address();
  mac_address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:PBWio.mac_address)
}
void PBWio::set_mac_address(const char* value, size_t size) {
  set_has_mac_address();
  mac_address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:PBWio.mac_address)
}
::std::string* PBWio::mutable_mac_address() {
  set_has_mac_address();
  // @@protoc_insertion_point(field_mutable:PBWio.mac_address)
  return mac_address_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* PBWio::release_mac_address() {
  // @@protoc_insertion_point(field_release:PBWio.mac_address)
  clear_has_mac_address();
  return mac_address_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void PBWio::set_allocated_mac_address(::std::string* mac_address) {
  if (mac_address != NULL) {
    set_has_mac_address();
  } else {
    clear_has_mac_address();
  }
  mac_address_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), mac_address);
  // @@protoc_insertion_point(field_set_allocated:PBWio.mac_address)
}

// optional .DeviceBaseModel model = 5;
bool PBWio::has_model() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void PBWio::set_has_model() {
  _has_bits_[0] |= 0x00000020u;
}
void PBWio::clear_has_model() {
  _has_bits_[0] &= ~0x00000020u;
}
void PBWio::clear_model() {
  model_ = 0;
  clear_has_model();
}
::DeviceBaseModel PBWio::model() const {
  // @@protoc_insertion_point(field_get:PBWio.model)
  return static_cast< ::DeviceBaseModel >(model_);
}
void PBWio::set_model(::DeviceBaseModel value) {
  assert(::DeviceBaseModel_IsValid(value));
  set_has_model();
  model_ = value;
  // @@protoc_insertion_point(field_set:PBWio.model)
}

// optional .SignalingType signaling = 6;
bool PBWio::has_signaling() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
void PBWio::set_has_signaling() {
  _has_bits_[0] |= 0x00000040u;
}
void PBWio::clear_has_signaling() {
  _has_bits_[0] &= ~0x00000040u;
}
void PBWio::clear_signaling() {
  signaling_ = 0;
  clear_has_signaling();
}
::SignalingType PBWio::signaling() const {
  // @@protoc_insertion_point(field_get:PBWio.signaling)
  return static_cast< ::SignalingType >(signaling_);
}
void PBWio::set_signaling(::SignalingType value) {
  assert(::SignalingType_IsValid(value));
  set_has_signaling();
  signaling_ = value;
  // @@protoc_insertion_point(field_set:PBWio.signaling)
}

// optional .PBGraphics graphics = 7;
bool PBWio::has_graphics() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void PBWio::set_has_graphics() {
  _has_bits_[0] |= 0x00000010u;
}
void PBWio::clear_has_graphics() {
  _has_bits_[0] &= ~0x00000010u;
}
void PBWio::clear_graphics() {
  if (graphics_ != NULL) graphics_->::PBGraphics::Clear();
  clear_has_graphics();
}
const ::PBGraphics& PBWio::graphics() const {
  // @@protoc_insertion_point(field_get:PBWio.graphics)
  return graphics_ != NULL ? *graphics_
                         : *::PBGraphics::internal_default_instance();
}
::PBGraphics* PBWio::mutable_graphics() {
  set_has_graphics();
  if (graphics_ == NULL) {
    graphics_ = new ::PBGraphics;
  }
  // @@protoc_insertion_point(field_mutable:PBWio.graphics)
  return graphics_;
}
::PBGraphics* PBWio::release_graphics() {
  // @@protoc_insertion_point(field_release:PBWio.graphics)
  clear_has_graphics();
  ::PBGraphics* temp = graphics_;
  graphics_ = NULL;
  return temp;
}
void PBWio::set_allocated_graphics(::PBGraphics* graphics) {
  delete graphics_;
  graphics_ = graphics;
  if (graphics) {
    set_has_graphics();
  } else {
    clear_has_graphics();
  }
  // @@protoc_insertion_point(field_set_allocated:PBWio.graphics)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PBCorrelationInputFromZC::kZcGuidFieldNumber;
const int PBCorrelationInputFromZC::kInputFieldNumber;
const int PBCorrelationInputFromZC::kSystemStatusFieldNumber;
const int PBCorrelationInputFromZC::kLocalTroubleFieldNumber;
const int PBCorrelationInputFromZC::kRemoteTroubleFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PBCorrelationInputFromZC::PBCorrelationInputFromZC()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_fl_5fjob_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:PBCorrelationInputFromZC)
}
PBCorrelationInputFromZC::PBCorrelationInputFromZC(const PBCorrelationInputFromZC& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  zc_guid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_zc_guid()) {
    zc_guid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.zc_guid_);
  }
  clear_has_source();
  switch (from.source_case()) {
    case kInput: {
      set_input(from.input());
      break;
    }
    case kSystemStatus: {
      set_system_status(from.system_status());
      break;
    }
    case kLocalTrouble: {
      set_local_trouble(from.local_trouble());
      break;
    }
    case kRemoteTrouble: {
      set_remote_trouble(from.remote_trouble());
      break;
    }
    case SOURCE_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:PBCorrelationInputFromZC)
}

void PBCorrelationInputFromZC::SharedCtor() {
  _cached_size_ = 0;
  zc_guid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_source();
}

PBCorrelationInputFromZC::~PBCorrelationInputFromZC() {
  // @@protoc_insertion_point(destructor:PBCorrelationInputFromZC)
  SharedDtor();
}

void PBCorrelationInputFromZC::SharedDtor() {
  zc_guid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (has_source()) {
    clear_source();
  }
}

void PBCorrelationInputFromZC::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PBCorrelationInputFromZC::descriptor() {
  protobuf_fl_5fjob_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_fl_5fjob_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PBCorrelationInputFromZC& PBCorrelationInputFromZC::default_instance() {
  protobuf_fl_5fjob_2eproto::InitDefaults();
  return *internal_default_instance();
}

PBCorrelationInputFromZC* PBCorrelationInputFromZC::New(::google::protobuf::Arena* arena) const {
  PBCorrelationInputFromZC* n = new PBCorrelationInputFromZC;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PBCorrelationInputFromZC::clear_source() {
// @@protoc_insertion_point(one_of_clear_start:PBCorrelationInputFromZC)
  switch (source_case()) {
    case kInput: {
      // No need to clear
      break;
    }
    case kSystemStatus: {
      // No need to clear
      break;
    }
    case kLocalTrouble: {
      // No need to clear
      break;
    }
    case kRemoteTrouble: {
      // No need to clear
      break;
    }
    case SOURCE_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = SOURCE_NOT_SET;
}


void PBCorrelationInputFromZC::Clear() {
// @@protoc_insertion_point(message_clear_start:PBCorrelationInputFromZC)
  if (has_zc_guid()) {
    GOOGLE_DCHECK(!zc_guid_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
    (*zc_guid_.UnsafeRawStringPointer())->clear();
  }
  clear_source();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool PBCorrelationInputFromZC::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:PBCorrelationInputFromZC)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string zc_guid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_zc_guid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->zc_guid().data(), this->zc_guid().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "PBCorrelationInputFromZC.zc_guid");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .InputType input = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::InputType_IsValid(value)) {
            set_input(static_cast< ::InputType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(2, value);
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .SystemStatusType system_status = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::SystemStatusType_IsValid(value)) {
            set_system_status(static_cast< ::SystemStatusType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(3, value);
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .LocalTroubleType local_trouble = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::LocalTroubleType_IsValid(value)) {
            set_local_trouble(static_cast< ::LocalTroubleType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(4, value);
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .RemoteTroubleType remote_trouble = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::RemoteTroubleType_IsValid(value)) {
            set_remote_trouble(static_cast< ::RemoteTroubleType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(5, value);
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:PBCorrelationInputFromZC)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:PBCorrelationInputFromZC)
  return false;
#undef DO_
}

void PBCorrelationInputFromZC::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:PBCorrelationInputFromZC)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string zc_guid = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->zc_guid().data(), this->zc_guid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "PBCorrelationInputFromZC.zc_guid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->zc_guid(), output);
  }

  switch (source_case()) {
    case kInput:
      ::google::protobuf::internal::WireFormatLite::WriteEnum(
        2, this->input(), output);
      break;
    case kSystemStatus:
      ::google::protobuf::internal::WireFormatLite::WriteEnum(
        3, this->system_status(), output);
      break;
    case kLocalTrouble:
      ::google::protobuf::internal::WireFormatLite::WriteEnum(
        4, this->local_trouble(), output);
      break;
    case kRemoteTrouble:
      ::google::protobuf::internal::WireFormatLite::WriteEnum(
        5, this->remote_trouble(), output);
      break;
    default: ;
  }
  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:PBCorrelationInputFromZC)
}

::google::protobuf::uint8* PBCorrelationInputFromZC::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:PBCorrelationInputFromZC)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string zc_guid = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->zc_guid().data(), this->zc_guid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "PBCorrelationInputFromZC.zc_guid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->zc_guid(), target);
  }

  switch (source_case()) {
    case kInput:
      target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
        2, this->input(), target);
      break;
    case kSystemStatus:
      target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
        3, this->system_status(), target);
      break;
    case kLocalTrouble:
      target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
        4, this->local_trouble(), target);
      break;
    case kRemoteTrouble:
      target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
        5, this->remote_trouble(), target);
      break;
    default: ;
  }
  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:PBCorrelationInputFromZC)
  return target;
}

size_t PBCorrelationInputFromZC::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:PBCorrelationInputFromZC)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // optional string zc_guid = 1;
  if (has_zc_guid()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->zc_guid());
  }

  switch (source_case()) {
    // optional .InputType input = 2;
    case kInput: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->input());
      break;
    }
    // optional .SystemStatusType system_status = 3;
    case kSystemStatus: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->system_status());
      break;
    }
    // optional .LocalTroubleType local_trouble = 4;
    case kLocalTrouble: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->local_trouble());
      break;
    }
    // optional .RemoteTroubleType remote_trouble = 5;
    case kRemoteTrouble: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->remote_trouble());
      break;
    }
    case SOURCE_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PBCorrelationInputFromZC::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:PBCorrelationInputFromZC)
  GOOGLE_DCHECK_NE(&from, this);
  const PBCorrelationInputFromZC* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PBCorrelationInputFromZC>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:PBCorrelationInputFromZC)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:PBCorrelationInputFromZC)
    MergeFrom(*source);
  }
}

void PBCorrelationInputFromZC::MergeFrom(const PBCorrelationInputFromZC& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:PBCorrelationInputFromZC)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_zc_guid()) {
    set_has_zc_guid();
    zc_guid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.zc_guid_);
  }
  switch (from.source_case()) {
    case kInput: {
      set_input(from.input());
      break;
    }
    case kSystemStatus: {
      set_system_status(from.system_status());
      break;
    }
    case kLocalTrouble: {
      set_local_trouble(from.local_trouble());
      break;
    }
    case kRemoteTrouble: {
      set_remote_trouble(from.remote_trouble());
      break;
    }
    case SOURCE_NOT_SET: {
      break;
    }
  }
}

void PBCorrelationInputFromZC::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:PBCorrelationInputFromZC)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PBCorrelationInputFromZC::CopyFrom(const PBCorrelationInputFromZC& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PBCorrelationInputFromZC)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PBCorrelationInputFromZC::IsInitialized() const {
  return true;
}

void PBCorrelationInputFromZC::Swap(PBCorrelationInputFromZC* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PBCorrelationInputFromZC::InternalSwap(PBCorrelationInputFromZC* other) {
  zc_guid_.Swap(&other->zc_guid_);
  std::swap(source_, other->source_);
  std::swap(_oneof_case_[0], other->_oneof_case_[0]);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PBCorrelationInputFromZC::GetMetadata() const {
  protobuf_fl_5fjob_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_fl_5fjob_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PBCorrelationInputFromZC

// optional string zc_guid = 1;
bool PBCorrelationInputFromZC::has_zc_guid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void PBCorrelationInputFromZC::set_has_zc_guid() {
  _has_bits_[0] |= 0x00000001u;
}
void PBCorrelationInputFromZC::clear_has_zc_guid() {
  _has_bits_[0] &= ~0x00000001u;
}
void PBCorrelationInputFromZC::clear_zc_guid() {
  zc_guid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_zc_guid();
}
const ::std::string& PBCorrelationInputFromZC::zc_guid() const {
  // @@protoc_insertion_point(field_get:PBCorrelationInputFromZC.zc_guid)
  return zc_guid_.GetNoArena();
}
void PBCorrelationInputFromZC::set_zc_guid(const ::std::string& value) {
  set_has_zc_guid();
  zc_guid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:PBCorrelationInputFromZC.zc_guid)
}
#if LANG_CXX11
void PBCorrelationInputFromZC::set_zc_guid(::std::string&& value) {
  set_has_zc_guid();
  zc_guid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:PBCorrelationInputFromZC.zc_guid)
}
#endif
void PBCorrelationInputFromZC::set_zc_guid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_zc_guid();
  zc_guid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:PBCorrelationInputFromZC.zc_guid)
}
void PBCorrelationInputFromZC::set_zc_guid(const char* value, size_t size) {
  set_has_zc_guid();
  zc_guid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:PBCorrelationInputFromZC.zc_guid)
}
::std::string* PBCorrelationInputFromZC::mutable_zc_guid() {
  set_has_zc_guid();
  // @@protoc_insertion_point(field_mutable:PBCorrelationInputFromZC.zc_guid)
  return zc_guid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* PBCorrelationInputFromZC::release_zc_guid() {
  // @@protoc_insertion_point(field_release:PBCorrelationInputFromZC.zc_guid)
  clear_has_zc_guid();
  return zc_guid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void PBCorrelationInputFromZC::set_allocated_zc_guid(::std::string* zc_guid) {
  if (zc_guid != NULL) {
    set_has_zc_guid();
  } else {
    clear_has_zc_guid();
  }
  zc_guid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), zc_guid);
  // @@protoc_insertion_point(field_set_allocated:PBCorrelationInputFromZC.zc_guid)
}

// optional .InputType input = 2;
bool PBCorrelationInputFromZC::has_input() const {
  return source_case() == kInput;
}
void PBCorrelationInputFromZC::set_has_input() {
  _oneof_case_[0] = kInput;
}
void PBCorrelationInputFromZC::clear_input() {
  if (has_input()) {
    source_.input_ = 0;
    clear_has_source();
  }
}
::InputType PBCorrelationInputFromZC::input() const {
  // @@protoc_insertion_point(field_get:PBCorrelationInputFromZC.input)
  if (has_input()) {
    return static_cast< ::InputType >(source_.input_);
  }
  return static_cast< ::InputType >(0);
}
void PBCorrelationInputFromZC::set_input(::InputType value) {
  assert(::InputType_IsValid(value));
  if (!has_input()) {
    clear_source();
    set_has_input();
  }
  source_.input_ = value;
  // @@protoc_insertion_point(field_set:PBCorrelationInputFromZC.input)
}

// optional .SystemStatusType system_status = 3;
bool PBCorrelationInputFromZC::has_system_status() const {
  return source_case() == kSystemStatus;
}
void PBCorrelationInputFromZC::set_has_system_status() {
  _oneof_case_[0] = kSystemStatus;
}
void PBCorrelationInputFromZC::clear_system_status() {
  if (has_system_status()) {
    source_.system_status_ = 0;
    clear_has_source();
  }
}
::SystemStatusType PBCorrelationInputFromZC::system_status() const {
  // @@protoc_insertion_point(field_get:PBCorrelationInputFromZC.system_status)
  if (has_system_status()) {
    return static_cast< ::SystemStatusType >(source_.system_status_);
  }
  return static_cast< ::SystemStatusType >(0);
}
void PBCorrelationInputFromZC::set_system_status(::SystemStatusType value) {
  assert(::SystemStatusType_IsValid(value));
  if (!has_system_status()) {
    clear_source();
    set_has_system_status();
  }
  source_.system_status_ = value;
  // @@protoc_insertion_point(field_set:PBCorrelationInputFromZC.system_status)
}

// optional .LocalTroubleType local_trouble = 4;
bool PBCorrelationInputFromZC::has_local_trouble() const {
  return source_case() == kLocalTrouble;
}
void PBCorrelationInputFromZC::set_has_local_trouble() {
  _oneof_case_[0] = kLocalTrouble;
}
void PBCorrelationInputFromZC::clear_local_trouble() {
  if (has_local_trouble()) {
    source_.local_trouble_ = 0;
    clear_has_source();
  }
}
::LocalTroubleType PBCorrelationInputFromZC::local_trouble() const {
  // @@protoc_insertion_point(field_get:PBCorrelationInputFromZC.local_trouble)
  if (has_local_trouble()) {
    return static_cast< ::LocalTroubleType >(source_.local_trouble_);
  }
  return static_cast< ::LocalTroubleType >(0);
}
void PBCorrelationInputFromZC::set_local_trouble(::LocalTroubleType value) {
  assert(::LocalTroubleType_IsValid(value));
  if (!has_local_trouble()) {
    clear_source();
    set_has_local_trouble();
  }
  source_.local_trouble_ = value;
  // @@protoc_insertion_point(field_set:PBCorrelationInputFromZC.local_trouble)
}

// optional .RemoteTroubleType remote_trouble = 5;
bool PBCorrelationInputFromZC::has_remote_trouble() const {
  return source_case() == kRemoteTrouble;
}
void PBCorrelationInputFromZC::set_has_remote_trouble() {
  _oneof_case_[0] = kRemoteTrouble;
}
void PBCorrelationInputFromZC::clear_remote_trouble() {
  if (has_remote_trouble()) {
    source_.remote_trouble_ = 0;
    clear_has_source();
  }
}
::RemoteTroubleType PBCorrelationInputFromZC::remote_trouble() const {
  // @@protoc_insertion_point(field_get:PBCorrelationInputFromZC.remote_trouble)
  if (has_remote_trouble()) {
    return static_cast< ::RemoteTroubleType >(source_.remote_trouble_);
  }
  return static_cast< ::RemoteTroubleType >(0);
}
void PBCorrelationInputFromZC::set_remote_trouble(::RemoteTroubleType value) {
  assert(::RemoteTroubleType_IsValid(value));
  if (!has_remote_trouble()) {
    clear_source();
    set_has_remote_trouble();
  }
  source_.remote_trouble_ = value;
  // @@protoc_insertion_point(field_set:PBCorrelationInputFromZC.remote_trouble)
}

bool PBCorrelationInputFromZC::has_source() const {
  return source_case() != SOURCE_NOT_SET;
}
void PBCorrelationInputFromZC::clear_has_source() {
  _oneof_case_[0] = SOURCE_NOT_SET;
}
PBCorrelationInputFromZC::SourceCase PBCorrelationInputFromZC::source_case() const {
  return PBCorrelationInputFromZC::SourceCase(_oneof_case_[0]);
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PBCorrelationInputFromWIO::kWioGuidFieldNumber;
const int PBCorrelationInputFromWIO::kInputFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PBCorrelationInputFromWIO::PBCorrelationInputFromWIO()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_fl_5fjob_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:PBCorrelationInputFromWIO)
}
PBCorrelationInputFromWIO::PBCorrelationInputFromWIO(const PBCorrelationInputFromWIO& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  wio_guid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_wio_guid()) {
    wio_guid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.wio_guid_);
  }
  input_ = from.input_;
  // @@protoc_insertion_point(copy_constructor:PBCorrelationInputFromWIO)
}

void PBCorrelationInputFromWIO::SharedCtor() {
  _cached_size_ = 0;
  wio_guid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  input_ = 0;
}

PBCorrelationInputFromWIO::~PBCorrelationInputFromWIO() {
  // @@protoc_insertion_point(destructor:PBCorrelationInputFromWIO)
  SharedDtor();
}

void PBCorrelationInputFromWIO::SharedDtor() {
  wio_guid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void PBCorrelationInputFromWIO::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PBCorrelationInputFromWIO::descriptor() {
  protobuf_fl_5fjob_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_fl_5fjob_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PBCorrelationInputFromWIO& PBCorrelationInputFromWIO::default_instance() {
  protobuf_fl_5fjob_2eproto::InitDefaults();
  return *internal_default_instance();
}

PBCorrelationInputFromWIO* PBCorrelationInputFromWIO::New(::google::protobuf::Arena* arena) const {
  PBCorrelationInputFromWIO* n = new PBCorrelationInputFromWIO;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PBCorrelationInputFromWIO::Clear() {
// @@protoc_insertion_point(message_clear_start:PBCorrelationInputFromWIO)
  if (has_wio_guid()) {
    GOOGLE_DCHECK(!wio_guid_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
    (*wio_guid_.UnsafeRawStringPointer())->clear();
  }
  input_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool PBCorrelationInputFromWIO::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:PBCorrelationInputFromWIO)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string wio_guid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_wio_guid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->wio_guid().data(), this->wio_guid().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "PBCorrelationInputFromWIO.wio_guid");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .InputType input = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::InputType_IsValid(value)) {
            set_input(static_cast< ::InputType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(2, value);
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:PBCorrelationInputFromWIO)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:PBCorrelationInputFromWIO)
  return false;
#undef DO_
}

void PBCorrelationInputFromWIO::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:PBCorrelationInputFromWIO)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string wio_guid = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->wio_guid().data(), this->wio_guid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "PBCorrelationInputFromWIO.wio_guid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->wio_guid(), output);
  }

  // optional .InputType input = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->input(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:PBCorrelationInputFromWIO)
}

::google::protobuf::uint8* PBCorrelationInputFromWIO::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:PBCorrelationInputFromWIO)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string wio_guid = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->wio_guid().data(), this->wio_guid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "PBCorrelationInputFromWIO.wio_guid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->wio_guid(), target);
  }

  // optional .InputType input = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->input(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:PBCorrelationInputFromWIO)
  return target;
}

size_t PBCorrelationInputFromWIO::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:PBCorrelationInputFromWIO)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional string wio_guid = 1;
    if (has_wio_guid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->wio_guid());
    }

    // optional .InputType input = 2;
    if (has_input()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->input());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PBCorrelationInputFromWIO::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:PBCorrelationInputFromWIO)
  GOOGLE_DCHECK_NE(&from, this);
  const PBCorrelationInputFromWIO* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PBCorrelationInputFromWIO>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:PBCorrelationInputFromWIO)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:PBCorrelationInputFromWIO)
    MergeFrom(*source);
  }
}

void PBCorrelationInputFromWIO::MergeFrom(const PBCorrelationInputFromWIO& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:PBCorrelationInputFromWIO)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_wio_guid();
      wio_guid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.wio_guid_);
    }
    if (cached_has_bits & 0x00000002u) {
      input_ = from.input_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void PBCorrelationInputFromWIO::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:PBCorrelationInputFromWIO)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PBCorrelationInputFromWIO::CopyFrom(const PBCorrelationInputFromWIO& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PBCorrelationInputFromWIO)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PBCorrelationInputFromWIO::IsInitialized() const {
  return true;
}

void PBCorrelationInputFromWIO::Swap(PBCorrelationInputFromWIO* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PBCorrelationInputFromWIO::InternalSwap(PBCorrelationInputFromWIO* other) {
  wio_guid_.Swap(&other->wio_guid_);
  std::swap(input_, other->input_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PBCorrelationInputFromWIO::GetMetadata() const {
  protobuf_fl_5fjob_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_fl_5fjob_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PBCorrelationInputFromWIO

// optional string wio_guid = 1;
bool PBCorrelationInputFromWIO::has_wio_guid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void PBCorrelationInputFromWIO::set_has_wio_guid() {
  _has_bits_[0] |= 0x00000001u;
}
void PBCorrelationInputFromWIO::clear_has_wio_guid() {
  _has_bits_[0] &= ~0x00000001u;
}
void PBCorrelationInputFromWIO::clear_wio_guid() {
  wio_guid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_wio_guid();
}
const ::std::string& PBCorrelationInputFromWIO::wio_guid() const {
  // @@protoc_insertion_point(field_get:PBCorrelationInputFromWIO.wio_guid)
  return wio_guid_.GetNoArena();
}
void PBCorrelationInputFromWIO::set_wio_guid(const ::std::string& value) {
  set_has_wio_guid();
  wio_guid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:PBCorrelationInputFromWIO.wio_guid)
}
#if LANG_CXX11
void PBCorrelationInputFromWIO::set_wio_guid(::std::string&& value) {
  set_has_wio_guid();
  wio_guid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:PBCorrelationInputFromWIO.wio_guid)
}
#endif
void PBCorrelationInputFromWIO::set_wio_guid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_wio_guid();
  wio_guid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:PBCorrelationInputFromWIO.wio_guid)
}
void PBCorrelationInputFromWIO::set_wio_guid(const char* value, size_t size) {
  set_has_wio_guid();
  wio_guid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:PBCorrelationInputFromWIO.wio_guid)
}
::std::string* PBCorrelationInputFromWIO::mutable_wio_guid() {
  set_has_wio_guid();
  // @@protoc_insertion_point(field_mutable:PBCorrelationInputFromWIO.wio_guid)
  return wio_guid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* PBCorrelationInputFromWIO::release_wio_guid() {
  // @@protoc_insertion_point(field_release:PBCorrelationInputFromWIO.wio_guid)
  clear_has_wio_guid();
  return wio_guid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void PBCorrelationInputFromWIO::set_allocated_wio_guid(::std::string* wio_guid) {
  if (wio_guid != NULL) {
    set_has_wio_guid();
  } else {
    clear_has_wio_guid();
  }
  wio_guid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), wio_guid);
  // @@protoc_insertion_point(field_set_allocated:PBCorrelationInputFromWIO.wio_guid)
}

// optional .InputType input = 2;
bool PBCorrelationInputFromWIO::has_input() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void PBCorrelationInputFromWIO::set_has_input() {
  _has_bits_[0] |= 0x00000002u;
}
void PBCorrelationInputFromWIO::clear_has_input() {
  _has_bits_[0] &= ~0x00000002u;
}
void PBCorrelationInputFromWIO::clear_input() {
  input_ = 0;
  clear_has_input();
}
::InputType PBCorrelationInputFromWIO::input() const {
  // @@protoc_insertion_point(field_get:PBCorrelationInputFromWIO.input)
  return static_cast< ::InputType >(input_);
}
void PBCorrelationInputFromWIO::set_input(::InputType value) {
  assert(::InputType_IsValid(value));
  set_has_input();
  input_ = value;
  // @@protoc_insertion_point(field_set:PBCorrelationInputFromWIO.input)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PBCorrelationInput::kGuidFieldNumber;
const int PBCorrelationInput::kPosFieldNumber;
const int PBCorrelationInput::kWioInputFieldNumber;
const int PBCorrelationInput::kZcInputFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PBCorrelationInput::PBCorrelationInput()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_fl_5fjob_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:PBCorrelationInput)
}
PBCorrelationInput::PBCorrelationInput(const PBCorrelationInput& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  guid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_guid()) {
    guid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.guid_);
  }
  if (from.has_pos()) {
    pos_ = new ::PBPosition(*from.pos_);
  } else {
    pos_ = NULL;
  }
  if (from.has_wio_input()) {
    wio_input_ = new ::PBCorrelationInputFromWIO(*from.wio_input_);
  } else {
    wio_input_ = NULL;
  }
  if (from.has_zc_input()) {
    zc_input_ = new ::PBCorrelationInputFromZC(*from.zc_input_);
  } else {
    zc_input_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:PBCorrelationInput)
}

void PBCorrelationInput::SharedCtor() {
  _cached_size_ = 0;
  guid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&pos_, 0, reinterpret_cast<char*>(&zc_input_) -
    reinterpret_cast<char*>(&pos_) + sizeof(zc_input_));
}

PBCorrelationInput::~PBCorrelationInput() {
  // @@protoc_insertion_point(destructor:PBCorrelationInput)
  SharedDtor();
}

void PBCorrelationInput::SharedDtor() {
  guid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) {
    delete pos_;
  }
  if (this != internal_default_instance()) {
    delete wio_input_;
  }
  if (this != internal_default_instance()) {
    delete zc_input_;
  }
}

void PBCorrelationInput::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PBCorrelationInput::descriptor() {
  protobuf_fl_5fjob_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_fl_5fjob_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PBCorrelationInput& PBCorrelationInput::default_instance() {
  protobuf_fl_5fjob_2eproto::InitDefaults();
  return *internal_default_instance();
}

PBCorrelationInput* PBCorrelationInput::New(::google::protobuf::Arena* arena) const {
  PBCorrelationInput* n = new PBCorrelationInput;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PBCorrelationInput::Clear() {
// @@protoc_insertion_point(message_clear_start:PBCorrelationInput)
  if (_has_bits_[0 / 32] & 15u) {
    if (has_guid()) {
      GOOGLE_DCHECK(!guid_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*guid_.UnsafeRawStringPointer())->clear();
    }
    if (has_pos()) {
      GOOGLE_DCHECK(pos_ != NULL);
      pos_->::PBPosition::Clear();
    }
    if (has_wio_input()) {
      GOOGLE_DCHECK(wio_input_ != NULL);
      wio_input_->::PBCorrelationInputFromWIO::Clear();
    }
    if (has_zc_input()) {
      GOOGLE_DCHECK(zc_input_ != NULL);
      zc_input_->::PBCorrelationInputFromZC::Clear();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool PBCorrelationInput::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:PBCorrelationInput)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string guid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_guid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->guid().data(), this->guid().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "PBCorrelationInput.guid");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .PBPosition pos = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_pos()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .PBCorrelationInputFromWIO wio_input = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_wio_input()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .PBCorrelationInputFromZC zc_input = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_zc_input()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:PBCorrelationInput)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:PBCorrelationInput)
  return false;
#undef DO_
}

void PBCorrelationInput::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:PBCorrelationInput)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string guid = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->guid().data(), this->guid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "PBCorrelationInput.guid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->guid(), output);
  }

  // optional .PBPosition pos = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->pos_, output);
  }

  // optional .PBCorrelationInputFromWIO wio_input = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->wio_input_, output);
  }

  // optional .PBCorrelationInputFromZC zc_input = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, *this->zc_input_, output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:PBCorrelationInput)
}

::google::protobuf::uint8* PBCorrelationInput::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:PBCorrelationInput)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string guid = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->guid().data(), this->guid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "PBCorrelationInput.guid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->guid(), target);
  }

  // optional .PBPosition pos = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->pos_, deterministic, target);
  }

  // optional .PBCorrelationInputFromWIO wio_input = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, *this->wio_input_, deterministic, target);
  }

  // optional .PBCorrelationInputFromZC zc_input = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        4, *this->zc_input_, deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:PBCorrelationInput)
  return target;
}

size_t PBCorrelationInput::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:PBCorrelationInput)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (_has_bits_[0 / 32] & 15u) {
    // optional string guid = 1;
    if (has_guid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->guid());
    }

    // optional .PBPosition pos = 2;
    if (has_pos()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->pos_);
    }

    // optional .PBCorrelationInputFromWIO wio_input = 3;
    if (has_wio_input()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->wio_input_);
    }

    // optional .PBCorrelationInputFromZC zc_input = 4;
    if (has_zc_input()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->zc_input_);
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PBCorrelationInput::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:PBCorrelationInput)
  GOOGLE_DCHECK_NE(&from, this);
  const PBCorrelationInput* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PBCorrelationInput>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:PBCorrelationInput)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:PBCorrelationInput)
    MergeFrom(*source);
  }
}

void PBCorrelationInput::MergeFrom(const PBCorrelationInput& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:PBCorrelationInput)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_guid();
      guid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.guid_);
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_pos()->::PBPosition::MergeFrom(from.pos());
    }
    if (cached_has_bits & 0x00000004u) {
      mutable_wio_input()->::PBCorrelationInputFromWIO::MergeFrom(from.wio_input());
    }
    if (cached_has_bits & 0x00000008u) {
      mutable_zc_input()->::PBCorrelationInputFromZC::MergeFrom(from.zc_input());
    }
  }
}

void PBCorrelationInput::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:PBCorrelationInput)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PBCorrelationInput::CopyFrom(const PBCorrelationInput& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PBCorrelationInput)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PBCorrelationInput::IsInitialized() const {
  if (has_pos()) {
    if (!this->pos_->IsInitialized()) return false;
  }
  return true;
}

void PBCorrelationInput::Swap(PBCorrelationInput* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PBCorrelationInput::InternalSwap(PBCorrelationInput* other) {
  guid_.Swap(&other->guid_);
  std::swap(pos_, other->pos_);
  std::swap(wio_input_, other->wio_input_);
  std::swap(zc_input_, other->zc_input_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PBCorrelationInput::GetMetadata() const {
  protobuf_fl_5fjob_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_fl_5fjob_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PBCorrelationInput

// optional string guid = 1;
bool PBCorrelationInput::has_guid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void PBCorrelationInput::set_has_guid() {
  _has_bits_[0] |= 0x00000001u;
}
void PBCorrelationInput::clear_has_guid() {
  _has_bits_[0] &= ~0x00000001u;
}
void PBCorrelationInput::clear_guid() {
  guid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_guid();
}
const ::std::string& PBCorrelationInput::guid() const {
  // @@protoc_insertion_point(field_get:PBCorrelationInput.guid)
  return guid_.GetNoArena();
}
void PBCorrelationInput::set_guid(const ::std::string& value) {
  set_has_guid();
  guid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:PBCorrelationInput.guid)
}
#if LANG_CXX11
void PBCorrelationInput::set_guid(::std::string&& value) {
  set_has_guid();
  guid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:PBCorrelationInput.guid)
}
#endif
void PBCorrelationInput::set_guid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_guid();
  guid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:PBCorrelationInput.guid)
}
void PBCorrelationInput::set_guid(const char* value, size_t size) {
  set_has_guid();
  guid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:PBCorrelationInput.guid)
}
::std::string* PBCorrelationInput::mutable_guid() {
  set_has_guid();
  // @@protoc_insertion_point(field_mutable:PBCorrelationInput.guid)
  return guid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* PBCorrelationInput::release_guid() {
  // @@protoc_insertion_point(field_release:PBCorrelationInput.guid)
  clear_has_guid();
  return guid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void PBCorrelationInput::set_allocated_guid(::std::string* guid) {
  if (guid != NULL) {
    set_has_guid();
  } else {
    clear_has_guid();
  }
  guid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), guid);
  // @@protoc_insertion_point(field_set_allocated:PBCorrelationInput.guid)
}

// optional .PBPosition pos = 2;
bool PBCorrelationInput::has_pos() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void PBCorrelationInput::set_has_pos() {
  _has_bits_[0] |= 0x00000002u;
}
void PBCorrelationInput::clear_has_pos() {
  _has_bits_[0] &= ~0x00000002u;
}
void PBCorrelationInput::clear_pos() {
  if (pos_ != NULL) pos_->::PBPosition::Clear();
  clear_has_pos();
}
const ::PBPosition& PBCorrelationInput::pos() const {
  // @@protoc_insertion_point(field_get:PBCorrelationInput.pos)
  return pos_ != NULL ? *pos_
                         : *::PBPosition::internal_default_instance();
}
::PBPosition* PBCorrelationInput::mutable_pos() {
  set_has_pos();
  if (pos_ == NULL) {
    pos_ = new ::PBPosition;
  }
  // @@protoc_insertion_point(field_mutable:PBCorrelationInput.pos)
  return pos_;
}
::PBPosition* PBCorrelationInput::release_pos() {
  // @@protoc_insertion_point(field_release:PBCorrelationInput.pos)
  clear_has_pos();
  ::PBPosition* temp = pos_;
  pos_ = NULL;
  return temp;
}
void PBCorrelationInput::set_allocated_pos(::PBPosition* pos) {
  delete pos_;
  pos_ = pos;
  if (pos) {
    set_has_pos();
  } else {
    clear_has_pos();
  }
  // @@protoc_insertion_point(field_set_allocated:PBCorrelationInput.pos)
}

// optional .PBCorrelationInputFromWIO wio_input = 3;
bool PBCorrelationInput::has_wio_input() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void PBCorrelationInput::set_has_wio_input() {
  _has_bits_[0] |= 0x00000004u;
}
void PBCorrelationInput::clear_has_wio_input() {
  _has_bits_[0] &= ~0x00000004u;
}
void PBCorrelationInput::clear_wio_input() {
  if (wio_input_ != NULL) wio_input_->::PBCorrelationInputFromWIO::Clear();
  clear_has_wio_input();
}
const ::PBCorrelationInputFromWIO& PBCorrelationInput::wio_input() const {
  // @@protoc_insertion_point(field_get:PBCorrelationInput.wio_input)
  return wio_input_ != NULL ? *wio_input_
                         : *::PBCorrelationInputFromWIO::internal_default_instance();
}
::PBCorrelationInputFromWIO* PBCorrelationInput::mutable_wio_input() {
  set_has_wio_input();
  if (wio_input_ == NULL) {
    wio_input_ = new ::PBCorrelationInputFromWIO;
  }
  // @@protoc_insertion_point(field_mutable:PBCorrelationInput.wio_input)
  return wio_input_;
}
::PBCorrelationInputFromWIO* PBCorrelationInput::release_wio_input() {
  // @@protoc_insertion_point(field_release:PBCorrelationInput.wio_input)
  clear_has_wio_input();
  ::PBCorrelationInputFromWIO* temp = wio_input_;
  wio_input_ = NULL;
  return temp;
}
void PBCorrelationInput::set_allocated_wio_input(::PBCorrelationInputFromWIO* wio_input) {
  delete wio_input_;
  wio_input_ = wio_input;
  if (wio_input) {
    set_has_wio_input();
  } else {
    clear_has_wio_input();
  }
  // @@protoc_insertion_point(field_set_allocated:PBCorrelationInput.wio_input)
}

// optional .PBCorrelationInputFromZC zc_input = 4;
bool PBCorrelationInput::has_zc_input() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void PBCorrelationInput::set_has_zc_input() {
  _has_bits_[0] |= 0x00000008u;
}
void PBCorrelationInput::clear_has_zc_input() {
  _has_bits_[0] &= ~0x00000008u;
}
void PBCorrelationInput::clear_zc_input() {
  if (zc_input_ != NULL) zc_input_->::PBCorrelationInputFromZC::Clear();
  clear_has_zc_input();
}
const ::PBCorrelationInputFromZC& PBCorrelationInput::zc_input() const {
  // @@protoc_insertion_point(field_get:PBCorrelationInput.zc_input)
  return zc_input_ != NULL ? *zc_input_
                         : *::PBCorrelationInputFromZC::internal_default_instance();
}
::PBCorrelationInputFromZC* PBCorrelationInput::mutable_zc_input() {
  set_has_zc_input();
  if (zc_input_ == NULL) {
    zc_input_ = new ::PBCorrelationInputFromZC;
  }
  // @@protoc_insertion_point(field_mutable:PBCorrelationInput.zc_input)
  return zc_input_;
}
::PBCorrelationInputFromZC* PBCorrelationInput::release_zc_input() {
  // @@protoc_insertion_point(field_release:PBCorrelationInput.zc_input)
  clear_has_zc_input();
  ::PBCorrelationInputFromZC* temp = zc_input_;
  zc_input_ = NULL;
  return temp;
}
void PBCorrelationInput::set_allocated_zc_input(::PBCorrelationInputFromZC* zc_input) {
  delete zc_input_;
  zc_input_ = zc_input;
  if (zc_input) {
    set_has_zc_input();
  } else {
    clear_has_zc_input();
  }
  // @@protoc_insertion_point(field_set_allocated:PBCorrelationInput.zc_input)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PBCorrelation::kGuidFieldNumber;
const int PBCorrelation::kRelayFieldNumber;
const int PBCorrelation::kTriggerFieldNumber;
const int PBCorrelation::kInputFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PBCorrelation::PBCorrelation()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_fl_5fjob_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:PBCorrelation)
}
PBCorrelation::PBCorrelation(const PBCorrelation& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      input_(from.input_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  guid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_guid()) {
    guid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.guid_);
  }
  ::memcpy(&relay_, &from.relay_,
    reinterpret_cast<char*>(&trigger_) -
    reinterpret_cast<char*>(&relay_) + sizeof(trigger_));
  // @@protoc_insertion_point(copy_constructor:PBCorrelation)
}

void PBCorrelation::SharedCtor() {
  _cached_size_ = 0;
  guid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&relay_, 0, reinterpret_cast<char*>(&trigger_) -
    reinterpret_cast<char*>(&relay_) + sizeof(trigger_));
}

PBCorrelation::~PBCorrelation() {
  // @@protoc_insertion_point(destructor:PBCorrelation)
  SharedDtor();
}

void PBCorrelation::SharedDtor() {
  guid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void PBCorrelation::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PBCorrelation::descriptor() {
  protobuf_fl_5fjob_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_fl_5fjob_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PBCorrelation& PBCorrelation::default_instance() {
  protobuf_fl_5fjob_2eproto::InitDefaults();
  return *internal_default_instance();
}

PBCorrelation* PBCorrelation::New(::google::protobuf::Arena* arena) const {
  PBCorrelation* n = new PBCorrelation;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PBCorrelation::Clear() {
// @@protoc_insertion_point(message_clear_start:PBCorrelation)
  input_.Clear();
  if (has_guid()) {
    GOOGLE_DCHECK(!guid_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
    (*guid_.UnsafeRawStringPointer())->clear();
  }
  if (_has_bits_[0 / 32] & 6u) {
    ::memset(&relay_, 0, reinterpret_cast<char*>(&trigger_) -
      reinterpret_cast<char*>(&relay_) + sizeof(trigger_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool PBCorrelation::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:PBCorrelation)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string guid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_guid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->guid().data(), this->guid().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "PBCorrelation.guid");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .LocalRelay relay = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::LocalRelay_IsValid(value)) {
            set_relay(static_cast< ::LocalRelay >(value));
          } else {
            mutable_unknown_fields()->AddVarint(2, value);
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .PBCorrelation.TriggerType trigger = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::PBCorrelation_TriggerType_IsValid(value)) {
            set_trigger(static_cast< ::PBCorrelation_TriggerType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(3, value);
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .PBCorrelationInput input = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_input()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:PBCorrelation)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:PBCorrelation)
  return false;
#undef DO_
}

void PBCorrelation::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:PBCorrelation)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string guid = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->guid().data(), this->guid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "PBCorrelation.guid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->guid(), output);
  }

  // optional .LocalRelay relay = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->relay(), output);
  }

  // optional .PBCorrelation.TriggerType trigger = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      3, this->trigger(), output);
  }

  // repeated .PBCorrelationInput input = 4;
  for (unsigned int i = 0, n = this->input_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->input(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:PBCorrelation)
}

::google::protobuf::uint8* PBCorrelation::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:PBCorrelation)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string guid = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->guid().data(), this->guid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "PBCorrelation.guid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->guid(), target);
  }

  // optional .LocalRelay relay = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->relay(), target);
  }

  // optional .PBCorrelation.TriggerType trigger = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      3, this->trigger(), target);
  }

  // repeated .PBCorrelationInput input = 4;
  for (unsigned int i = 0, n = this->input_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        4, this->input(i), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:PBCorrelation)
  return target;
}

size_t PBCorrelation::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:PBCorrelation)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // repeated .PBCorrelationInput input = 4;
  {
    unsigned int count = this->input_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->input(i));
    }
  }

  if (_has_bits_[0 / 32] & 7u) {
    // optional string guid = 1;
    if (has_guid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->guid());
    }

    // optional .LocalRelay relay = 2;
    if (has_relay()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->relay());
    }

    // optional .PBCorrelation.TriggerType trigger = 3;
    if (has_trigger()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->trigger());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PBCorrelation::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:PBCorrelation)
  GOOGLE_DCHECK_NE(&from, this);
  const PBCorrelation* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PBCorrelation>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:PBCorrelation)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:PBCorrelation)
    MergeFrom(*source);
  }
}

void PBCorrelation::MergeFrom(const PBCorrelation& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:PBCorrelation)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  input_.MergeFrom(from.input_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_guid();
      guid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.guid_);
    }
    if (cached_has_bits & 0x00000002u) {
      relay_ = from.relay_;
    }
    if (cached_has_bits & 0x00000004u) {
      trigger_ = from.trigger_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void PBCorrelation::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:PBCorrelation)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PBCorrelation::CopyFrom(const PBCorrelation& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PBCorrelation)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PBCorrelation::IsInitialized() const {
  if (!::google::protobuf::internal::AllAreInitialized(this->input())) return false;
  return true;
}

void PBCorrelation::Swap(PBCorrelation* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PBCorrelation::InternalSwap(PBCorrelation* other) {
  input_.InternalSwap(&other->input_);
  guid_.Swap(&other->guid_);
  std::swap(relay_, other->relay_);
  std::swap(trigger_, other->trigger_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PBCorrelation::GetMetadata() const {
  protobuf_fl_5fjob_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_fl_5fjob_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PBCorrelation

// optional string guid = 1;
bool PBCorrelation::has_guid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void PBCorrelation::set_has_guid() {
  _has_bits_[0] |= 0x00000001u;
}
void PBCorrelation::clear_has_guid() {
  _has_bits_[0] &= ~0x00000001u;
}
void PBCorrelation::clear_guid() {
  guid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_guid();
}
const ::std::string& PBCorrelation::guid() const {
  // @@protoc_insertion_point(field_get:PBCorrelation.guid)
  return guid_.GetNoArena();
}
void PBCorrelation::set_guid(const ::std::string& value) {
  set_has_guid();
  guid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:PBCorrelation.guid)
}
#if LANG_CXX11
void PBCorrelation::set_guid(::std::string&& value) {
  set_has_guid();
  guid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:PBCorrelation.guid)
}
#endif
void PBCorrelation::set_guid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_guid();
  guid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:PBCorrelation.guid)
}
void PBCorrelation::set_guid(const char* value, size_t size) {
  set_has_guid();
  guid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:PBCorrelation.guid)
}
::std::string* PBCorrelation::mutable_guid() {
  set_has_guid();
  // @@protoc_insertion_point(field_mutable:PBCorrelation.guid)
  return guid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* PBCorrelation::release_guid() {
  // @@protoc_insertion_point(field_release:PBCorrelation.guid)
  clear_has_guid();
  return guid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void PBCorrelation::set_allocated_guid(::std::string* guid) {
  if (guid != NULL) {
    set_has_guid();
  } else {
    clear_has_guid();
  }
  guid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), guid);
  // @@protoc_insertion_point(field_set_allocated:PBCorrelation.guid)
}

// optional .LocalRelay relay = 2;
bool PBCorrelation::has_relay() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void PBCorrelation::set_has_relay() {
  _has_bits_[0] |= 0x00000002u;
}
void PBCorrelation::clear_has_relay() {
  _has_bits_[0] &= ~0x00000002u;
}
void PBCorrelation::clear_relay() {
  relay_ = 0;
  clear_has_relay();
}
::LocalRelay PBCorrelation::relay() const {
  // @@protoc_insertion_point(field_get:PBCorrelation.relay)
  return static_cast< ::LocalRelay >(relay_);
}
void PBCorrelation::set_relay(::LocalRelay value) {
  assert(::LocalRelay_IsValid(value));
  set_has_relay();
  relay_ = value;
  // @@protoc_insertion_point(field_set:PBCorrelation.relay)
}

// optional .PBCorrelation.TriggerType trigger = 3;
bool PBCorrelation::has_trigger() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void PBCorrelation::set_has_trigger() {
  _has_bits_[0] |= 0x00000004u;
}
void PBCorrelation::clear_has_trigger() {
  _has_bits_[0] &= ~0x00000004u;
}
void PBCorrelation::clear_trigger() {
  trigger_ = 0;
  clear_has_trigger();
}
::PBCorrelation_TriggerType PBCorrelation::trigger() const {
  // @@protoc_insertion_point(field_get:PBCorrelation.trigger)
  return static_cast< ::PBCorrelation_TriggerType >(trigger_);
}
void PBCorrelation::set_trigger(::PBCorrelation_TriggerType value) {
  assert(::PBCorrelation_TriggerType_IsValid(value));
  set_has_trigger();
  trigger_ = value;
  // @@protoc_insertion_point(field_set:PBCorrelation.trigger)
}

// repeated .PBCorrelationInput input = 4;
int PBCorrelation::input_size() const {
  return input_.size();
}
void PBCorrelation::clear_input() {
  input_.Clear();
}
const ::PBCorrelationInput& PBCorrelation::input(int index) const {
  // @@protoc_insertion_point(field_get:PBCorrelation.input)
  return input_.Get(index);
}
::PBCorrelationInput* PBCorrelation::mutable_input(int index) {
  // @@protoc_insertion_point(field_mutable:PBCorrelation.input)
  return input_.Mutable(index);
}
::PBCorrelationInput* PBCorrelation::add_input() {
  // @@protoc_insertion_point(field_add:PBCorrelation.input)
  return input_.Add();
}
::google::protobuf::RepeatedPtrField< ::PBCorrelationInput >*
PBCorrelation::mutable_input() {
  // @@protoc_insertion_point(field_mutable_list:PBCorrelation.input)
  return &input_;
}
const ::google::protobuf::RepeatedPtrField< ::PBCorrelationInput >&
PBCorrelation::input() const {
  // @@protoc_insertion_point(field_list:PBCorrelation.input)
  return input_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PBZoneController::kGuidFieldNumber;
const int PBZoneController::kTitleFieldNumber;
const int PBZoneController::kLocationFieldNumber;
const int PBZoneController::kMacAddressFieldNumber;
const int PBZoneController::kPanIdFieldNumber;
const int PBZoneController::kChannelFieldNumber;
const int PBZoneController::kGraphicsFieldNumber;
const int PBZoneController::kWioFieldNumber;
const int PBZoneController::kCorrelationFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PBZoneController::PBZoneController()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_fl_5fjob_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:PBZoneController)
}
PBZoneController::PBZoneController(const PBZoneController& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      wio_(from.wio_),
      correlation_(from.correlation_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  guid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_guid()) {
    guid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.guid_);
  }
  title_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_title()) {
    title_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.title_);
  }
  location_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_location()) {
    location_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.location_);
  }
  mac_address_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_mac_address()) {
    mac_address_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.mac_address_);
  }
  pan_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_pan_id()) {
    pan_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.pan_id_);
  }
  if (from.has_graphics()) {
    graphics_ = new ::PBGraphics(*from.graphics_);
  } else {
    graphics_ = NULL;
  }
  channel_ = from.channel_;
  // @@protoc_insertion_point(copy_constructor:PBZoneController)
}

void PBZoneController::SharedCtor() {
  _cached_size_ = 0;
  guid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  title_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  location_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  mac_address_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  pan_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&graphics_, 0, reinterpret_cast<char*>(&channel_) -
    reinterpret_cast<char*>(&graphics_) + sizeof(channel_));
}

PBZoneController::~PBZoneController() {
  // @@protoc_insertion_point(destructor:PBZoneController)
  SharedDtor();
}

void PBZoneController::SharedDtor() {
  guid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  title_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  location_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  mac_address_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  pan_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) {
    delete graphics_;
  }
}

void PBZoneController::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PBZoneController::descriptor() {
  protobuf_fl_5fjob_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_fl_5fjob_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PBZoneController& PBZoneController::default_instance() {
  protobuf_fl_5fjob_2eproto::InitDefaults();
  return *internal_default_instance();
}

PBZoneController* PBZoneController::New(::google::protobuf::Arena* arena) const {
  PBZoneController* n = new PBZoneController;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PBZoneController::Clear() {
// @@protoc_insertion_point(message_clear_start:PBZoneController)
  wio_.Clear();
  correlation_.Clear();
  if (_has_bits_[0 / 32] & 63u) {
    if (has_guid()) {
      GOOGLE_DCHECK(!guid_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*guid_.UnsafeRawStringPointer())->clear();
    }
    if (has_title()) {
      GOOGLE_DCHECK(!title_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*title_.UnsafeRawStringPointer())->clear();
    }
    if (has_location()) {
      GOOGLE_DCHECK(!location_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*location_.UnsafeRawStringPointer())->clear();
    }
    if (has_mac_address()) {
      GOOGLE_DCHECK(!mac_address_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*mac_address_.UnsafeRawStringPointer())->clear();
    }
    if (has_pan_id()) {
      GOOGLE_DCHECK(!pan_id_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*pan_id_.UnsafeRawStringPointer())->clear();
    }
    if (has_graphics()) {
      GOOGLE_DCHECK(graphics_ != NULL);
      graphics_->::PBGraphics::Clear();
    }
  }
  channel_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool PBZoneController::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:PBZoneController)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string guid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_guid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->guid().data(), this->guid().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "PBZoneController.guid");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string title = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_title()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->title().data(), this->title().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "PBZoneController.title");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string location = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_location()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->location().data(), this->location().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "PBZoneController.location");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string mac_address = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_mac_address()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->mac_address().data(), this->mac_address().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "PBZoneController.mac_address");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string pan_id = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_pan_id()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->pan_id().data(), this->pan_id().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "PBZoneController.pan_id");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 channel = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u)) {
          set_has_channel();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &channel_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .PBGraphics graphics = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_graphics()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .PBWio wio = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_wio()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .PBCorrelation correlation = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_correlation()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:PBZoneController)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:PBZoneController)
  return false;
#undef DO_
}

void PBZoneController::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:PBZoneController)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string guid = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->guid().data(), this->guid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "PBZoneController.guid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->guid(), output);
  }

  // optional string title = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->title().data(), this->title().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "PBZoneController.title");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->title(), output);
  }

  // optional string location = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->location().data(), this->location().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "PBZoneController.location");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->location(), output);
  }

  // optional string mac_address = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->mac_address().data(), this->mac_address().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "PBZoneController.mac_address");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->mac_address(), output);
  }

  // optional string pan_id = 5;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->pan_id().data(), this->pan_id().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "PBZoneController.pan_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->pan_id(), output);
  }

  // optional uint32 channel = 6;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->channel(), output);
  }

  // optional .PBGraphics graphics = 7;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, *this->graphics_, output);
  }

  // repeated .PBWio wio = 8;
  for (unsigned int i = 0, n = this->wio_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8, this->wio(i), output);
  }

  // repeated .PBCorrelation correlation = 9;
  for (unsigned int i = 0, n = this->correlation_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      9, this->correlation(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:PBZoneController)
}

::google::protobuf::uint8* PBZoneController::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:PBZoneController)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string guid = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->guid().data(), this->guid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "PBZoneController.guid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->guid(), target);
  }

  // optional string title = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->title().data(), this->title().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "PBZoneController.title");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->title(), target);
  }

  // optional string location = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->location().data(), this->location().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "PBZoneController.location");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->location(), target);
  }

  // optional string mac_address = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->mac_address().data(), this->mac_address().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "PBZoneController.mac_address");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->mac_address(), target);
  }

  // optional string pan_id = 5;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->pan_id().data(), this->pan_id().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "PBZoneController.pan_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->pan_id(), target);
  }

  // optional uint32 channel = 6;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->channel(), target);
  }

  // optional .PBGraphics graphics = 7;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        7, *this->graphics_, deterministic, target);
  }

  // repeated .PBWio wio = 8;
  for (unsigned int i = 0, n = this->wio_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        8, this->wio(i), deterministic, target);
  }

  // repeated .PBCorrelation correlation = 9;
  for (unsigned int i = 0, n = this->correlation_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        9, this->correlation(i), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:PBZoneController)
  return target;
}

size_t PBZoneController::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:PBZoneController)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // repeated .PBWio wio = 8;
  {
    unsigned int count = this->wio_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->wio(i));
    }
  }

  // repeated .PBCorrelation correlation = 9;
  {
    unsigned int count = this->correlation_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->correlation(i));
    }
  }

  if (_has_bits_[0 / 32] & 127u) {
    // optional string guid = 1;
    if (has_guid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->guid());
    }

    // optional string title = 2;
    if (has_title()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->title());
    }

    // optional string location = 3;
    if (has_location()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->location());
    }

    // optional string mac_address = 4;
    if (has_mac_address()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->mac_address());
    }

    // optional string pan_id = 5;
    if (has_pan_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->pan_id());
    }

    // optional .PBGraphics graphics = 7;
    if (has_graphics()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->graphics_);
    }

    // optional uint32 channel = 6;
    if (has_channel()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->channel());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PBZoneController::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:PBZoneController)
  GOOGLE_DCHECK_NE(&from, this);
  const PBZoneController* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PBZoneController>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:PBZoneController)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:PBZoneController)
    MergeFrom(*source);
  }
}

void PBZoneController::MergeFrom(const PBZoneController& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:PBZoneController)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  wio_.MergeFrom(from.wio_);
  correlation_.MergeFrom(from.correlation_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 127u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_guid();
      guid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.guid_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_title();
      title_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.title_);
    }
    if (cached_has_bits & 0x00000004u) {
      set_has_location();
      location_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.location_);
    }
    if (cached_has_bits & 0x00000008u) {
      set_has_mac_address();
      mac_address_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.mac_address_);
    }
    if (cached_has_bits & 0x00000010u) {
      set_has_pan_id();
      pan_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.pan_id_);
    }
    if (cached_has_bits & 0x00000020u) {
      mutable_graphics()->::PBGraphics::MergeFrom(from.graphics());
    }
    if (cached_has_bits & 0x00000040u) {
      channel_ = from.channel_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void PBZoneController::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:PBZoneController)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PBZoneController::CopyFrom(const PBZoneController& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PBZoneController)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PBZoneController::IsInitialized() const {
  if (!::google::protobuf::internal::AllAreInitialized(this->wio())) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->correlation())) return false;
  if (has_graphics()) {
    if (!this->graphics_->IsInitialized()) return false;
  }
  return true;
}

void PBZoneController::Swap(PBZoneController* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PBZoneController::InternalSwap(PBZoneController* other) {
  wio_.InternalSwap(&other->wio_);
  correlation_.InternalSwap(&other->correlation_);
  guid_.Swap(&other->guid_);
  title_.Swap(&other->title_);
  location_.Swap(&other->location_);
  mac_address_.Swap(&other->mac_address_);
  pan_id_.Swap(&other->pan_id_);
  std::swap(graphics_, other->graphics_);
  std::swap(channel_, other->channel_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PBZoneController::GetMetadata() const {
  protobuf_fl_5fjob_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_fl_5fjob_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PBZoneController

// optional string guid = 1;
bool PBZoneController::has_guid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void PBZoneController::set_has_guid() {
  _has_bits_[0] |= 0x00000001u;
}
void PBZoneController::clear_has_guid() {
  _has_bits_[0] &= ~0x00000001u;
}
void PBZoneController::clear_guid() {
  guid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_guid();
}
const ::std::string& PBZoneController::guid() const {
  // @@protoc_insertion_point(field_get:PBZoneController.guid)
  return guid_.GetNoArena();
}
void PBZoneController::set_guid(const ::std::string& value) {
  set_has_guid();
  guid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:PBZoneController.guid)
}
#if LANG_CXX11
void PBZoneController::set_guid(::std::string&& value) {
  set_has_guid();
  guid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:PBZoneController.guid)
}
#endif
void PBZoneController::set_guid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_guid();
  guid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:PBZoneController.guid)
}
void PBZoneController::set_guid(const char* value, size_t size) {
  set_has_guid();
  guid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:PBZoneController.guid)
}
::std::string* PBZoneController::mutable_guid() {
  set_has_guid();
  // @@protoc_insertion_point(field_mutable:PBZoneController.guid)
  return guid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* PBZoneController::release_guid() {
  // @@protoc_insertion_point(field_release:PBZoneController.guid)
  clear_has_guid();
  return guid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void PBZoneController::set_allocated_guid(::std::string* guid) {
  if (guid != NULL) {
    set_has_guid();
  } else {
    clear_has_guid();
  }
  guid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), guid);
  // @@protoc_insertion_point(field_set_allocated:PBZoneController.guid)
}

// optional string title = 2;
bool PBZoneController::has_title() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void PBZoneController::set_has_title() {
  _has_bits_[0] |= 0x00000002u;
}
void PBZoneController::clear_has_title() {
  _has_bits_[0] &= ~0x00000002u;
}
void PBZoneController::clear_title() {
  title_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_title();
}
const ::std::string& PBZoneController::title() const {
  // @@protoc_insertion_point(field_get:PBZoneController.title)
  return title_.GetNoArena();
}
void PBZoneController::set_title(const ::std::string& value) {
  set_has_title();
  title_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:PBZoneController.title)
}
#if LANG_CXX11
void PBZoneController::set_title(::std::string&& value) {
  set_has_title();
  title_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:PBZoneController.title)
}
#endif
void PBZoneController::set_title(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_title();
  title_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:PBZoneController.title)
}
void PBZoneController::set_title(const char* value, size_t size) {
  set_has_title();
  title_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:PBZoneController.title)
}
::std::string* PBZoneController::mutable_title() {
  set_has_title();
  // @@protoc_insertion_point(field_mutable:PBZoneController.title)
  return title_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* PBZoneController::release_title() {
  // @@protoc_insertion_point(field_release:PBZoneController.title)
  clear_has_title();
  return title_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void PBZoneController::set_allocated_title(::std::string* title) {
  if (title != NULL) {
    set_has_title();
  } else {
    clear_has_title();
  }
  title_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), title);
  // @@protoc_insertion_point(field_set_allocated:PBZoneController.title)
}

// optional string location = 3;
bool PBZoneController::has_location() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void PBZoneController::set_has_location() {
  _has_bits_[0] |= 0x00000004u;
}
void PBZoneController::clear_has_location() {
  _has_bits_[0] &= ~0x00000004u;
}
void PBZoneController::clear_location() {
  location_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_location();
}
const ::std::string& PBZoneController::location() const {
  // @@protoc_insertion_point(field_get:PBZoneController.location)
  return location_.GetNoArena();
}
void PBZoneController::set_location(const ::std::string& value) {
  set_has_location();
  location_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:PBZoneController.location)
}
#if LANG_CXX11
void PBZoneController::set_location(::std::string&& value) {
  set_has_location();
  location_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:PBZoneController.location)
}
#endif
void PBZoneController::set_location(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_location();
  location_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:PBZoneController.location)
}
void PBZoneController::set_location(const char* value, size_t size) {
  set_has_location();
  location_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:PBZoneController.location)
}
::std::string* PBZoneController::mutable_location() {
  set_has_location();
  // @@protoc_insertion_point(field_mutable:PBZoneController.location)
  return location_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* PBZoneController::release_location() {
  // @@protoc_insertion_point(field_release:PBZoneController.location)
  clear_has_location();
  return location_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void PBZoneController::set_allocated_location(::std::string* location) {
  if (location != NULL) {
    set_has_location();
  } else {
    clear_has_location();
  }
  location_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), location);
  // @@protoc_insertion_point(field_set_allocated:PBZoneController.location)
}

// optional string mac_address = 4;
bool PBZoneController::has_mac_address() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void PBZoneController::set_has_mac_address() {
  _has_bits_[0] |= 0x00000008u;
}
void PBZoneController::clear_has_mac_address() {
  _has_bits_[0] &= ~0x00000008u;
}
void PBZoneController::clear_mac_address() {
  mac_address_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_mac_address();
}
const ::std::string& PBZoneController::mac_address() const {
  // @@protoc_insertion_point(field_get:PBZoneController.mac_address)
  return mac_address_.GetNoArena();
}
void PBZoneController::set_mac_address(const ::std::string& value) {
  set_has_mac_address();
  mac_address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:PBZoneController.mac_address)
}
#if LANG_CXX11
void PBZoneController::set_mac_address(::std::string&& value) {
  set_has_mac_address();
  mac_address_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:PBZoneController.mac_address)
}
#endif
void PBZoneController::set_mac_address(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_mac_address();
  mac_address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:PBZoneController.mac_address)
}
void PBZoneController::set_mac_address(const char* value, size_t size) {
  set_has_mac_address();
  mac_address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:PBZoneController.mac_address)
}
::std::string* PBZoneController::mutable_mac_address() {
  set_has_mac_address();
  // @@protoc_insertion_point(field_mutable:PBZoneController.mac_address)
  return mac_address_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* PBZoneController::release_mac_address() {
  // @@protoc_insertion_point(field_release:PBZoneController.mac_address)
  clear_has_mac_address();
  return mac_address_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void PBZoneController::set_allocated_mac_address(::std::string* mac_address) {
  if (mac_address != NULL) {
    set_has_mac_address();
  } else {
    clear_has_mac_address();
  }
  mac_address_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), mac_address);
  // @@protoc_insertion_point(field_set_allocated:PBZoneController.mac_address)
}

// optional string pan_id = 5;
bool PBZoneController::has_pan_id() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void PBZoneController::set_has_pan_id() {
  _has_bits_[0] |= 0x00000010u;
}
void PBZoneController::clear_has_pan_id() {
  _has_bits_[0] &= ~0x00000010u;
}
void PBZoneController::clear_pan_id() {
  pan_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_pan_id();
}
const ::std::string& PBZoneController::pan_id() const {
  // @@protoc_insertion_point(field_get:PBZoneController.pan_id)
  return pan_id_.GetNoArena();
}
void PBZoneController::set_pan_id(const ::std::string& value) {
  set_has_pan_id();
  pan_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:PBZoneController.pan_id)
}
#if LANG_CXX11
void PBZoneController::set_pan_id(::std::string&& value) {
  set_has_pan_id();
  pan_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:PBZoneController.pan_id)
}
#endif
void PBZoneController::set_pan_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_pan_id();
  pan_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:PBZoneController.pan_id)
}
void PBZoneController::set_pan_id(const char* value, size_t size) {
  set_has_pan_id();
  pan_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:PBZoneController.pan_id)
}
::std::string* PBZoneController::mutable_pan_id() {
  set_has_pan_id();
  // @@protoc_insertion_point(field_mutable:PBZoneController.pan_id)
  return pan_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* PBZoneController::release_pan_id() {
  // @@protoc_insertion_point(field_release:PBZoneController.pan_id)
  clear_has_pan_id();
  return pan_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void PBZoneController::set_allocated_pan_id(::std::string* pan_id) {
  if (pan_id != NULL) {
    set_has_pan_id();
  } else {
    clear_has_pan_id();
  }
  pan_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), pan_id);
  // @@protoc_insertion_point(field_set_allocated:PBZoneController.pan_id)
}

// optional uint32 channel = 6;
bool PBZoneController::has_channel() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
void PBZoneController::set_has_channel() {
  _has_bits_[0] |= 0x00000040u;
}
void PBZoneController::clear_has_channel() {
  _has_bits_[0] &= ~0x00000040u;
}
void PBZoneController::clear_channel() {
  channel_ = 0u;
  clear_has_channel();
}
::google::protobuf::uint32 PBZoneController::channel() const {
  // @@protoc_insertion_point(field_get:PBZoneController.channel)
  return channel_;
}
void PBZoneController::set_channel(::google::protobuf::uint32 value) {
  set_has_channel();
  channel_ = value;
  // @@protoc_insertion_point(field_set:PBZoneController.channel)
}

// optional .PBGraphics graphics = 7;
bool PBZoneController::has_graphics() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void PBZoneController::set_has_graphics() {
  _has_bits_[0] |= 0x00000020u;
}
void PBZoneController::clear_has_graphics() {
  _has_bits_[0] &= ~0x00000020u;
}
void PBZoneController::clear_graphics() {
  if (graphics_ != NULL) graphics_->::PBGraphics::Clear();
  clear_has_graphics();
}
const ::PBGraphics& PBZoneController::graphics() const {
  // @@protoc_insertion_point(field_get:PBZoneController.graphics)
  return graphics_ != NULL ? *graphics_
                         : *::PBGraphics::internal_default_instance();
}
::PBGraphics* PBZoneController::mutable_graphics() {
  set_has_graphics();
  if (graphics_ == NULL) {
    graphics_ = new ::PBGraphics;
  }
  // @@protoc_insertion_point(field_mutable:PBZoneController.graphics)
  return graphics_;
}
::PBGraphics* PBZoneController::release_graphics() {
  // @@protoc_insertion_point(field_release:PBZoneController.graphics)
  clear_has_graphics();
  ::PBGraphics* temp = graphics_;
  graphics_ = NULL;
  return temp;
}
void PBZoneController::set_allocated_graphics(::PBGraphics* graphics) {
  delete graphics_;
  graphics_ = graphics;
  if (graphics) {
    set_has_graphics();
  } else {
    clear_has_graphics();
  }
  // @@protoc_insertion_point(field_set_allocated:PBZoneController.graphics)
}

// repeated .PBWio wio = 8;
int PBZoneController::wio_size() const {
  return wio_.size();
}
void PBZoneController::clear_wio() {
  wio_.Clear();
}
const ::PBWio& PBZoneController::wio(int index) const {
  // @@protoc_insertion_point(field_get:PBZoneController.wio)
  return wio_.Get(index);
}
::PBWio* PBZoneController::mutable_wio(int index) {
  // @@protoc_insertion_point(field_mutable:PBZoneController.wio)
  return wio_.Mutable(index);
}
::PBWio* PBZoneController::add_wio() {
  // @@protoc_insertion_point(field_add:PBZoneController.wio)
  return wio_.Add();
}
::google::protobuf::RepeatedPtrField< ::PBWio >*
PBZoneController::mutable_wio() {
  // @@protoc_insertion_point(field_mutable_list:PBZoneController.wio)
  return &wio_;
}
const ::google::protobuf::RepeatedPtrField< ::PBWio >&
PBZoneController::wio() const {
  // @@protoc_insertion_point(field_list:PBZoneController.wio)
  return wio_;
}

// repeated .PBCorrelation correlation = 9;
int PBZoneController::correlation_size() const {
  return correlation_.size();
}
void PBZoneController::clear_correlation() {
  correlation_.Clear();
}
const ::PBCorrelation& PBZoneController::correlation(int index) const {
  // @@protoc_insertion_point(field_get:PBZoneController.correlation)
  return correlation_.Get(index);
}
::PBCorrelation* PBZoneController::mutable_correlation(int index) {
  // @@protoc_insertion_point(field_mutable:PBZoneController.correlation)
  return correlation_.Mutable(index);
}
::PBCorrelation* PBZoneController::add_correlation() {
  // @@protoc_insertion_point(field_add:PBZoneController.correlation)
  return correlation_.Add();
}
::google::protobuf::RepeatedPtrField< ::PBCorrelation >*
PBZoneController::mutable_correlation() {
  // @@protoc_insertion_point(field_mutable_list:PBZoneController.correlation)
  return &correlation_;
}
const ::google::protobuf::RepeatedPtrField< ::PBCorrelation >&
PBZoneController::correlation() const {
  // @@protoc_insertion_point(field_list:PBZoneController.correlation)
  return correlation_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PBFloor::kGuidFieldNumber;
const int PBFloor::kTitleFieldNumber;
const int PBFloor::kUnitOfMeasureFieldNumber;
const int PBFloor::kGraphicsFieldNumber;
const int PBFloor::kZcFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PBFloor::PBFloor()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_fl_5fjob_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:PBFloor)
}
PBFloor::PBFloor(const PBFloor& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      zc_(from.zc_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  guid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_guid()) {
    guid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.guid_);
  }
  title_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_title()) {
    title_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.title_);
  }
  if (from.has_graphics()) {
    graphics_ = new ::PBGraphics(*from.graphics_);
  } else {
    graphics_ = NULL;
  }
  unit_of_measure_ = from.unit_of_measure_;
  // @@protoc_insertion_point(copy_constructor:PBFloor)
}

void PBFloor::SharedCtor() {
  _cached_size_ = 0;
  guid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  title_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&graphics_, 0, reinterpret_cast<char*>(&unit_of_measure_) -
    reinterpret_cast<char*>(&graphics_) + sizeof(unit_of_measure_));
}

PBFloor::~PBFloor() {
  // @@protoc_insertion_point(destructor:PBFloor)
  SharedDtor();
}

void PBFloor::SharedDtor() {
  guid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  title_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) {
    delete graphics_;
  }
}

void PBFloor::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PBFloor::descriptor() {
  protobuf_fl_5fjob_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_fl_5fjob_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PBFloor& PBFloor::default_instance() {
  protobuf_fl_5fjob_2eproto::InitDefaults();
  return *internal_default_instance();
}

PBFloor* PBFloor::New(::google::protobuf::Arena* arena) const {
  PBFloor* n = new PBFloor;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PBFloor::Clear() {
// @@protoc_insertion_point(message_clear_start:PBFloor)
  zc_.Clear();
  if (_has_bits_[0 / 32] & 7u) {
    if (has_guid()) {
      GOOGLE_DCHECK(!guid_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*guid_.UnsafeRawStringPointer())->clear();
    }
    if (has_title()) {
      GOOGLE_DCHECK(!title_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*title_.UnsafeRawStringPointer())->clear();
    }
    if (has_graphics()) {
      GOOGLE_DCHECK(graphics_ != NULL);
      graphics_->::PBGraphics::Clear();
    }
  }
  unit_of_measure_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool PBFloor::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:PBFloor)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string guid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_guid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->guid().data(), this->guid().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "PBFloor.guid");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string title = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_title()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->title().data(), this->title().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "PBFloor.title");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .PBFloor.UnitOfMeasure unit_of_measure = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::PBFloor_UnitOfMeasure_IsValid(value)) {
            set_unit_of_measure(static_cast< ::PBFloor_UnitOfMeasure >(value));
          } else {
            mutable_unknown_fields()->AddVarint(3, value);
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .PBGraphics graphics = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_graphics()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .PBZoneController zc = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_zc()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:PBFloor)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:PBFloor)
  return false;
#undef DO_
}

void PBFloor::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:PBFloor)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string guid = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->guid().data(), this->guid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "PBFloor.guid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->guid(), output);
  }

  // optional string title = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->title().data(), this->title().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "PBFloor.title");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->title(), output);
  }

  // optional .PBFloor.UnitOfMeasure unit_of_measure = 3;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      3, this->unit_of_measure(), output);
  }

  // optional .PBGraphics graphics = 4;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, *this->graphics_, output);
  }

  // repeated .PBZoneController zc = 5;
  for (unsigned int i = 0, n = this->zc_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->zc(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:PBFloor)
}

::google::protobuf::uint8* PBFloor::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:PBFloor)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string guid = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->guid().data(), this->guid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "PBFloor.guid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->guid(), target);
  }

  // optional string title = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->title().data(), this->title().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "PBFloor.title");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->title(), target);
  }

  // optional .PBFloor.UnitOfMeasure unit_of_measure = 3;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      3, this->unit_of_measure(), target);
  }

  // optional .PBGraphics graphics = 4;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        4, *this->graphics_, deterministic, target);
  }

  // repeated .PBZoneController zc = 5;
  for (unsigned int i = 0, n = this->zc_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        5, this->zc(i), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:PBFloor)
  return target;
}

size_t PBFloor::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:PBFloor)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // repeated .PBZoneController zc = 5;
  {
    unsigned int count = this->zc_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->zc(i));
    }
  }

  if (_has_bits_[0 / 32] & 15u) {
    // optional string guid = 1;
    if (has_guid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->guid());
    }

    // optional string title = 2;
    if (has_title()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->title());
    }

    // optional .PBGraphics graphics = 4;
    if (has_graphics()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->graphics_);
    }

    // optional .PBFloor.UnitOfMeasure unit_of_measure = 3;
    if (has_unit_of_measure()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->unit_of_measure());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PBFloor::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:PBFloor)
  GOOGLE_DCHECK_NE(&from, this);
  const PBFloor* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PBFloor>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:PBFloor)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:PBFloor)
    MergeFrom(*source);
  }
}

void PBFloor::MergeFrom(const PBFloor& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:PBFloor)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  zc_.MergeFrom(from.zc_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_guid();
      guid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.guid_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_title();
      title_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.title_);
    }
    if (cached_has_bits & 0x00000004u) {
      mutable_graphics()->::PBGraphics::MergeFrom(from.graphics());
    }
    if (cached_has_bits & 0x00000008u) {
      unit_of_measure_ = from.unit_of_measure_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void PBFloor::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:PBFloor)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PBFloor::CopyFrom(const PBFloor& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PBFloor)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PBFloor::IsInitialized() const {
  if (!::google::protobuf::internal::AllAreInitialized(this->zc())) return false;
  if (has_graphics()) {
    if (!this->graphics_->IsInitialized()) return false;
  }
  return true;
}

void PBFloor::Swap(PBFloor* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PBFloor::InternalSwap(PBFloor* other) {
  zc_.InternalSwap(&other->zc_);
  guid_.Swap(&other->guid_);
  title_.Swap(&other->title_);
  std::swap(graphics_, other->graphics_);
  std::swap(unit_of_measure_, other->unit_of_measure_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PBFloor::GetMetadata() const {
  protobuf_fl_5fjob_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_fl_5fjob_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PBFloor

// optional string guid = 1;
bool PBFloor::has_guid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void PBFloor::set_has_guid() {
  _has_bits_[0] |= 0x00000001u;
}
void PBFloor::clear_has_guid() {
  _has_bits_[0] &= ~0x00000001u;
}
void PBFloor::clear_guid() {
  guid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_guid();
}
const ::std::string& PBFloor::guid() const {
  // @@protoc_insertion_point(field_get:PBFloor.guid)
  return guid_.GetNoArena();
}
void PBFloor::set_guid(const ::std::string& value) {
  set_has_guid();
  guid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:PBFloor.guid)
}
#if LANG_CXX11
void PBFloor::set_guid(::std::string&& value) {
  set_has_guid();
  guid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:PBFloor.guid)
}
#endif
void PBFloor::set_guid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_guid();
  guid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:PBFloor.guid)
}
void PBFloor::set_guid(const char* value, size_t size) {
  set_has_guid();
  guid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:PBFloor.guid)
}
::std::string* PBFloor::mutable_guid() {
  set_has_guid();
  // @@protoc_insertion_point(field_mutable:PBFloor.guid)
  return guid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* PBFloor::release_guid() {
  // @@protoc_insertion_point(field_release:PBFloor.guid)
  clear_has_guid();
  return guid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void PBFloor::set_allocated_guid(::std::string* guid) {
  if (guid != NULL) {
    set_has_guid();
  } else {
    clear_has_guid();
  }
  guid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), guid);
  // @@protoc_insertion_point(field_set_allocated:PBFloor.guid)
}

// optional string title = 2;
bool PBFloor::has_title() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void PBFloor::set_has_title() {
  _has_bits_[0] |= 0x00000002u;
}
void PBFloor::clear_has_title() {
  _has_bits_[0] &= ~0x00000002u;
}
void PBFloor::clear_title() {
  title_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_title();
}
const ::std::string& PBFloor::title() const {
  // @@protoc_insertion_point(field_get:PBFloor.title)
  return title_.GetNoArena();
}
void PBFloor::set_title(const ::std::string& value) {
  set_has_title();
  title_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:PBFloor.title)
}
#if LANG_CXX11
void PBFloor::set_title(::std::string&& value) {
  set_has_title();
  title_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:PBFloor.title)
}
#endif
void PBFloor::set_title(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_title();
  title_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:PBFloor.title)
}
void PBFloor::set_title(const char* value, size_t size) {
  set_has_title();
  title_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:PBFloor.title)
}
::std::string* PBFloor::mutable_title() {
  set_has_title();
  // @@protoc_insertion_point(field_mutable:PBFloor.title)
  return title_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* PBFloor::release_title() {
  // @@protoc_insertion_point(field_release:PBFloor.title)
  clear_has_title();
  return title_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void PBFloor::set_allocated_title(::std::string* title) {
  if (title != NULL) {
    set_has_title();
  } else {
    clear_has_title();
  }
  title_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), title);
  // @@protoc_insertion_point(field_set_allocated:PBFloor.title)
}

// optional .PBFloor.UnitOfMeasure unit_of_measure = 3;
bool PBFloor::has_unit_of_measure() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void PBFloor::set_has_unit_of_measure() {
  _has_bits_[0] |= 0x00000008u;
}
void PBFloor::clear_has_unit_of_measure() {
  _has_bits_[0] &= ~0x00000008u;
}
void PBFloor::clear_unit_of_measure() {
  unit_of_measure_ = 0;
  clear_has_unit_of_measure();
}
::PBFloor_UnitOfMeasure PBFloor::unit_of_measure() const {
  // @@protoc_insertion_point(field_get:PBFloor.unit_of_measure)
  return static_cast< ::PBFloor_UnitOfMeasure >(unit_of_measure_);
}
void PBFloor::set_unit_of_measure(::PBFloor_UnitOfMeasure value) {
  assert(::PBFloor_UnitOfMeasure_IsValid(value));
  set_has_unit_of_measure();
  unit_of_measure_ = value;
  // @@protoc_insertion_point(field_set:PBFloor.unit_of_measure)
}

// optional .PBGraphics graphics = 4;
bool PBFloor::has_graphics() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void PBFloor::set_has_graphics() {
  _has_bits_[0] |= 0x00000004u;
}
void PBFloor::clear_has_graphics() {
  _has_bits_[0] &= ~0x00000004u;
}
void PBFloor::clear_graphics() {
  if (graphics_ != NULL) graphics_->::PBGraphics::Clear();
  clear_has_graphics();
}
const ::PBGraphics& PBFloor::graphics() const {
  // @@protoc_insertion_point(field_get:PBFloor.graphics)
  return graphics_ != NULL ? *graphics_
                         : *::PBGraphics::internal_default_instance();
}
::PBGraphics* PBFloor::mutable_graphics() {
  set_has_graphics();
  if (graphics_ == NULL) {
    graphics_ = new ::PBGraphics;
  }
  // @@protoc_insertion_point(field_mutable:PBFloor.graphics)
  return graphics_;
}
::PBGraphics* PBFloor::release_graphics() {
  // @@protoc_insertion_point(field_release:PBFloor.graphics)
  clear_has_graphics();
  ::PBGraphics* temp = graphics_;
  graphics_ = NULL;
  return temp;
}
void PBFloor::set_allocated_graphics(::PBGraphics* graphics) {
  delete graphics_;
  graphics_ = graphics;
  if (graphics) {
    set_has_graphics();
  } else {
    clear_has_graphics();
  }
  // @@protoc_insertion_point(field_set_allocated:PBFloor.graphics)
}

// repeated .PBZoneController zc = 5;
int PBFloor::zc_size() const {
  return zc_.size();
}
void PBFloor::clear_zc() {
  zc_.Clear();
}
const ::PBZoneController& PBFloor::zc(int index) const {
  // @@protoc_insertion_point(field_get:PBFloor.zc)
  return zc_.Get(index);
}
::PBZoneController* PBFloor::mutable_zc(int index) {
  // @@protoc_insertion_point(field_mutable:PBFloor.zc)
  return zc_.Mutable(index);
}
::PBZoneController* PBFloor::add_zc() {
  // @@protoc_insertion_point(field_add:PBFloor.zc)
  return zc_.Add();
}
::google::protobuf::RepeatedPtrField< ::PBZoneController >*
PBFloor::mutable_zc() {
  // @@protoc_insertion_point(field_mutable_list:PBFloor.zc)
  return &zc_;
}
const ::google::protobuf::RepeatedPtrField< ::PBZoneController >&
PBFloor::zc() const {
  // @@protoc_insertion_point(field_list:PBFloor.zc)
  return zc_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PBJob::kGuidFieldNumber;
const int PBJob::kJobVersionFieldNumber;
const int PBJob::kConfiguratorVersionFieldNumber;
const int PBJob::kCreationDateUtcFieldNumber;
const int PBJob::kCreationTimeUtcFieldNumber;
const int PBJob::kTitleFieldNumber;
const int PBJob::kPasswordFieldNumber;
const int PBJob::kStandardFieldNumber;
const int PBJob::kFloorFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PBJob::PBJob()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_fl_5fjob_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:PBJob)
}
PBJob::PBJob(const PBJob& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      floor_(from.floor_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  guid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_guid()) {
    guid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.guid_);
  }
  creation_date_utc_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_creation_date_utc()) {
    creation_date_utc_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.creation_date_utc_);
  }
  creation_time_utc_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_creation_time_utc()) {
    creation_time_utc_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.creation_time_utc_);
  }
  title_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_title()) {
    title_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.title_);
  }
  password_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_password()) {
    password_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.password_);
  }
  if (from.has_job_version()) {
    job_version_ = new ::PBVersion(*from.job_version_);
  } else {
    job_version_ = NULL;
  }
  if (from.has_configurator_version()) {
    configurator_version_ = new ::PBVersion(*from.configurator_version_);
  } else {
    configurator_version_ = NULL;
  }
  standard_ = from.standard_;
  // @@protoc_insertion_point(copy_constructor:PBJob)
}

void PBJob::SharedCtor() {
  _cached_size_ = 0;
  guid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  creation_date_utc_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  creation_time_utc_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  title_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  password_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&job_version_, 0, reinterpret_cast<char*>(&standard_) -
    reinterpret_cast<char*>(&job_version_) + sizeof(standard_));
}

PBJob::~PBJob() {
  // @@protoc_insertion_point(destructor:PBJob)
  SharedDtor();
}

void PBJob::SharedDtor() {
  guid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  creation_date_utc_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  creation_time_utc_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  title_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  password_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) {
    delete job_version_;
  }
  if (this != internal_default_instance()) {
    delete configurator_version_;
  }
}

void PBJob::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PBJob::descriptor() {
  protobuf_fl_5fjob_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_fl_5fjob_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PBJob& PBJob::default_instance() {
  protobuf_fl_5fjob_2eproto::InitDefaults();
  return *internal_default_instance();
}

PBJob* PBJob::New(::google::protobuf::Arena* arena) const {
  PBJob* n = new PBJob;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PBJob::Clear() {
// @@protoc_insertion_point(message_clear_start:PBJob)
  floor_.Clear();
  if (_has_bits_[0 / 32] & 127u) {
    if (has_guid()) {
      GOOGLE_DCHECK(!guid_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*guid_.UnsafeRawStringPointer())->clear();
    }
    if (has_creation_date_utc()) {
      GOOGLE_DCHECK(!creation_date_utc_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*creation_date_utc_.UnsafeRawStringPointer())->clear();
    }
    if (has_creation_time_utc()) {
      GOOGLE_DCHECK(!creation_time_utc_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*creation_time_utc_.UnsafeRawStringPointer())->clear();
    }
    if (has_title()) {
      GOOGLE_DCHECK(!title_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*title_.UnsafeRawStringPointer())->clear();
    }
    if (has_password()) {
      GOOGLE_DCHECK(!password_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*password_.UnsafeRawStringPointer())->clear();
    }
    if (has_job_version()) {
      GOOGLE_DCHECK(job_version_ != NULL);
      job_version_->::PBVersion::Clear();
    }
    if (has_configurator_version()) {
      GOOGLE_DCHECK(configurator_version_ != NULL);
      configurator_version_->::PBVersion::Clear();
    }
  }
  standard_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool PBJob::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:PBJob)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string guid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_guid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->guid().data(), this->guid().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "PBJob.guid");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .PBVersion job_version = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_job_version()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .PBVersion configurator_version = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_configurator_version()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string creation_date_utc = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_creation_date_utc()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->creation_date_utc().data(), this->creation_date_utc().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "PBJob.creation_date_utc");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string creation_time_utc = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_creation_time_utc()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->creation_time_utc().data(), this->creation_time_utc().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "PBJob.creation_time_utc");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string title = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_title()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->title().data(), this->title().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "PBJob.title");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string password = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_password()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->password().data(), this->password().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "PBJob.password");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .StandardType standard = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::StandardType_IsValid(value)) {
            set_standard(static_cast< ::StandardType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(8, value);
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .PBFloor floor = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_floor()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:PBJob)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:PBJob)
  return false;
#undef DO_
}

void PBJob::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:PBJob)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string guid = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->guid().data(), this->guid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "PBJob.guid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->guid(), output);
  }

  // optional .PBVersion job_version = 2;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->job_version_, output);
  }

  // optional .PBVersion configurator_version = 3;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->configurator_version_, output);
  }

  // optional string creation_date_utc = 4;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->creation_date_utc().data(), this->creation_date_utc().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "PBJob.creation_date_utc");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->creation_date_utc(), output);
  }

  // optional string creation_time_utc = 5;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->creation_time_utc().data(), this->creation_time_utc().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "PBJob.creation_time_utc");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->creation_time_utc(), output);
  }

  // optional string title = 6;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->title().data(), this->title().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "PBJob.title");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->title(), output);
  }

  // optional string password = 7;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->password().data(), this->password().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "PBJob.password");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->password(), output);
  }

  // optional .StandardType standard = 8;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      8, this->standard(), output);
  }

  // repeated .PBFloor floor = 9;
  for (unsigned int i = 0, n = this->floor_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      9, this->floor(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:PBJob)
}

::google::protobuf::uint8* PBJob::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:PBJob)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string guid = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->guid().data(), this->guid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "PBJob.guid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->guid(), target);
  }

  // optional .PBVersion job_version = 2;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->job_version_, deterministic, target);
  }

  // optional .PBVersion configurator_version = 3;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, *this->configurator_version_, deterministic, target);
  }

  // optional string creation_date_utc = 4;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->creation_date_utc().data(), this->creation_date_utc().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "PBJob.creation_date_utc");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->creation_date_utc(), target);
  }

  // optional string creation_time_utc = 5;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->creation_time_utc().data(), this->creation_time_utc().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "PBJob.creation_time_utc");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->creation_time_utc(), target);
  }

  // optional string title = 6;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->title().data(), this->title().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "PBJob.title");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->title(), target);
  }

  // optional string password = 7;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->password().data(), this->password().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "PBJob.password");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->password(), target);
  }

  // optional .StandardType standard = 8;
  if (cached_has_bits & 0x00000080u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      8, this->standard(), target);
  }

  // repeated .PBFloor floor = 9;
  for (unsigned int i = 0, n = this->floor_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        9, this->floor(i), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:PBJob)
  return target;
}

size_t PBJob::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:PBJob)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // repeated .PBFloor floor = 9;
  {
    unsigned int count = this->floor_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->floor(i));
    }
  }

  if (_has_bits_[0 / 32] & 255u) {
    // optional string guid = 1;
    if (has_guid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->guid());
    }

    // optional string creation_date_utc = 4;
    if (has_creation_date_utc()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->creation_date_utc());
    }

    // optional string creation_time_utc = 5;
    if (has_creation_time_utc()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->creation_time_utc());
    }

    // optional string title = 6;
    if (has_title()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->title());
    }

    // optional string password = 7;
    if (has_password()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->password());
    }

    // optional .PBVersion job_version = 2;
    if (has_job_version()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->job_version_);
    }

    // optional .PBVersion configurator_version = 3;
    if (has_configurator_version()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->configurator_version_);
    }

    // optional .StandardType standard = 8;
    if (has_standard()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->standard());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PBJob::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:PBJob)
  GOOGLE_DCHECK_NE(&from, this);
  const PBJob* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PBJob>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:PBJob)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:PBJob)
    MergeFrom(*source);
  }
}

void PBJob::MergeFrom(const PBJob& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:PBJob)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  floor_.MergeFrom(from.floor_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_guid();
      guid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.guid_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_creation_date_utc();
      creation_date_utc_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.creation_date_utc_);
    }
    if (cached_has_bits & 0x00000004u) {
      set_has_creation_time_utc();
      creation_time_utc_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.creation_time_utc_);
    }
    if (cached_has_bits & 0x00000008u) {
      set_has_title();
      title_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.title_);
    }
    if (cached_has_bits & 0x00000010u) {
      set_has_password();
      password_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.password_);
    }
    if (cached_has_bits & 0x00000020u) {
      mutable_job_version()->::PBVersion::MergeFrom(from.job_version());
    }
    if (cached_has_bits & 0x00000040u) {
      mutable_configurator_version()->::PBVersion::MergeFrom(from.configurator_version());
    }
    if (cached_has_bits & 0x00000080u) {
      standard_ = from.standard_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void PBJob::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:PBJob)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PBJob::CopyFrom(const PBJob& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PBJob)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PBJob::IsInitialized() const {
  if (!::google::protobuf::internal::AllAreInitialized(this->floor())) return false;
  return true;
}

void PBJob::Swap(PBJob* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PBJob::InternalSwap(PBJob* other) {
  floor_.InternalSwap(&other->floor_);
  guid_.Swap(&other->guid_);
  creation_date_utc_.Swap(&other->creation_date_utc_);
  creation_time_utc_.Swap(&other->creation_time_utc_);
  title_.Swap(&other->title_);
  password_.Swap(&other->password_);
  std::swap(job_version_, other->job_version_);
  std::swap(configurator_version_, other->configurator_version_);
  std::swap(standard_, other->standard_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PBJob::GetMetadata() const {
  protobuf_fl_5fjob_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_fl_5fjob_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PBJob

// optional string guid = 1;
bool PBJob::has_guid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void PBJob::set_has_guid() {
  _has_bits_[0] |= 0x00000001u;
}
void PBJob::clear_has_guid() {
  _has_bits_[0] &= ~0x00000001u;
}
void PBJob::clear_guid() {
  guid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_guid();
}
const ::std::string& PBJob::guid() const {
  // @@protoc_insertion_point(field_get:PBJob.guid)
  return guid_.GetNoArena();
}
void PBJob::set_guid(const ::std::string& value) {
  set_has_guid();
  guid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:PBJob.guid)
}
#if LANG_CXX11
void PBJob::set_guid(::std::string&& value) {
  set_has_guid();
  guid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:PBJob.guid)
}
#endif
void PBJob::set_guid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_guid();
  guid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:PBJob.guid)
}
void PBJob::set_guid(const char* value, size_t size) {
  set_has_guid();
  guid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:PBJob.guid)
}
::std::string* PBJob::mutable_guid() {
  set_has_guid();
  // @@protoc_insertion_point(field_mutable:PBJob.guid)
  return guid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* PBJob::release_guid() {
  // @@protoc_insertion_point(field_release:PBJob.guid)
  clear_has_guid();
  return guid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void PBJob::set_allocated_guid(::std::string* guid) {
  if (guid != NULL) {
    set_has_guid();
  } else {
    clear_has_guid();
  }
  guid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), guid);
  // @@protoc_insertion_point(field_set_allocated:PBJob.guid)
}

// optional .PBVersion job_version = 2;
bool PBJob::has_job_version() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void PBJob::set_has_job_version() {
  _has_bits_[0] |= 0x00000020u;
}
void PBJob::clear_has_job_version() {
  _has_bits_[0] &= ~0x00000020u;
}
void PBJob::clear_job_version() {
  if (job_version_ != NULL) job_version_->::PBVersion::Clear();
  clear_has_job_version();
}
const ::PBVersion& PBJob::job_version() const {
  // @@protoc_insertion_point(field_get:PBJob.job_version)
  return job_version_ != NULL ? *job_version_
                         : *::PBVersion::internal_default_instance();
}
::PBVersion* PBJob::mutable_job_version() {
  set_has_job_version();
  if (job_version_ == NULL) {
    job_version_ = new ::PBVersion;
  }
  // @@protoc_insertion_point(field_mutable:PBJob.job_version)
  return job_version_;
}
::PBVersion* PBJob::release_job_version() {
  // @@protoc_insertion_point(field_release:PBJob.job_version)
  clear_has_job_version();
  ::PBVersion* temp = job_version_;
  job_version_ = NULL;
  return temp;
}
void PBJob::set_allocated_job_version(::PBVersion* job_version) {
  delete job_version_;
  job_version_ = job_version;
  if (job_version) {
    set_has_job_version();
  } else {
    clear_has_job_version();
  }
  // @@protoc_insertion_point(field_set_allocated:PBJob.job_version)
}

// optional .PBVersion configurator_version = 3;
bool PBJob::has_configurator_version() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
void PBJob::set_has_configurator_version() {
  _has_bits_[0] |= 0x00000040u;
}
void PBJob::clear_has_configurator_version() {
  _has_bits_[0] &= ~0x00000040u;
}
void PBJob::clear_configurator_version() {
  if (configurator_version_ != NULL) configurator_version_->::PBVersion::Clear();
  clear_has_configurator_version();
}
const ::PBVersion& PBJob::configurator_version() const {
  // @@protoc_insertion_point(field_get:PBJob.configurator_version)
  return configurator_version_ != NULL ? *configurator_version_
                         : *::PBVersion::internal_default_instance();
}
::PBVersion* PBJob::mutable_configurator_version() {
  set_has_configurator_version();
  if (configurator_version_ == NULL) {
    configurator_version_ = new ::PBVersion;
  }
  // @@protoc_insertion_point(field_mutable:PBJob.configurator_version)
  return configurator_version_;
}
::PBVersion* PBJob::release_configurator_version() {
  // @@protoc_insertion_point(field_release:PBJob.configurator_version)
  clear_has_configurator_version();
  ::PBVersion* temp = configurator_version_;
  configurator_version_ = NULL;
  return temp;
}
void PBJob::set_allocated_configurator_version(::PBVersion* configurator_version) {
  delete configurator_version_;
  configurator_version_ = configurator_version;
  if (configurator_version) {
    set_has_configurator_version();
  } else {
    clear_has_configurator_version();
  }
  // @@protoc_insertion_point(field_set_allocated:PBJob.configurator_version)
}

// optional string creation_date_utc = 4;
bool PBJob::has_creation_date_utc() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void PBJob::set_has_creation_date_utc() {
  _has_bits_[0] |= 0x00000002u;
}
void PBJob::clear_has_creation_date_utc() {
  _has_bits_[0] &= ~0x00000002u;
}
void PBJob::clear_creation_date_utc() {
  creation_date_utc_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_creation_date_utc();
}
const ::std::string& PBJob::creation_date_utc() const {
  // @@protoc_insertion_point(field_get:PBJob.creation_date_utc)
  return creation_date_utc_.GetNoArena();
}
void PBJob::set_creation_date_utc(const ::std::string& value) {
  set_has_creation_date_utc();
  creation_date_utc_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:PBJob.creation_date_utc)
}
#if LANG_CXX11
void PBJob::set_creation_date_utc(::std::string&& value) {
  set_has_creation_date_utc();
  creation_date_utc_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:PBJob.creation_date_utc)
}
#endif
void PBJob::set_creation_date_utc(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_creation_date_utc();
  creation_date_utc_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:PBJob.creation_date_utc)
}
void PBJob::set_creation_date_utc(const char* value, size_t size) {
  set_has_creation_date_utc();
  creation_date_utc_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:PBJob.creation_date_utc)
}
::std::string* PBJob::mutable_creation_date_utc() {
  set_has_creation_date_utc();
  // @@protoc_insertion_point(field_mutable:PBJob.creation_date_utc)
  return creation_date_utc_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* PBJob::release_creation_date_utc() {
  // @@protoc_insertion_point(field_release:PBJob.creation_date_utc)
  clear_has_creation_date_utc();
  return creation_date_utc_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void PBJob::set_allocated_creation_date_utc(::std::string* creation_date_utc) {
  if (creation_date_utc != NULL) {
    set_has_creation_date_utc();
  } else {
    clear_has_creation_date_utc();
  }
  creation_date_utc_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), creation_date_utc);
  // @@protoc_insertion_point(field_set_allocated:PBJob.creation_date_utc)
}

// optional string creation_time_utc = 5;
bool PBJob::has_creation_time_utc() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void PBJob::set_has_creation_time_utc() {
  _has_bits_[0] |= 0x00000004u;
}
void PBJob::clear_has_creation_time_utc() {
  _has_bits_[0] &= ~0x00000004u;
}
void PBJob::clear_creation_time_utc() {
  creation_time_utc_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_creation_time_utc();
}
const ::std::string& PBJob::creation_time_utc() const {
  // @@protoc_insertion_point(field_get:PBJob.creation_time_utc)
  return creation_time_utc_.GetNoArena();
}
void PBJob::set_creation_time_utc(const ::std::string& value) {
  set_has_creation_time_utc();
  creation_time_utc_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:PBJob.creation_time_utc)
}
#if LANG_CXX11
void PBJob::set_creation_time_utc(::std::string&& value) {
  set_has_creation_time_utc();
  creation_time_utc_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:PBJob.creation_time_utc)
}
#endif
void PBJob::set_creation_time_utc(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_creation_time_utc();
  creation_time_utc_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:PBJob.creation_time_utc)
}
void PBJob::set_creation_time_utc(const char* value, size_t size) {
  set_has_creation_time_utc();
  creation_time_utc_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:PBJob.creation_time_utc)
}
::std::string* PBJob::mutable_creation_time_utc() {
  set_has_creation_time_utc();
  // @@protoc_insertion_point(field_mutable:PBJob.creation_time_utc)
  return creation_time_utc_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* PBJob::release_creation_time_utc() {
  // @@protoc_insertion_point(field_release:PBJob.creation_time_utc)
  clear_has_creation_time_utc();
  return creation_time_utc_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void PBJob::set_allocated_creation_time_utc(::std::string* creation_time_utc) {
  if (creation_time_utc != NULL) {
    set_has_creation_time_utc();
  } else {
    clear_has_creation_time_utc();
  }
  creation_time_utc_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), creation_time_utc);
  // @@protoc_insertion_point(field_set_allocated:PBJob.creation_time_utc)
}

// optional string title = 6;
bool PBJob::has_title() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void PBJob::set_has_title() {
  _has_bits_[0] |= 0x00000008u;
}
void PBJob::clear_has_title() {
  _has_bits_[0] &= ~0x00000008u;
}
void PBJob::clear_title() {
  title_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_title();
}
const ::std::string& PBJob::title() const {
  // @@protoc_insertion_point(field_get:PBJob.title)
  return title_.GetNoArena();
}
void PBJob::set_title(const ::std::string& value) {
  set_has_title();
  title_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:PBJob.title)
}
#if LANG_CXX11
void PBJob::set_title(::std::string&& value) {
  set_has_title();
  title_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:PBJob.title)
}
#endif
void PBJob::set_title(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_title();
  title_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:PBJob.title)
}
void PBJob::set_title(const char* value, size_t size) {
  set_has_title();
  title_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:PBJob.title)
}
::std::string* PBJob::mutable_title() {
  set_has_title();
  // @@protoc_insertion_point(field_mutable:PBJob.title)
  return title_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* PBJob::release_title() {
  // @@protoc_insertion_point(field_release:PBJob.title)
  clear_has_title();
  return title_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void PBJob::set_allocated_title(::std::string* title) {
  if (title != NULL) {
    set_has_title();
  } else {
    clear_has_title();
  }
  title_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), title);
  // @@protoc_insertion_point(field_set_allocated:PBJob.title)
}

// optional string password = 7;
bool PBJob::has_password() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void PBJob::set_has_password() {
  _has_bits_[0] |= 0x00000010u;
}
void PBJob::clear_has_password() {
  _has_bits_[0] &= ~0x00000010u;
}
void PBJob::clear_password() {
  password_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_password();
}
const ::std::string& PBJob::password() const {
  // @@protoc_insertion_point(field_get:PBJob.password)
  return password_.GetNoArena();
}
void PBJob::set_password(const ::std::string& value) {
  set_has_password();
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:PBJob.password)
}
#if LANG_CXX11
void PBJob::set_password(::std::string&& value) {
  set_has_password();
  password_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:PBJob.password)
}
#endif
void PBJob::set_password(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_password();
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:PBJob.password)
}
void PBJob::set_password(const char* value, size_t size) {
  set_has_password();
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:PBJob.password)
}
::std::string* PBJob::mutable_password() {
  set_has_password();
  // @@protoc_insertion_point(field_mutable:PBJob.password)
  return password_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* PBJob::release_password() {
  // @@protoc_insertion_point(field_release:PBJob.password)
  clear_has_password();
  return password_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void PBJob::set_allocated_password(::std::string* password) {
  if (password != NULL) {
    set_has_password();
  } else {
    clear_has_password();
  }
  password_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), password);
  // @@protoc_insertion_point(field_set_allocated:PBJob.password)
}

// optional .StandardType standard = 8;
bool PBJob::has_standard() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
void PBJob::set_has_standard() {
  _has_bits_[0] |= 0x00000080u;
}
void PBJob::clear_has_standard() {
  _has_bits_[0] &= ~0x00000080u;
}
void PBJob::clear_standard() {
  standard_ = 0;
  clear_has_standard();
}
::StandardType PBJob::standard() const {
  // @@protoc_insertion_point(field_get:PBJob.standard)
  return static_cast< ::StandardType >(standard_);
}
void PBJob::set_standard(::StandardType value) {
  assert(::StandardType_IsValid(value));
  set_has_standard();
  standard_ = value;
  // @@protoc_insertion_point(field_set:PBJob.standard)
}

// repeated .PBFloor floor = 9;
int PBJob::floor_size() const {
  return floor_.size();
}
void PBJob::clear_floor() {
  floor_.Clear();
}
const ::PBFloor& PBJob::floor(int index) const {
  // @@protoc_insertion_point(field_get:PBJob.floor)
  return floor_.Get(index);
}
::PBFloor* PBJob::mutable_floor(int index) {
  // @@protoc_insertion_point(field_mutable:PBJob.floor)
  return floor_.Mutable(index);
}
::PBFloor* PBJob::add_floor() {
  // @@protoc_insertion_point(field_add:PBJob.floor)
  return floor_.Add();
}
::google::protobuf::RepeatedPtrField< ::PBFloor >*
PBJob::mutable_floor() {
  // @@protoc_insertion_point(field_mutable_list:PBJob.floor)
  return &floor_;
}
const ::google::protobuf::RepeatedPtrField< ::PBFloor >&
PBJob::floor() const {
  // @@protoc_insertion_point(field_list:PBJob.floor)
  return floor_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)
