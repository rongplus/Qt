// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: zc.proto

#ifndef PROTOBUF_zc_2eproto__INCLUDED
#define PROTOBUF_zc_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3003000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3003000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
class CFG_DST;
class CFG_DSTDefaultTypeInternal;
extern CFG_DSTDefaultTypeInternal _CFG_DST_default_instance_;
class CFG_RTC;
class CFG_RTCDefaultTypeInternal;
extern CFG_RTCDefaultTypeInternal _CFG_RTC_default_instance_;
class LOCAL_OUTPUT_CORR;
class LOCAL_OUTPUT_CORRDefaultTypeInternal;
extern LOCAL_OUTPUT_CORRDefaultTypeInternal _LOCAL_OUTPUT_CORR_default_instance_;
class PASSWORD;
class PASSWORDDefaultTypeInternal;
extern PASSWORDDefaultTypeInternal _PASSWORD_default_instance_;
class PASSWORDS;
class PASSWORDSDefaultTypeInternal;
extern PASSWORDSDefaultTypeInternal _PASSWORDS_default_instance_;
class REMOTE_OUTPUT_CORR;
class REMOTE_OUTPUT_CORRDefaultTypeInternal;
extern REMOTE_OUTPUT_CORRDefaultTypeInternal _REMOTE_OUTPUT_CORR_default_instance_;
class TIMER;
class TIMERDefaultTypeInternal;
extern TIMERDefaultTypeInternal _TIMER_default_instance_;
class WIO_INFO;
class WIO_INFODefaultTypeInternal;
extern WIO_INFODefaultTypeInternal _WIO_INFO_default_instance_;
class ZC;
class ZCDefaultTypeInternal;
extern ZCDefaultTypeInternal _ZC_default_instance_;

namespace protobuf_zc_2eproto {
// Internal implementation detail -- do not call these.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[];
  static const ::google::protobuf::uint32 offsets[];
  static void InitDefaultsImpl();
  static void Shutdown();
};
void AddDescriptors();
void InitDefaults();
}  // namespace protobuf_zc_2eproto

// ===================================================================

class WIO_INFO : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:WIO_INFO) */ {
 public:
  WIO_INFO();
  virtual ~WIO_INFO();

  WIO_INFO(const WIO_INFO& from);

  inline WIO_INFO& operator=(const WIO_INFO& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const WIO_INFO& default_instance();

  static inline const WIO_INFO* internal_default_instance() {
    return reinterpret_cast<const WIO_INFO*>(
               &_WIO_INFO_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(WIO_INFO* other);

  // implements Message ----------------------------------------------

  inline WIO_INFO* New() const PROTOBUF_FINAL { return New(NULL); }

  WIO_INFO* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const WIO_INFO& from);
  void MergeFrom(const WIO_INFO& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(WIO_INFO* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string MacAddr = 1;
  bool has_macaddr() const;
  void clear_macaddr();
  static const int kMacAddrFieldNumber = 1;
  const ::std::string& macaddr() const;
  void set_macaddr(const ::std::string& value);
  #if LANG_CXX11
  void set_macaddr(::std::string&& value);
  #endif
  void set_macaddr(const char* value);
  void set_macaddr(const char* value, size_t size);
  ::std::string* mutable_macaddr();
  ::std::string* release_macaddr();
  void set_allocated_macaddr(::std::string* macaddr);

  // required string Label = 2;
  bool has_label() const;
  void clear_label();
  static const int kLabelFieldNumber = 2;
  const ::std::string& label() const;
  void set_label(const ::std::string& value);
  #if LANG_CXX11
  void set_label(::std::string&& value);
  #endif
  void set_label(const char* value);
  void set_label(const char* value, size_t size);
  ::std::string* mutable_label();
  ::std::string* release_label();
  void set_allocated_label(::std::string* label);

  // required int32 CktType = 3;
  bool has_ckttype() const;
  void clear_ckttype();
  static const int kCktTypeFieldNumber = 3;
  ::google::protobuf::int32 ckttype() const;
  void set_ckttype(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:WIO_INFO)
 private:
  void set_has_macaddr();
  void clear_has_macaddr();
  void set_has_label();
  void clear_has_label();
  void set_has_ckttype();
  void clear_has_ckttype();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr macaddr_;
  ::google::protobuf::internal::ArenaStringPtr label_;
  ::google::protobuf::int32 ckttype_;
  friend struct protobuf_zc_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class TIMER : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:TIMER) */ {
 public:
  TIMER();
  virtual ~TIMER();

  TIMER(const TIMER& from);

  inline TIMER& operator=(const TIMER& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TIMER& default_instance();

  static inline const TIMER* internal_default_instance() {
    return reinterpret_cast<const TIMER*>(
               &_TIMER_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void Swap(TIMER* other);

  // implements Message ----------------------------------------------

  inline TIMER* New() const PROTOBUF_FINAL { return New(NULL); }

  TIMER* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const TIMER& from);
  void MergeFrom(const TIMER& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TIMER* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 ID = 1;
  bool has_id() const;
  void clear_id();
  static const int kIDFieldNumber = 1;
  ::google::protobuf::int32 id() const;
  void set_id(::google::protobuf::int32 value);

  // required int32 Duration = 2;
  bool has_duration() const;
  void clear_duration();
  static const int kDurationFieldNumber = 2;
  ::google::protobuf::int32 duration() const;
  void set_duration(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:TIMER)
 private:
  void set_has_id();
  void clear_has_id();
  void set_has_duration();
  void clear_has_duration();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int32 id_;
  ::google::protobuf::int32 duration_;
  friend struct protobuf_zc_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LOCAL_OUTPUT_CORR : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:LOCAL_OUTPUT_CORR) */ {
 public:
  LOCAL_OUTPUT_CORR();
  virtual ~LOCAL_OUTPUT_CORR();

  LOCAL_OUTPUT_CORR(const LOCAL_OUTPUT_CORR& from);

  inline LOCAL_OUTPUT_CORR& operator=(const LOCAL_OUTPUT_CORR& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LOCAL_OUTPUT_CORR& default_instance();

  static inline const LOCAL_OUTPUT_CORR* internal_default_instance() {
    return reinterpret_cast<const LOCAL_OUTPUT_CORR*>(
               &_LOCAL_OUTPUT_CORR_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    2;

  void Swap(LOCAL_OUTPUT_CORR* other);

  // implements Message ----------------------------------------------

  inline LOCAL_OUTPUT_CORR* New() const PROTOBUF_FINAL { return New(NULL); }

  LOCAL_OUTPUT_CORR* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const LOCAL_OUTPUT_CORR& from);
  void MergeFrom(const LOCAL_OUTPUT_CORR& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(LOCAL_OUTPUT_CORR* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string IptCorrs = 1;
  bool has_iptcorrs() const;
  void clear_iptcorrs();
  static const int kIptCorrsFieldNumber = 1;
  const ::std::string& iptcorrs() const;
  void set_iptcorrs(const ::std::string& value);
  #if LANG_CXX11
  void set_iptcorrs(::std::string&& value);
  #endif
  void set_iptcorrs(const char* value);
  void set_iptcorrs(const char* value, size_t size);
  ::std::string* mutable_iptcorrs();
  ::std::string* release_iptcorrs();
  void set_allocated_iptcorrs(::std::string* iptcorrs);

  // required string StatCorrs = 2;
  bool has_statcorrs() const;
  void clear_statcorrs();
  static const int kStatCorrsFieldNumber = 2;
  const ::std::string& statcorrs() const;
  void set_statcorrs(const ::std::string& value);
  #if LANG_CXX11
  void set_statcorrs(::std::string&& value);
  #endif
  void set_statcorrs(const char* value);
  void set_statcorrs(const char* value, size_t size);
  ::std::string* mutable_statcorrs();
  ::std::string* release_statcorrs();
  void set_allocated_statcorrs(::std::string* statcorrs);

  // required string TrbCorrs = 3;
  bool has_trbcorrs() const;
  void clear_trbcorrs();
  static const int kTrbCorrsFieldNumber = 3;
  const ::std::string& trbcorrs() const;
  void set_trbcorrs(const ::std::string& value);
  #if LANG_CXX11
  void set_trbcorrs(::std::string&& value);
  #endif
  void set_trbcorrs(const char* value);
  void set_trbcorrs(const char* value, size_t size);
  ::std::string* mutable_trbcorrs();
  ::std::string* release_trbcorrs();
  void set_allocated_trbcorrs(::std::string* trbcorrs);

  // required string RemTrbCorrs = 4;
  bool has_remtrbcorrs() const;
  void clear_remtrbcorrs();
  static const int kRemTrbCorrsFieldNumber = 4;
  const ::std::string& remtrbcorrs() const;
  void set_remtrbcorrs(const ::std::string& value);
  #if LANG_CXX11
  void set_remtrbcorrs(::std::string&& value);
  #endif
  void set_remtrbcorrs(const char* value);
  void set_remtrbcorrs(const char* value, size_t size);
  ::std::string* mutable_remtrbcorrs();
  ::std::string* release_remtrbcorrs();
  void set_allocated_remtrbcorrs(::std::string* remtrbcorrs);

  // required string RemIptCorrs = 5;
  bool has_remiptcorrs() const;
  void clear_remiptcorrs();
  static const int kRemIptCorrsFieldNumber = 5;
  const ::std::string& remiptcorrs() const;
  void set_remiptcorrs(const ::std::string& value);
  #if LANG_CXX11
  void set_remiptcorrs(::std::string&& value);
  #endif
  void set_remiptcorrs(const char* value);
  void set_remiptcorrs(const char* value, size_t size);
  ::std::string* mutable_remiptcorrs();
  ::std::string* release_remiptcorrs();
  void set_allocated_remiptcorrs(::std::string* remiptcorrs);

  // @@protoc_insertion_point(class_scope:LOCAL_OUTPUT_CORR)
 private:
  void set_has_iptcorrs();
  void clear_has_iptcorrs();
  void set_has_statcorrs();
  void clear_has_statcorrs();
  void set_has_trbcorrs();
  void clear_has_trbcorrs();
  void set_has_remtrbcorrs();
  void clear_has_remtrbcorrs();
  void set_has_remiptcorrs();
  void clear_has_remiptcorrs();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr iptcorrs_;
  ::google::protobuf::internal::ArenaStringPtr statcorrs_;
  ::google::protobuf::internal::ArenaStringPtr trbcorrs_;
  ::google::protobuf::internal::ArenaStringPtr remtrbcorrs_;
  ::google::protobuf::internal::ArenaStringPtr remiptcorrs_;
  friend struct protobuf_zc_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class REMOTE_OUTPUT_CORR : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:REMOTE_OUTPUT_CORR) */ {
 public:
  REMOTE_OUTPUT_CORR();
  virtual ~REMOTE_OUTPUT_CORR();

  REMOTE_OUTPUT_CORR(const REMOTE_OUTPUT_CORR& from);

  inline REMOTE_OUTPUT_CORR& operator=(const REMOTE_OUTPUT_CORR& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const REMOTE_OUTPUT_CORR& default_instance();

  static inline const REMOTE_OUTPUT_CORR* internal_default_instance() {
    return reinterpret_cast<const REMOTE_OUTPUT_CORR*>(
               &_REMOTE_OUTPUT_CORR_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    3;

  void Swap(REMOTE_OUTPUT_CORR* other);

  // implements Message ----------------------------------------------

  inline REMOTE_OUTPUT_CORR* New() const PROTOBUF_FINAL { return New(NULL); }

  REMOTE_OUTPUT_CORR* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const REMOTE_OUTPUT_CORR& from);
  void MergeFrom(const REMOTE_OUTPUT_CORR& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(REMOTE_OUTPUT_CORR* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string IptCorrs = 1;
  bool has_iptcorrs() const;
  void clear_iptcorrs();
  static const int kIptCorrsFieldNumber = 1;
  const ::std::string& iptcorrs() const;
  void set_iptcorrs(const ::std::string& value);
  #if LANG_CXX11
  void set_iptcorrs(::std::string&& value);
  #endif
  void set_iptcorrs(const char* value);
  void set_iptcorrs(const char* value, size_t size);
  ::std::string* mutable_iptcorrs();
  ::std::string* release_iptcorrs();
  void set_allocated_iptcorrs(::std::string* iptcorrs);

  // required string StatCorrs = 2;
  bool has_statcorrs() const;
  void clear_statcorrs();
  static const int kStatCorrsFieldNumber = 2;
  const ::std::string& statcorrs() const;
  void set_statcorrs(const ::std::string& value);
  #if LANG_CXX11
  void set_statcorrs(::std::string&& value);
  #endif
  void set_statcorrs(const char* value);
  void set_statcorrs(const char* value, size_t size);
  ::std::string* mutable_statcorrs();
  ::std::string* release_statcorrs();
  void set_allocated_statcorrs(::std::string* statcorrs);

  // required string RemIptCorrs = 3;
  bool has_remiptcorrs() const;
  void clear_remiptcorrs();
  static const int kRemIptCorrsFieldNumber = 3;
  const ::std::string& remiptcorrs() const;
  void set_remiptcorrs(const ::std::string& value);
  #if LANG_CXX11
  void set_remiptcorrs(::std::string&& value);
  #endif
  void set_remiptcorrs(const char* value);
  void set_remiptcorrs(const char* value, size_t size);
  ::std::string* mutable_remiptcorrs();
  ::std::string* release_remiptcorrs();
  void set_allocated_remiptcorrs(::std::string* remiptcorrs);

  // @@protoc_insertion_point(class_scope:REMOTE_OUTPUT_CORR)
 private:
  void set_has_iptcorrs();
  void clear_has_iptcorrs();
  void set_has_statcorrs();
  void clear_has_statcorrs();
  void set_has_remiptcorrs();
  void clear_has_remiptcorrs();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr iptcorrs_;
  ::google::protobuf::internal::ArenaStringPtr statcorrs_;
  ::google::protobuf::internal::ArenaStringPtr remiptcorrs_;
  friend struct protobuf_zc_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class PASSWORD : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:PASSWORD) */ {
 public:
  PASSWORD();
  virtual ~PASSWORD();

  PASSWORD(const PASSWORD& from);

  inline PASSWORD& operator=(const PASSWORD& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PASSWORD& default_instance();

  static inline const PASSWORD* internal_default_instance() {
    return reinterpret_cast<const PASSWORD*>(
               &_PASSWORD_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    4;

  void Swap(PASSWORD* other);

  // implements Message ----------------------------------------------

  inline PASSWORD* New() const PROTOBUF_FINAL { return New(NULL); }

  PASSWORD* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const PASSWORD& from);
  void MergeFrom(const PASSWORD& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(PASSWORD* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string Data = 2;
  bool has_data() const;
  void clear_data();
  static const int kDataFieldNumber = 2;
  const ::std::string& data() const;
  void set_data(const ::std::string& value);
  #if LANG_CXX11
  void set_data(::std::string&& value);
  #endif
  void set_data(const char* value);
  void set_data(const char* value, size_t size);
  ::std::string* mutable_data();
  ::std::string* release_data();
  void set_allocated_data(::std::string* data);

  // required int32 Len = 1;
  bool has_len() const;
  void clear_len();
  static const int kLenFieldNumber = 1;
  ::google::protobuf::int32 len() const;
  void set_len(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:PASSWORD)
 private:
  void set_has_len();
  void clear_has_len();
  void set_has_data();
  void clear_has_data();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr data_;
  ::google::protobuf::int32 len_;
  friend struct protobuf_zc_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CFG_DST : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CFG_DST) */ {
 public:
  CFG_DST();
  virtual ~CFG_DST();

  CFG_DST(const CFG_DST& from);

  inline CFG_DST& operator=(const CFG_DST& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CFG_DST& default_instance();

  static inline const CFG_DST* internal_default_instance() {
    return reinterpret_cast<const CFG_DST*>(
               &_CFG_DST_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    5;

  void Swap(CFG_DST* other);

  // implements Message ----------------------------------------------

  inline CFG_DST* New() const PROTOBUF_FINAL { return New(NULL); }

  CFG_DST* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CFG_DST& from);
  void MergeFrom(const CFG_DST& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CFG_DST* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 StartMonth = 1;
  bool has_startmonth() const;
  void clear_startmonth();
  static const int kStartMonthFieldNumber = 1;
  ::google::protobuf::int32 startmonth() const;
  void set_startmonth(::google::protobuf::int32 value);

  // required int32 StartOrdinalWeek = 2;
  bool has_startordinalweek() const;
  void clear_startordinalweek();
  static const int kStartOrdinalWeekFieldNumber = 2;
  ::google::protobuf::int32 startordinalweek() const;
  void set_startordinalweek(::google::protobuf::int32 value);

  // required int32 StartDayOfWeek = 3;
  bool has_startdayofweek() const;
  void clear_startdayofweek();
  static const int kStartDayOfWeekFieldNumber = 3;
  ::google::protobuf::int32 startdayofweek() const;
  void set_startdayofweek(::google::protobuf::int32 value);

  // required int32 StartHour = 4;
  bool has_starthour() const;
  void clear_starthour();
  static const int kStartHourFieldNumber = 4;
  ::google::protobuf::int32 starthour() const;
  void set_starthour(::google::protobuf::int32 value);

  // required int32 StartMin = 5;
  bool has_startmin() const;
  void clear_startmin();
  static const int kStartMinFieldNumber = 5;
  ::google::protobuf::int32 startmin() const;
  void set_startmin(::google::protobuf::int32 value);

  // required int32 EndMonth = 6;
  bool has_endmonth() const;
  void clear_endmonth();
  static const int kEndMonthFieldNumber = 6;
  ::google::protobuf::int32 endmonth() const;
  void set_endmonth(::google::protobuf::int32 value);

  // required int32 EndOrdinalWeek = 7;
  bool has_endordinalweek() const;
  void clear_endordinalweek();
  static const int kEndOrdinalWeekFieldNumber = 7;
  ::google::protobuf::int32 endordinalweek() const;
  void set_endordinalweek(::google::protobuf::int32 value);

  // required int32 EndDayOfWeek = 8;
  bool has_enddayofweek() const;
  void clear_enddayofweek();
  static const int kEndDayOfWeekFieldNumber = 8;
  ::google::protobuf::int32 enddayofweek() const;
  void set_enddayofweek(::google::protobuf::int32 value);

  // required int32 EndHour = 9;
  bool has_endhour() const;
  void clear_endhour();
  static const int kEndHourFieldNumber = 9;
  ::google::protobuf::int32 endhour() const;
  void set_endhour(::google::protobuf::int32 value);

  // required int32 EndMin = 10;
  bool has_endmin() const;
  void clear_endmin();
  static const int kEndMinFieldNumber = 10;
  ::google::protobuf::int32 endmin() const;
  void set_endmin(::google::protobuf::int32 value);

  // required int32 DailyAdjust = 11;
  bool has_dailyadjust() const;
  void clear_dailyadjust();
  static const int kDailyAdjustFieldNumber = 11;
  ::google::protobuf::int32 dailyadjust() const;
  void set_dailyadjust(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:CFG_DST)
 private:
  void set_has_startmonth();
  void clear_has_startmonth();
  void set_has_startordinalweek();
  void clear_has_startordinalweek();
  void set_has_startdayofweek();
  void clear_has_startdayofweek();
  void set_has_starthour();
  void clear_has_starthour();
  void set_has_startmin();
  void clear_has_startmin();
  void set_has_endmonth();
  void clear_has_endmonth();
  void set_has_endordinalweek();
  void clear_has_endordinalweek();
  void set_has_enddayofweek();
  void clear_has_enddayofweek();
  void set_has_endhour();
  void clear_has_endhour();
  void set_has_endmin();
  void clear_has_endmin();
  void set_has_dailyadjust();
  void clear_has_dailyadjust();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int32 startmonth_;
  ::google::protobuf::int32 startordinalweek_;
  ::google::protobuf::int32 startdayofweek_;
  ::google::protobuf::int32 starthour_;
  ::google::protobuf::int32 startmin_;
  ::google::protobuf::int32 endmonth_;
  ::google::protobuf::int32 endordinalweek_;
  ::google::protobuf::int32 enddayofweek_;
  ::google::protobuf::int32 endhour_;
  ::google::protobuf::int32 endmin_;
  ::google::protobuf::int32 dailyadjust_;
  friend struct protobuf_zc_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ZC : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ZC) */ {
 public:
  ZC();
  virtual ~ZC();

  ZC(const ZC& from);

  inline ZC& operator=(const ZC& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ZC& default_instance();

  static inline const ZC* internal_default_instance() {
    return reinterpret_cast<const ZC*>(
               &_ZC_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    6;

  void Swap(ZC* other);

  // implements Message ----------------------------------------------

  inline ZC* New() const PROTOBUF_FINAL { return New(NULL); }

  ZC* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ZC& from);
  void MergeFrom(const ZC& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ZC* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .REMOTE_OUTPUT_CORR RemoteCorr = 10;
  int remotecorr_size() const;
  void clear_remotecorr();
  static const int kRemoteCorrFieldNumber = 10;
  const ::REMOTE_OUTPUT_CORR& remotecorr(int index) const;
  ::REMOTE_OUTPUT_CORR* mutable_remotecorr(int index);
  ::REMOTE_OUTPUT_CORR* add_remotecorr();
  ::google::protobuf::RepeatedPtrField< ::REMOTE_OUTPUT_CORR >*
      mutable_remotecorr();
  const ::google::protobuf::RepeatedPtrField< ::REMOTE_OUTPUT_CORR >&
      remotecorr() const;

  // repeated .TIMER Timers = 11;
  int timers_size() const;
  void clear_timers();
  static const int kTimersFieldNumber = 11;
  const ::TIMER& timers(int index) const;
  ::TIMER* mutable_timers(int index);
  ::TIMER* add_timers();
  ::google::protobuf::RepeatedPtrField< ::TIMER >*
      mutable_timers();
  const ::google::protobuf::RepeatedPtrField< ::TIMER >&
      timers() const;

  // repeated .WIO_INFO WIOInfo = 12;
  int wioinfo_size() const;
  void clear_wioinfo();
  static const int kWIOInfoFieldNumber = 12;
  const ::WIO_INFO& wioinfo(int index) const;
  ::WIO_INFO* mutable_wioinfo(int index);
  ::WIO_INFO* add_wioinfo();
  ::google::protobuf::RepeatedPtrField< ::WIO_INFO >*
      mutable_wioinfo();
  const ::google::protobuf::RepeatedPtrField< ::WIO_INFO >&
      wioinfo() const;

  // repeated .PASSWORD Password = 13;
  int password_size() const;
  void clear_password();
  static const int kPasswordFieldNumber = 13;
  const ::PASSWORD& password(int index) const;
  ::PASSWORD* mutable_password(int index);
  ::PASSWORD* add_password();
  ::google::protobuf::RepeatedPtrField< ::PASSWORD >*
      mutable_password();
  const ::google::protobuf::RepeatedPtrField< ::PASSWORD >&
      password() const;

  // required string Label = 1;
  bool has_label() const;
  void clear_label();
  static const int kLabelFieldNumber = 1;
  const ::std::string& label() const;
  void set_label(const ::std::string& value);
  #if LANG_CXX11
  void set_label(::std::string&& value);
  #endif
  void set_label(const char* value);
  void set_label(const char* value, size_t size);
  ::std::string* mutable_label();
  ::std::string* release_label();
  void set_allocated_label(::std::string* label);

  // required string GUID = 2;
  bool has_guid() const;
  void clear_guid();
  static const int kGUIDFieldNumber = 2;
  const ::std::string& guid() const;
  void set_guid(const ::std::string& value);
  #if LANG_CXX11
  void set_guid(::std::string&& value);
  #endif
  void set_guid(const char* value);
  void set_guid(const char* value, size_t size);
  ::std::string* mutable_guid();
  ::std::string* release_guid();
  void set_allocated_guid(::std::string* guid);

  // required string ConfigVer = 3;
  bool has_configver() const;
  void clear_configver();
  static const int kConfigVerFieldNumber = 3;
  const ::std::string& configver() const;
  void set_configver(const ::std::string& value);
  #if LANG_CXX11
  void set_configver(::std::string&& value);
  #endif
  void set_configver(const char* value);
  void set_configver(const char* value, size_t size);
  ::std::string* mutable_configver();
  ::std::string* release_configver();
  void set_allocated_configver(::std::string* configver);

  // required string IptCktProcessType = 6;
  bool has_iptcktprocesstype() const;
  void clear_iptcktprocesstype();
  static const int kIptCktProcessTypeFieldNumber = 6;
  const ::std::string& iptcktprocesstype() const;
  void set_iptcktprocesstype(const ::std::string& value);
  #if LANG_CXX11
  void set_iptcktprocesstype(::std::string&& value);
  #endif
  void set_iptcktprocesstype(const char* value);
  void set_iptcktprocesstype(const char* value, size_t size);
  ::std::string* mutable_iptcktprocesstype();
  ::std::string* release_iptcktprocesstype();
  void set_allocated_iptcktprocesstype(::std::string* iptcktprocesstype);

  // required .LOCAL_OUTPUT_CORR LocalCorr = 7;
  bool has_localcorr() const;
  void clear_localcorr();
  static const int kLocalCorrFieldNumber = 7;
  const ::LOCAL_OUTPUT_CORR& localcorr() const;
  ::LOCAL_OUTPUT_CORR* mutable_localcorr();
  ::LOCAL_OUTPUT_CORR* release_localcorr();
  void set_allocated_localcorr(::LOCAL_OUTPUT_CORR* localcorr);

  // required .CFG_DST Dst = 8;
  bool has_dst() const;
  void clear_dst();
  static const int kDstFieldNumber = 8;
  const ::CFG_DST& dst() const;
  ::CFG_DST* mutable_dst();
  ::CFG_DST* release_dst();
  void set_allocated_dst(::CFG_DST* dst);

  // required int32 gSCUFeatureFlags = 4;
  bool has_gscufeatureflags() const;
  void clear_gscufeatureflags();
  static const int kGSCUFeatureFlagsFieldNumber = 4;
  ::google::protobuf::int32 gscufeatureflags() const;
  void set_gscufeatureflags(::google::protobuf::int32 value);

  // required int32 gHWUStrobesType = 5;
  bool has_ghwustrobestype() const;
  void clear_ghwustrobestype();
  static const int kGHWUStrobesTypeFieldNumber = 5;
  ::google::protobuf::int32 ghwustrobestype() const;
  void set_ghwustrobestype(::google::protobuf::int32 value);

  // required int32 DataIntCheck = 9;
  bool has_dataintcheck() const;
  void clear_dataintcheck();
  static const int kDataIntCheckFieldNumber = 9;
  ::google::protobuf::int32 dataintcheck() const;
  void set_dataintcheck(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:ZC)
 private:
  void set_has_label();
  void clear_has_label();
  void set_has_guid();
  void clear_has_guid();
  void set_has_configver();
  void clear_has_configver();
  void set_has_gscufeatureflags();
  void clear_has_gscufeatureflags();
  void set_has_ghwustrobestype();
  void clear_has_ghwustrobestype();
  void set_has_iptcktprocesstype();
  void clear_has_iptcktprocesstype();
  void set_has_localcorr();
  void clear_has_localcorr();
  void set_has_dst();
  void clear_has_dst();
  void set_has_dataintcheck();
  void clear_has_dataintcheck();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::REMOTE_OUTPUT_CORR > remotecorr_;
  ::google::protobuf::RepeatedPtrField< ::TIMER > timers_;
  ::google::protobuf::RepeatedPtrField< ::WIO_INFO > wioinfo_;
  ::google::protobuf::RepeatedPtrField< ::PASSWORD > password_;
  ::google::protobuf::internal::ArenaStringPtr label_;
  ::google::protobuf::internal::ArenaStringPtr guid_;
  ::google::protobuf::internal::ArenaStringPtr configver_;
  ::google::protobuf::internal::ArenaStringPtr iptcktprocesstype_;
  ::LOCAL_OUTPUT_CORR* localcorr_;
  ::CFG_DST* dst_;
  ::google::protobuf::int32 gscufeatureflags_;
  ::google::protobuf::int32 ghwustrobestype_;
  ::google::protobuf::int32 dataintcheck_;
  friend struct protobuf_zc_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class PASSWORDS : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:PASSWORDS) */ {
 public:
  PASSWORDS();
  virtual ~PASSWORDS();

  PASSWORDS(const PASSWORDS& from);

  inline PASSWORDS& operator=(const PASSWORDS& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PASSWORDS& default_instance();

  static inline const PASSWORDS* internal_default_instance() {
    return reinterpret_cast<const PASSWORDS*>(
               &_PASSWORDS_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    7;

  void Swap(PASSWORDS* other);

  // implements Message ----------------------------------------------

  inline PASSWORDS* New() const PROTOBUF_FINAL { return New(NULL); }

  PASSWORDS* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const PASSWORDS& from);
  void MergeFrom(const PASSWORDS& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(PASSWORDS* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .PASSWORD Password = 1;
  int password_size() const;
  void clear_password();
  static const int kPasswordFieldNumber = 1;
  const ::PASSWORD& password(int index) const;
  ::PASSWORD* mutable_password(int index);
  ::PASSWORD* add_password();
  ::google::protobuf::RepeatedPtrField< ::PASSWORD >*
      mutable_password();
  const ::google::protobuf::RepeatedPtrField< ::PASSWORD >&
      password() const;

  // @@protoc_insertion_point(class_scope:PASSWORDS)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::PASSWORD > password_;
  friend struct protobuf_zc_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CFG_RTC : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CFG_RTC) */ {
 public:
  CFG_RTC();
  virtual ~CFG_RTC();

  CFG_RTC(const CFG_RTC& from);

  inline CFG_RTC& operator=(const CFG_RTC& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CFG_RTC& default_instance();

  static inline const CFG_RTC* internal_default_instance() {
    return reinterpret_cast<const CFG_RTC*>(
               &_CFG_RTC_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    8;

  void Swap(CFG_RTC* other);

  // implements Message ----------------------------------------------

  inline CFG_RTC* New() const PROTOBUF_FINAL { return New(NULL); }

  CFG_RTC* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CFG_RTC& from);
  void MergeFrom(const CFG_RTC& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CFG_RTC* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 seconds = 1;
  bool has_seconds() const;
  void clear_seconds();
  static const int kSecondsFieldNumber = 1;
  ::google::protobuf::int32 seconds() const;
  void set_seconds(::google::protobuf::int32 value);

  // required int32 minutes = 2;
  bool has_minutes() const;
  void clear_minutes();
  static const int kMinutesFieldNumber = 2;
  ::google::protobuf::int32 minutes() const;
  void set_minutes(::google::protobuf::int32 value);

  // required int32 hours = 3;
  bool has_hours() const;
  void clear_hours();
  static const int kHoursFieldNumber = 3;
  ::google::protobuf::int32 hours() const;
  void set_hours(::google::protobuf::int32 value);

  // required int32 date = 4;
  bool has_date() const;
  void clear_date();
  static const int kDateFieldNumber = 4;
  ::google::protobuf::int32 date() const;
  void set_date(::google::protobuf::int32 value);

  // required int32 month = 5;
  bool has_month() const;
  void clear_month();
  static const int kMonthFieldNumber = 5;
  ::google::protobuf::int32 month() const;
  void set_month(::google::protobuf::int32 value);

  // required int32 year = 6;
  bool has_year() const;
  void clear_year();
  static const int kYearFieldNumber = 6;
  ::google::protobuf::int32 year() const;
  void set_year(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:CFG_RTC)
 private:
  void set_has_seconds();
  void clear_has_seconds();
  void set_has_minutes();
  void clear_has_minutes();
  void set_has_hours();
  void clear_has_hours();
  void set_has_date();
  void clear_has_date();
  void set_has_month();
  void clear_has_month();
  void set_has_year();
  void clear_has_year();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int32 seconds_;
  ::google::protobuf::int32 minutes_;
  ::google::protobuf::int32 hours_;
  ::google::protobuf::int32 date_;
  ::google::protobuf::int32 month_;
  ::google::protobuf::int32 year_;
  friend struct protobuf_zc_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// WIO_INFO

// required string MacAddr = 1;
inline bool WIO_INFO::has_macaddr() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void WIO_INFO::set_has_macaddr() {
  _has_bits_[0] |= 0x00000001u;
}
inline void WIO_INFO::clear_has_macaddr() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void WIO_INFO::clear_macaddr() {
  macaddr_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_macaddr();
}
inline const ::std::string& WIO_INFO::macaddr() const {
  // @@protoc_insertion_point(field_get:WIO_INFO.MacAddr)
  return macaddr_.GetNoArena();
}
inline void WIO_INFO::set_macaddr(const ::std::string& value) {
  set_has_macaddr();
  macaddr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:WIO_INFO.MacAddr)
}
#if LANG_CXX11
inline void WIO_INFO::set_macaddr(::std::string&& value) {
  set_has_macaddr();
  macaddr_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:WIO_INFO.MacAddr)
}
#endif
inline void WIO_INFO::set_macaddr(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_macaddr();
  macaddr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:WIO_INFO.MacAddr)
}
inline void WIO_INFO::set_macaddr(const char* value, size_t size) {
  set_has_macaddr();
  macaddr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:WIO_INFO.MacAddr)
}
inline ::std::string* WIO_INFO::mutable_macaddr() {
  set_has_macaddr();
  // @@protoc_insertion_point(field_mutable:WIO_INFO.MacAddr)
  return macaddr_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* WIO_INFO::release_macaddr() {
  // @@protoc_insertion_point(field_release:WIO_INFO.MacAddr)
  clear_has_macaddr();
  return macaddr_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void WIO_INFO::set_allocated_macaddr(::std::string* macaddr) {
  if (macaddr != NULL) {
    set_has_macaddr();
  } else {
    clear_has_macaddr();
  }
  macaddr_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), macaddr);
  // @@protoc_insertion_point(field_set_allocated:WIO_INFO.MacAddr)
}

// required string Label = 2;
inline bool WIO_INFO::has_label() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void WIO_INFO::set_has_label() {
  _has_bits_[0] |= 0x00000002u;
}
inline void WIO_INFO::clear_has_label() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void WIO_INFO::clear_label() {
  label_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_label();
}
inline const ::std::string& WIO_INFO::label() const {
  // @@protoc_insertion_point(field_get:WIO_INFO.Label)
  return label_.GetNoArena();
}
inline void WIO_INFO::set_label(const ::std::string& value) {
  set_has_label();
  label_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:WIO_INFO.Label)
}
#if LANG_CXX11
inline void WIO_INFO::set_label(::std::string&& value) {
  set_has_label();
  label_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:WIO_INFO.Label)
}
#endif
inline void WIO_INFO::set_label(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_label();
  label_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:WIO_INFO.Label)
}
inline void WIO_INFO::set_label(const char* value, size_t size) {
  set_has_label();
  label_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:WIO_INFO.Label)
}
inline ::std::string* WIO_INFO::mutable_label() {
  set_has_label();
  // @@protoc_insertion_point(field_mutable:WIO_INFO.Label)
  return label_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* WIO_INFO::release_label() {
  // @@protoc_insertion_point(field_release:WIO_INFO.Label)
  clear_has_label();
  return label_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void WIO_INFO::set_allocated_label(::std::string* label) {
  if (label != NULL) {
    set_has_label();
  } else {
    clear_has_label();
  }
  label_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), label);
  // @@protoc_insertion_point(field_set_allocated:WIO_INFO.Label)
}

// required int32 CktType = 3;
inline bool WIO_INFO::has_ckttype() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void WIO_INFO::set_has_ckttype() {
  _has_bits_[0] |= 0x00000004u;
}
inline void WIO_INFO::clear_has_ckttype() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void WIO_INFO::clear_ckttype() {
  ckttype_ = 0;
  clear_has_ckttype();
}
inline ::google::protobuf::int32 WIO_INFO::ckttype() const {
  // @@protoc_insertion_point(field_get:WIO_INFO.CktType)
  return ckttype_;
}
inline void WIO_INFO::set_ckttype(::google::protobuf::int32 value) {
  set_has_ckttype();
  ckttype_ = value;
  // @@protoc_insertion_point(field_set:WIO_INFO.CktType)
}

// -------------------------------------------------------------------

// TIMER

// required int32 ID = 1;
inline bool TIMER::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TIMER::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TIMER::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TIMER::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 TIMER::id() const {
  // @@protoc_insertion_point(field_get:TIMER.ID)
  return id_;
}
inline void TIMER::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:TIMER.ID)
}

// required int32 Duration = 2;
inline bool TIMER::has_duration() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TIMER::set_has_duration() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TIMER::clear_has_duration() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TIMER::clear_duration() {
  duration_ = 0;
  clear_has_duration();
}
inline ::google::protobuf::int32 TIMER::duration() const {
  // @@protoc_insertion_point(field_get:TIMER.Duration)
  return duration_;
}
inline void TIMER::set_duration(::google::protobuf::int32 value) {
  set_has_duration();
  duration_ = value;
  // @@protoc_insertion_point(field_set:TIMER.Duration)
}

// -------------------------------------------------------------------

// LOCAL_OUTPUT_CORR

// required string IptCorrs = 1;
inline bool LOCAL_OUTPUT_CORR::has_iptcorrs() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void LOCAL_OUTPUT_CORR::set_has_iptcorrs() {
  _has_bits_[0] |= 0x00000001u;
}
inline void LOCAL_OUTPUT_CORR::clear_has_iptcorrs() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void LOCAL_OUTPUT_CORR::clear_iptcorrs() {
  iptcorrs_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_iptcorrs();
}
inline const ::std::string& LOCAL_OUTPUT_CORR::iptcorrs() const {
  // @@protoc_insertion_point(field_get:LOCAL_OUTPUT_CORR.IptCorrs)
  return iptcorrs_.GetNoArena();
}
inline void LOCAL_OUTPUT_CORR::set_iptcorrs(const ::std::string& value) {
  set_has_iptcorrs();
  iptcorrs_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:LOCAL_OUTPUT_CORR.IptCorrs)
}
#if LANG_CXX11
inline void LOCAL_OUTPUT_CORR::set_iptcorrs(::std::string&& value) {
  set_has_iptcorrs();
  iptcorrs_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:LOCAL_OUTPUT_CORR.IptCorrs)
}
#endif
inline void LOCAL_OUTPUT_CORR::set_iptcorrs(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_iptcorrs();
  iptcorrs_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:LOCAL_OUTPUT_CORR.IptCorrs)
}
inline void LOCAL_OUTPUT_CORR::set_iptcorrs(const char* value, size_t size) {
  set_has_iptcorrs();
  iptcorrs_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:LOCAL_OUTPUT_CORR.IptCorrs)
}
inline ::std::string* LOCAL_OUTPUT_CORR::mutable_iptcorrs() {
  set_has_iptcorrs();
  // @@protoc_insertion_point(field_mutable:LOCAL_OUTPUT_CORR.IptCorrs)
  return iptcorrs_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* LOCAL_OUTPUT_CORR::release_iptcorrs() {
  // @@protoc_insertion_point(field_release:LOCAL_OUTPUT_CORR.IptCorrs)
  clear_has_iptcorrs();
  return iptcorrs_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LOCAL_OUTPUT_CORR::set_allocated_iptcorrs(::std::string* iptcorrs) {
  if (iptcorrs != NULL) {
    set_has_iptcorrs();
  } else {
    clear_has_iptcorrs();
  }
  iptcorrs_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), iptcorrs);
  // @@protoc_insertion_point(field_set_allocated:LOCAL_OUTPUT_CORR.IptCorrs)
}

// required string StatCorrs = 2;
inline bool LOCAL_OUTPUT_CORR::has_statcorrs() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void LOCAL_OUTPUT_CORR::set_has_statcorrs() {
  _has_bits_[0] |= 0x00000002u;
}
inline void LOCAL_OUTPUT_CORR::clear_has_statcorrs() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void LOCAL_OUTPUT_CORR::clear_statcorrs() {
  statcorrs_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_statcorrs();
}
inline const ::std::string& LOCAL_OUTPUT_CORR::statcorrs() const {
  // @@protoc_insertion_point(field_get:LOCAL_OUTPUT_CORR.StatCorrs)
  return statcorrs_.GetNoArena();
}
inline void LOCAL_OUTPUT_CORR::set_statcorrs(const ::std::string& value) {
  set_has_statcorrs();
  statcorrs_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:LOCAL_OUTPUT_CORR.StatCorrs)
}
#if LANG_CXX11
inline void LOCAL_OUTPUT_CORR::set_statcorrs(::std::string&& value) {
  set_has_statcorrs();
  statcorrs_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:LOCAL_OUTPUT_CORR.StatCorrs)
}
#endif
inline void LOCAL_OUTPUT_CORR::set_statcorrs(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_statcorrs();
  statcorrs_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:LOCAL_OUTPUT_CORR.StatCorrs)
}
inline void LOCAL_OUTPUT_CORR::set_statcorrs(const char* value, size_t size) {
  set_has_statcorrs();
  statcorrs_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:LOCAL_OUTPUT_CORR.StatCorrs)
}
inline ::std::string* LOCAL_OUTPUT_CORR::mutable_statcorrs() {
  set_has_statcorrs();
  // @@protoc_insertion_point(field_mutable:LOCAL_OUTPUT_CORR.StatCorrs)
  return statcorrs_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* LOCAL_OUTPUT_CORR::release_statcorrs() {
  // @@protoc_insertion_point(field_release:LOCAL_OUTPUT_CORR.StatCorrs)
  clear_has_statcorrs();
  return statcorrs_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LOCAL_OUTPUT_CORR::set_allocated_statcorrs(::std::string* statcorrs) {
  if (statcorrs != NULL) {
    set_has_statcorrs();
  } else {
    clear_has_statcorrs();
  }
  statcorrs_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), statcorrs);
  // @@protoc_insertion_point(field_set_allocated:LOCAL_OUTPUT_CORR.StatCorrs)
}

// required string TrbCorrs = 3;
inline bool LOCAL_OUTPUT_CORR::has_trbcorrs() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void LOCAL_OUTPUT_CORR::set_has_trbcorrs() {
  _has_bits_[0] |= 0x00000004u;
}
inline void LOCAL_OUTPUT_CORR::clear_has_trbcorrs() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void LOCAL_OUTPUT_CORR::clear_trbcorrs() {
  trbcorrs_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_trbcorrs();
}
inline const ::std::string& LOCAL_OUTPUT_CORR::trbcorrs() const {
  // @@protoc_insertion_point(field_get:LOCAL_OUTPUT_CORR.TrbCorrs)
  return trbcorrs_.GetNoArena();
}
inline void LOCAL_OUTPUT_CORR::set_trbcorrs(const ::std::string& value) {
  set_has_trbcorrs();
  trbcorrs_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:LOCAL_OUTPUT_CORR.TrbCorrs)
}
#if LANG_CXX11
inline void LOCAL_OUTPUT_CORR::set_trbcorrs(::std::string&& value) {
  set_has_trbcorrs();
  trbcorrs_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:LOCAL_OUTPUT_CORR.TrbCorrs)
}
#endif
inline void LOCAL_OUTPUT_CORR::set_trbcorrs(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_trbcorrs();
  trbcorrs_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:LOCAL_OUTPUT_CORR.TrbCorrs)
}
inline void LOCAL_OUTPUT_CORR::set_trbcorrs(const char* value, size_t size) {
  set_has_trbcorrs();
  trbcorrs_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:LOCAL_OUTPUT_CORR.TrbCorrs)
}
inline ::std::string* LOCAL_OUTPUT_CORR::mutable_trbcorrs() {
  set_has_trbcorrs();
  // @@protoc_insertion_point(field_mutable:LOCAL_OUTPUT_CORR.TrbCorrs)
  return trbcorrs_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* LOCAL_OUTPUT_CORR::release_trbcorrs() {
  // @@protoc_insertion_point(field_release:LOCAL_OUTPUT_CORR.TrbCorrs)
  clear_has_trbcorrs();
  return trbcorrs_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LOCAL_OUTPUT_CORR::set_allocated_trbcorrs(::std::string* trbcorrs) {
  if (trbcorrs != NULL) {
    set_has_trbcorrs();
  } else {
    clear_has_trbcorrs();
  }
  trbcorrs_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), trbcorrs);
  // @@protoc_insertion_point(field_set_allocated:LOCAL_OUTPUT_CORR.TrbCorrs)
}

// required string RemTrbCorrs = 4;
inline bool LOCAL_OUTPUT_CORR::has_remtrbcorrs() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void LOCAL_OUTPUT_CORR::set_has_remtrbcorrs() {
  _has_bits_[0] |= 0x00000008u;
}
inline void LOCAL_OUTPUT_CORR::clear_has_remtrbcorrs() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void LOCAL_OUTPUT_CORR::clear_remtrbcorrs() {
  remtrbcorrs_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_remtrbcorrs();
}
inline const ::std::string& LOCAL_OUTPUT_CORR::remtrbcorrs() const {
  // @@protoc_insertion_point(field_get:LOCAL_OUTPUT_CORR.RemTrbCorrs)
  return remtrbcorrs_.GetNoArena();
}
inline void LOCAL_OUTPUT_CORR::set_remtrbcorrs(const ::std::string& value) {
  set_has_remtrbcorrs();
  remtrbcorrs_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:LOCAL_OUTPUT_CORR.RemTrbCorrs)
}
#if LANG_CXX11
inline void LOCAL_OUTPUT_CORR::set_remtrbcorrs(::std::string&& value) {
  set_has_remtrbcorrs();
  remtrbcorrs_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:LOCAL_OUTPUT_CORR.RemTrbCorrs)
}
#endif
inline void LOCAL_OUTPUT_CORR::set_remtrbcorrs(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_remtrbcorrs();
  remtrbcorrs_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:LOCAL_OUTPUT_CORR.RemTrbCorrs)
}
inline void LOCAL_OUTPUT_CORR::set_remtrbcorrs(const char* value, size_t size) {
  set_has_remtrbcorrs();
  remtrbcorrs_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:LOCAL_OUTPUT_CORR.RemTrbCorrs)
}
inline ::std::string* LOCAL_OUTPUT_CORR::mutable_remtrbcorrs() {
  set_has_remtrbcorrs();
  // @@protoc_insertion_point(field_mutable:LOCAL_OUTPUT_CORR.RemTrbCorrs)
  return remtrbcorrs_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* LOCAL_OUTPUT_CORR::release_remtrbcorrs() {
  // @@protoc_insertion_point(field_release:LOCAL_OUTPUT_CORR.RemTrbCorrs)
  clear_has_remtrbcorrs();
  return remtrbcorrs_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LOCAL_OUTPUT_CORR::set_allocated_remtrbcorrs(::std::string* remtrbcorrs) {
  if (remtrbcorrs != NULL) {
    set_has_remtrbcorrs();
  } else {
    clear_has_remtrbcorrs();
  }
  remtrbcorrs_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), remtrbcorrs);
  // @@protoc_insertion_point(field_set_allocated:LOCAL_OUTPUT_CORR.RemTrbCorrs)
}

// required string RemIptCorrs = 5;
inline bool LOCAL_OUTPUT_CORR::has_remiptcorrs() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void LOCAL_OUTPUT_CORR::set_has_remiptcorrs() {
  _has_bits_[0] |= 0x00000010u;
}
inline void LOCAL_OUTPUT_CORR::clear_has_remiptcorrs() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void LOCAL_OUTPUT_CORR::clear_remiptcorrs() {
  remiptcorrs_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_remiptcorrs();
}
inline const ::std::string& LOCAL_OUTPUT_CORR::remiptcorrs() const {
  // @@protoc_insertion_point(field_get:LOCAL_OUTPUT_CORR.RemIptCorrs)
  return remiptcorrs_.GetNoArena();
}
inline void LOCAL_OUTPUT_CORR::set_remiptcorrs(const ::std::string& value) {
  set_has_remiptcorrs();
  remiptcorrs_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:LOCAL_OUTPUT_CORR.RemIptCorrs)
}
#if LANG_CXX11
inline void LOCAL_OUTPUT_CORR::set_remiptcorrs(::std::string&& value) {
  set_has_remiptcorrs();
  remiptcorrs_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:LOCAL_OUTPUT_CORR.RemIptCorrs)
}
#endif
inline void LOCAL_OUTPUT_CORR::set_remiptcorrs(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_remiptcorrs();
  remiptcorrs_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:LOCAL_OUTPUT_CORR.RemIptCorrs)
}
inline void LOCAL_OUTPUT_CORR::set_remiptcorrs(const char* value, size_t size) {
  set_has_remiptcorrs();
  remiptcorrs_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:LOCAL_OUTPUT_CORR.RemIptCorrs)
}
inline ::std::string* LOCAL_OUTPUT_CORR::mutable_remiptcorrs() {
  set_has_remiptcorrs();
  // @@protoc_insertion_point(field_mutable:LOCAL_OUTPUT_CORR.RemIptCorrs)
  return remiptcorrs_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* LOCAL_OUTPUT_CORR::release_remiptcorrs() {
  // @@protoc_insertion_point(field_release:LOCAL_OUTPUT_CORR.RemIptCorrs)
  clear_has_remiptcorrs();
  return remiptcorrs_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LOCAL_OUTPUT_CORR::set_allocated_remiptcorrs(::std::string* remiptcorrs) {
  if (remiptcorrs != NULL) {
    set_has_remiptcorrs();
  } else {
    clear_has_remiptcorrs();
  }
  remiptcorrs_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), remiptcorrs);
  // @@protoc_insertion_point(field_set_allocated:LOCAL_OUTPUT_CORR.RemIptCorrs)
}

// -------------------------------------------------------------------

// REMOTE_OUTPUT_CORR

// required string IptCorrs = 1;
inline bool REMOTE_OUTPUT_CORR::has_iptcorrs() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void REMOTE_OUTPUT_CORR::set_has_iptcorrs() {
  _has_bits_[0] |= 0x00000001u;
}
inline void REMOTE_OUTPUT_CORR::clear_has_iptcorrs() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void REMOTE_OUTPUT_CORR::clear_iptcorrs() {
  iptcorrs_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_iptcorrs();
}
inline const ::std::string& REMOTE_OUTPUT_CORR::iptcorrs() const {
  // @@protoc_insertion_point(field_get:REMOTE_OUTPUT_CORR.IptCorrs)
  return iptcorrs_.GetNoArena();
}
inline void REMOTE_OUTPUT_CORR::set_iptcorrs(const ::std::string& value) {
  set_has_iptcorrs();
  iptcorrs_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:REMOTE_OUTPUT_CORR.IptCorrs)
}
#if LANG_CXX11
inline void REMOTE_OUTPUT_CORR::set_iptcorrs(::std::string&& value) {
  set_has_iptcorrs();
  iptcorrs_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:REMOTE_OUTPUT_CORR.IptCorrs)
}
#endif
inline void REMOTE_OUTPUT_CORR::set_iptcorrs(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_iptcorrs();
  iptcorrs_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:REMOTE_OUTPUT_CORR.IptCorrs)
}
inline void REMOTE_OUTPUT_CORR::set_iptcorrs(const char* value, size_t size) {
  set_has_iptcorrs();
  iptcorrs_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:REMOTE_OUTPUT_CORR.IptCorrs)
}
inline ::std::string* REMOTE_OUTPUT_CORR::mutable_iptcorrs() {
  set_has_iptcorrs();
  // @@protoc_insertion_point(field_mutable:REMOTE_OUTPUT_CORR.IptCorrs)
  return iptcorrs_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* REMOTE_OUTPUT_CORR::release_iptcorrs() {
  // @@protoc_insertion_point(field_release:REMOTE_OUTPUT_CORR.IptCorrs)
  clear_has_iptcorrs();
  return iptcorrs_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void REMOTE_OUTPUT_CORR::set_allocated_iptcorrs(::std::string* iptcorrs) {
  if (iptcorrs != NULL) {
    set_has_iptcorrs();
  } else {
    clear_has_iptcorrs();
  }
  iptcorrs_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), iptcorrs);
  // @@protoc_insertion_point(field_set_allocated:REMOTE_OUTPUT_CORR.IptCorrs)
}

// required string StatCorrs = 2;
inline bool REMOTE_OUTPUT_CORR::has_statcorrs() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void REMOTE_OUTPUT_CORR::set_has_statcorrs() {
  _has_bits_[0] |= 0x00000002u;
}
inline void REMOTE_OUTPUT_CORR::clear_has_statcorrs() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void REMOTE_OUTPUT_CORR::clear_statcorrs() {
  statcorrs_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_statcorrs();
}
inline const ::std::string& REMOTE_OUTPUT_CORR::statcorrs() const {
  // @@protoc_insertion_point(field_get:REMOTE_OUTPUT_CORR.StatCorrs)
  return statcorrs_.GetNoArena();
}
inline void REMOTE_OUTPUT_CORR::set_statcorrs(const ::std::string& value) {
  set_has_statcorrs();
  statcorrs_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:REMOTE_OUTPUT_CORR.StatCorrs)
}
#if LANG_CXX11
inline void REMOTE_OUTPUT_CORR::set_statcorrs(::std::string&& value) {
  set_has_statcorrs();
  statcorrs_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:REMOTE_OUTPUT_CORR.StatCorrs)
}
#endif
inline void REMOTE_OUTPUT_CORR::set_statcorrs(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_statcorrs();
  statcorrs_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:REMOTE_OUTPUT_CORR.StatCorrs)
}
inline void REMOTE_OUTPUT_CORR::set_statcorrs(const char* value, size_t size) {
  set_has_statcorrs();
  statcorrs_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:REMOTE_OUTPUT_CORR.StatCorrs)
}
inline ::std::string* REMOTE_OUTPUT_CORR::mutable_statcorrs() {
  set_has_statcorrs();
  // @@protoc_insertion_point(field_mutable:REMOTE_OUTPUT_CORR.StatCorrs)
  return statcorrs_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* REMOTE_OUTPUT_CORR::release_statcorrs() {
  // @@protoc_insertion_point(field_release:REMOTE_OUTPUT_CORR.StatCorrs)
  clear_has_statcorrs();
  return statcorrs_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void REMOTE_OUTPUT_CORR::set_allocated_statcorrs(::std::string* statcorrs) {
  if (statcorrs != NULL) {
    set_has_statcorrs();
  } else {
    clear_has_statcorrs();
  }
  statcorrs_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), statcorrs);
  // @@protoc_insertion_point(field_set_allocated:REMOTE_OUTPUT_CORR.StatCorrs)
}

// required string RemIptCorrs = 3;
inline bool REMOTE_OUTPUT_CORR::has_remiptcorrs() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void REMOTE_OUTPUT_CORR::set_has_remiptcorrs() {
  _has_bits_[0] |= 0x00000004u;
}
inline void REMOTE_OUTPUT_CORR::clear_has_remiptcorrs() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void REMOTE_OUTPUT_CORR::clear_remiptcorrs() {
  remiptcorrs_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_remiptcorrs();
}
inline const ::std::string& REMOTE_OUTPUT_CORR::remiptcorrs() const {
  // @@protoc_insertion_point(field_get:REMOTE_OUTPUT_CORR.RemIptCorrs)
  return remiptcorrs_.GetNoArena();
}
inline void REMOTE_OUTPUT_CORR::set_remiptcorrs(const ::std::string& value) {
  set_has_remiptcorrs();
  remiptcorrs_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:REMOTE_OUTPUT_CORR.RemIptCorrs)
}
#if LANG_CXX11
inline void REMOTE_OUTPUT_CORR::set_remiptcorrs(::std::string&& value) {
  set_has_remiptcorrs();
  remiptcorrs_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:REMOTE_OUTPUT_CORR.RemIptCorrs)
}
#endif
inline void REMOTE_OUTPUT_CORR::set_remiptcorrs(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_remiptcorrs();
  remiptcorrs_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:REMOTE_OUTPUT_CORR.RemIptCorrs)
}
inline void REMOTE_OUTPUT_CORR::set_remiptcorrs(const char* value, size_t size) {
  set_has_remiptcorrs();
  remiptcorrs_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:REMOTE_OUTPUT_CORR.RemIptCorrs)
}
inline ::std::string* REMOTE_OUTPUT_CORR::mutable_remiptcorrs() {
  set_has_remiptcorrs();
  // @@protoc_insertion_point(field_mutable:REMOTE_OUTPUT_CORR.RemIptCorrs)
  return remiptcorrs_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* REMOTE_OUTPUT_CORR::release_remiptcorrs() {
  // @@protoc_insertion_point(field_release:REMOTE_OUTPUT_CORR.RemIptCorrs)
  clear_has_remiptcorrs();
  return remiptcorrs_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void REMOTE_OUTPUT_CORR::set_allocated_remiptcorrs(::std::string* remiptcorrs) {
  if (remiptcorrs != NULL) {
    set_has_remiptcorrs();
  } else {
    clear_has_remiptcorrs();
  }
  remiptcorrs_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), remiptcorrs);
  // @@protoc_insertion_point(field_set_allocated:REMOTE_OUTPUT_CORR.RemIptCorrs)
}

// -------------------------------------------------------------------

// PASSWORD

// required int32 Len = 1;
inline bool PASSWORD::has_len() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PASSWORD::set_has_len() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PASSWORD::clear_has_len() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PASSWORD::clear_len() {
  len_ = 0;
  clear_has_len();
}
inline ::google::protobuf::int32 PASSWORD::len() const {
  // @@protoc_insertion_point(field_get:PASSWORD.Len)
  return len_;
}
inline void PASSWORD::set_len(::google::protobuf::int32 value) {
  set_has_len();
  len_ = value;
  // @@protoc_insertion_point(field_set:PASSWORD.Len)
}

// required string Data = 2;
inline bool PASSWORD::has_data() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PASSWORD::set_has_data() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PASSWORD::clear_has_data() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PASSWORD::clear_data() {
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_data();
}
inline const ::std::string& PASSWORD::data() const {
  // @@protoc_insertion_point(field_get:PASSWORD.Data)
  return data_.GetNoArena();
}
inline void PASSWORD::set_data(const ::std::string& value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:PASSWORD.Data)
}
#if LANG_CXX11
inline void PASSWORD::set_data(::std::string&& value) {
  set_has_data();
  data_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:PASSWORD.Data)
}
#endif
inline void PASSWORD::set_data(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:PASSWORD.Data)
}
inline void PASSWORD::set_data(const char* value, size_t size) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:PASSWORD.Data)
}
inline ::std::string* PASSWORD::mutable_data() {
  set_has_data();
  // @@protoc_insertion_point(field_mutable:PASSWORD.Data)
  return data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PASSWORD::release_data() {
  // @@protoc_insertion_point(field_release:PASSWORD.Data)
  clear_has_data();
  return data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PASSWORD::set_allocated_data(::std::string* data) {
  if (data != NULL) {
    set_has_data();
  } else {
    clear_has_data();
  }
  data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data);
  // @@protoc_insertion_point(field_set_allocated:PASSWORD.Data)
}

// -------------------------------------------------------------------

// CFG_DST

// required int32 StartMonth = 1;
inline bool CFG_DST::has_startmonth() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CFG_DST::set_has_startmonth() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CFG_DST::clear_has_startmonth() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CFG_DST::clear_startmonth() {
  startmonth_ = 0;
  clear_has_startmonth();
}
inline ::google::protobuf::int32 CFG_DST::startmonth() const {
  // @@protoc_insertion_point(field_get:CFG_DST.StartMonth)
  return startmonth_;
}
inline void CFG_DST::set_startmonth(::google::protobuf::int32 value) {
  set_has_startmonth();
  startmonth_ = value;
  // @@protoc_insertion_point(field_set:CFG_DST.StartMonth)
}

// required int32 StartOrdinalWeek = 2;
inline bool CFG_DST::has_startordinalweek() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CFG_DST::set_has_startordinalweek() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CFG_DST::clear_has_startordinalweek() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CFG_DST::clear_startordinalweek() {
  startordinalweek_ = 0;
  clear_has_startordinalweek();
}
inline ::google::protobuf::int32 CFG_DST::startordinalweek() const {
  // @@protoc_insertion_point(field_get:CFG_DST.StartOrdinalWeek)
  return startordinalweek_;
}
inline void CFG_DST::set_startordinalweek(::google::protobuf::int32 value) {
  set_has_startordinalweek();
  startordinalweek_ = value;
  // @@protoc_insertion_point(field_set:CFG_DST.StartOrdinalWeek)
}

// required int32 StartDayOfWeek = 3;
inline bool CFG_DST::has_startdayofweek() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CFG_DST::set_has_startdayofweek() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CFG_DST::clear_has_startdayofweek() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CFG_DST::clear_startdayofweek() {
  startdayofweek_ = 0;
  clear_has_startdayofweek();
}
inline ::google::protobuf::int32 CFG_DST::startdayofweek() const {
  // @@protoc_insertion_point(field_get:CFG_DST.StartDayOfWeek)
  return startdayofweek_;
}
inline void CFG_DST::set_startdayofweek(::google::protobuf::int32 value) {
  set_has_startdayofweek();
  startdayofweek_ = value;
  // @@protoc_insertion_point(field_set:CFG_DST.StartDayOfWeek)
}

// required int32 StartHour = 4;
inline bool CFG_DST::has_starthour() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CFG_DST::set_has_starthour() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CFG_DST::clear_has_starthour() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CFG_DST::clear_starthour() {
  starthour_ = 0;
  clear_has_starthour();
}
inline ::google::protobuf::int32 CFG_DST::starthour() const {
  // @@protoc_insertion_point(field_get:CFG_DST.StartHour)
  return starthour_;
}
inline void CFG_DST::set_starthour(::google::protobuf::int32 value) {
  set_has_starthour();
  starthour_ = value;
  // @@protoc_insertion_point(field_set:CFG_DST.StartHour)
}

// required int32 StartMin = 5;
inline bool CFG_DST::has_startmin() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CFG_DST::set_has_startmin() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CFG_DST::clear_has_startmin() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CFG_DST::clear_startmin() {
  startmin_ = 0;
  clear_has_startmin();
}
inline ::google::protobuf::int32 CFG_DST::startmin() const {
  // @@protoc_insertion_point(field_get:CFG_DST.StartMin)
  return startmin_;
}
inline void CFG_DST::set_startmin(::google::protobuf::int32 value) {
  set_has_startmin();
  startmin_ = value;
  // @@protoc_insertion_point(field_set:CFG_DST.StartMin)
}

// required int32 EndMonth = 6;
inline bool CFG_DST::has_endmonth() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CFG_DST::set_has_endmonth() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CFG_DST::clear_has_endmonth() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CFG_DST::clear_endmonth() {
  endmonth_ = 0;
  clear_has_endmonth();
}
inline ::google::protobuf::int32 CFG_DST::endmonth() const {
  // @@protoc_insertion_point(field_get:CFG_DST.EndMonth)
  return endmonth_;
}
inline void CFG_DST::set_endmonth(::google::protobuf::int32 value) {
  set_has_endmonth();
  endmonth_ = value;
  // @@protoc_insertion_point(field_set:CFG_DST.EndMonth)
}

// required int32 EndOrdinalWeek = 7;
inline bool CFG_DST::has_endordinalweek() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void CFG_DST::set_has_endordinalweek() {
  _has_bits_[0] |= 0x00000040u;
}
inline void CFG_DST::clear_has_endordinalweek() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void CFG_DST::clear_endordinalweek() {
  endordinalweek_ = 0;
  clear_has_endordinalweek();
}
inline ::google::protobuf::int32 CFG_DST::endordinalweek() const {
  // @@protoc_insertion_point(field_get:CFG_DST.EndOrdinalWeek)
  return endordinalweek_;
}
inline void CFG_DST::set_endordinalweek(::google::protobuf::int32 value) {
  set_has_endordinalweek();
  endordinalweek_ = value;
  // @@protoc_insertion_point(field_set:CFG_DST.EndOrdinalWeek)
}

// required int32 EndDayOfWeek = 8;
inline bool CFG_DST::has_enddayofweek() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void CFG_DST::set_has_enddayofweek() {
  _has_bits_[0] |= 0x00000080u;
}
inline void CFG_DST::clear_has_enddayofweek() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void CFG_DST::clear_enddayofweek() {
  enddayofweek_ = 0;
  clear_has_enddayofweek();
}
inline ::google::protobuf::int32 CFG_DST::enddayofweek() const {
  // @@protoc_insertion_point(field_get:CFG_DST.EndDayOfWeek)
  return enddayofweek_;
}
inline void CFG_DST::set_enddayofweek(::google::protobuf::int32 value) {
  set_has_enddayofweek();
  enddayofweek_ = value;
  // @@protoc_insertion_point(field_set:CFG_DST.EndDayOfWeek)
}

// required int32 EndHour = 9;
inline bool CFG_DST::has_endhour() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void CFG_DST::set_has_endhour() {
  _has_bits_[0] |= 0x00000100u;
}
inline void CFG_DST::clear_has_endhour() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void CFG_DST::clear_endhour() {
  endhour_ = 0;
  clear_has_endhour();
}
inline ::google::protobuf::int32 CFG_DST::endhour() const {
  // @@protoc_insertion_point(field_get:CFG_DST.EndHour)
  return endhour_;
}
inline void CFG_DST::set_endhour(::google::protobuf::int32 value) {
  set_has_endhour();
  endhour_ = value;
  // @@protoc_insertion_point(field_set:CFG_DST.EndHour)
}

// required int32 EndMin = 10;
inline bool CFG_DST::has_endmin() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void CFG_DST::set_has_endmin() {
  _has_bits_[0] |= 0x00000200u;
}
inline void CFG_DST::clear_has_endmin() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void CFG_DST::clear_endmin() {
  endmin_ = 0;
  clear_has_endmin();
}
inline ::google::protobuf::int32 CFG_DST::endmin() const {
  // @@protoc_insertion_point(field_get:CFG_DST.EndMin)
  return endmin_;
}
inline void CFG_DST::set_endmin(::google::protobuf::int32 value) {
  set_has_endmin();
  endmin_ = value;
  // @@protoc_insertion_point(field_set:CFG_DST.EndMin)
}

// required int32 DailyAdjust = 11;
inline bool CFG_DST::has_dailyadjust() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void CFG_DST::set_has_dailyadjust() {
  _has_bits_[0] |= 0x00000400u;
}
inline void CFG_DST::clear_has_dailyadjust() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void CFG_DST::clear_dailyadjust() {
  dailyadjust_ = 0;
  clear_has_dailyadjust();
}
inline ::google::protobuf::int32 CFG_DST::dailyadjust() const {
  // @@protoc_insertion_point(field_get:CFG_DST.DailyAdjust)
  return dailyadjust_;
}
inline void CFG_DST::set_dailyadjust(::google::protobuf::int32 value) {
  set_has_dailyadjust();
  dailyadjust_ = value;
  // @@protoc_insertion_point(field_set:CFG_DST.DailyAdjust)
}

// -------------------------------------------------------------------

// ZC

// required string Label = 1;
inline bool ZC::has_label() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ZC::set_has_label() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ZC::clear_has_label() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ZC::clear_label() {
  label_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_label();
}
inline const ::std::string& ZC::label() const {
  // @@protoc_insertion_point(field_get:ZC.Label)
  return label_.GetNoArena();
}
inline void ZC::set_label(const ::std::string& value) {
  set_has_label();
  label_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ZC.Label)
}
#if LANG_CXX11
inline void ZC::set_label(::std::string&& value) {
  set_has_label();
  label_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ZC.Label)
}
#endif
inline void ZC::set_label(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_label();
  label_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ZC.Label)
}
inline void ZC::set_label(const char* value, size_t size) {
  set_has_label();
  label_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ZC.Label)
}
inline ::std::string* ZC::mutable_label() {
  set_has_label();
  // @@protoc_insertion_point(field_mutable:ZC.Label)
  return label_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ZC::release_label() {
  // @@protoc_insertion_point(field_release:ZC.Label)
  clear_has_label();
  return label_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ZC::set_allocated_label(::std::string* label) {
  if (label != NULL) {
    set_has_label();
  } else {
    clear_has_label();
  }
  label_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), label);
  // @@protoc_insertion_point(field_set_allocated:ZC.Label)
}

// required string GUID = 2;
inline bool ZC::has_guid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ZC::set_has_guid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ZC::clear_has_guid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ZC::clear_guid() {
  guid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_guid();
}
inline const ::std::string& ZC::guid() const {
  // @@protoc_insertion_point(field_get:ZC.GUID)
  return guid_.GetNoArena();
}
inline void ZC::set_guid(const ::std::string& value) {
  set_has_guid();
  guid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ZC.GUID)
}
#if LANG_CXX11
inline void ZC::set_guid(::std::string&& value) {
  set_has_guid();
  guid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ZC.GUID)
}
#endif
inline void ZC::set_guid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_guid();
  guid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ZC.GUID)
}
inline void ZC::set_guid(const char* value, size_t size) {
  set_has_guid();
  guid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ZC.GUID)
}
inline ::std::string* ZC::mutable_guid() {
  set_has_guid();
  // @@protoc_insertion_point(field_mutable:ZC.GUID)
  return guid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ZC::release_guid() {
  // @@protoc_insertion_point(field_release:ZC.GUID)
  clear_has_guid();
  return guid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ZC::set_allocated_guid(::std::string* guid) {
  if (guid != NULL) {
    set_has_guid();
  } else {
    clear_has_guid();
  }
  guid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), guid);
  // @@protoc_insertion_point(field_set_allocated:ZC.GUID)
}

// required string ConfigVer = 3;
inline bool ZC::has_configver() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ZC::set_has_configver() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ZC::clear_has_configver() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ZC::clear_configver() {
  configver_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_configver();
}
inline const ::std::string& ZC::configver() const {
  // @@protoc_insertion_point(field_get:ZC.ConfigVer)
  return configver_.GetNoArena();
}
inline void ZC::set_configver(const ::std::string& value) {
  set_has_configver();
  configver_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ZC.ConfigVer)
}
#if LANG_CXX11
inline void ZC::set_configver(::std::string&& value) {
  set_has_configver();
  configver_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ZC.ConfigVer)
}
#endif
inline void ZC::set_configver(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_configver();
  configver_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ZC.ConfigVer)
}
inline void ZC::set_configver(const char* value, size_t size) {
  set_has_configver();
  configver_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ZC.ConfigVer)
}
inline ::std::string* ZC::mutable_configver() {
  set_has_configver();
  // @@protoc_insertion_point(field_mutable:ZC.ConfigVer)
  return configver_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ZC::release_configver() {
  // @@protoc_insertion_point(field_release:ZC.ConfigVer)
  clear_has_configver();
  return configver_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ZC::set_allocated_configver(::std::string* configver) {
  if (configver != NULL) {
    set_has_configver();
  } else {
    clear_has_configver();
  }
  configver_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), configver);
  // @@protoc_insertion_point(field_set_allocated:ZC.ConfigVer)
}

// required int32 gSCUFeatureFlags = 4;
inline bool ZC::has_gscufeatureflags() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void ZC::set_has_gscufeatureflags() {
  _has_bits_[0] |= 0x00000040u;
}
inline void ZC::clear_has_gscufeatureflags() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void ZC::clear_gscufeatureflags() {
  gscufeatureflags_ = 0;
  clear_has_gscufeatureflags();
}
inline ::google::protobuf::int32 ZC::gscufeatureflags() const {
  // @@protoc_insertion_point(field_get:ZC.gSCUFeatureFlags)
  return gscufeatureflags_;
}
inline void ZC::set_gscufeatureflags(::google::protobuf::int32 value) {
  set_has_gscufeatureflags();
  gscufeatureflags_ = value;
  // @@protoc_insertion_point(field_set:ZC.gSCUFeatureFlags)
}

// required int32 gHWUStrobesType = 5;
inline bool ZC::has_ghwustrobestype() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void ZC::set_has_ghwustrobestype() {
  _has_bits_[0] |= 0x00000080u;
}
inline void ZC::clear_has_ghwustrobestype() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void ZC::clear_ghwustrobestype() {
  ghwustrobestype_ = 0;
  clear_has_ghwustrobestype();
}
inline ::google::protobuf::int32 ZC::ghwustrobestype() const {
  // @@protoc_insertion_point(field_get:ZC.gHWUStrobesType)
  return ghwustrobestype_;
}
inline void ZC::set_ghwustrobestype(::google::protobuf::int32 value) {
  set_has_ghwustrobestype();
  ghwustrobestype_ = value;
  // @@protoc_insertion_point(field_set:ZC.gHWUStrobesType)
}

// required string IptCktProcessType = 6;
inline bool ZC::has_iptcktprocesstype() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ZC::set_has_iptcktprocesstype() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ZC::clear_has_iptcktprocesstype() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ZC::clear_iptcktprocesstype() {
  iptcktprocesstype_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_iptcktprocesstype();
}
inline const ::std::string& ZC::iptcktprocesstype() const {
  // @@protoc_insertion_point(field_get:ZC.IptCktProcessType)
  return iptcktprocesstype_.GetNoArena();
}
inline void ZC::set_iptcktprocesstype(const ::std::string& value) {
  set_has_iptcktprocesstype();
  iptcktprocesstype_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ZC.IptCktProcessType)
}
#if LANG_CXX11
inline void ZC::set_iptcktprocesstype(::std::string&& value) {
  set_has_iptcktprocesstype();
  iptcktprocesstype_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ZC.IptCktProcessType)
}
#endif
inline void ZC::set_iptcktprocesstype(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_iptcktprocesstype();
  iptcktprocesstype_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ZC.IptCktProcessType)
}
inline void ZC::set_iptcktprocesstype(const char* value, size_t size) {
  set_has_iptcktprocesstype();
  iptcktprocesstype_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ZC.IptCktProcessType)
}
inline ::std::string* ZC::mutable_iptcktprocesstype() {
  set_has_iptcktprocesstype();
  // @@protoc_insertion_point(field_mutable:ZC.IptCktProcessType)
  return iptcktprocesstype_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ZC::release_iptcktprocesstype() {
  // @@protoc_insertion_point(field_release:ZC.IptCktProcessType)
  clear_has_iptcktprocesstype();
  return iptcktprocesstype_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ZC::set_allocated_iptcktprocesstype(::std::string* iptcktprocesstype) {
  if (iptcktprocesstype != NULL) {
    set_has_iptcktprocesstype();
  } else {
    clear_has_iptcktprocesstype();
  }
  iptcktprocesstype_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), iptcktprocesstype);
  // @@protoc_insertion_point(field_set_allocated:ZC.IptCktProcessType)
}

// required .LOCAL_OUTPUT_CORR LocalCorr = 7;
inline bool ZC::has_localcorr() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void ZC::set_has_localcorr() {
  _has_bits_[0] |= 0x00000010u;
}
inline void ZC::clear_has_localcorr() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void ZC::clear_localcorr() {
  if (localcorr_ != NULL) localcorr_->::LOCAL_OUTPUT_CORR::Clear();
  clear_has_localcorr();
}
inline const ::LOCAL_OUTPUT_CORR& ZC::localcorr() const {
  // @@protoc_insertion_point(field_get:ZC.LocalCorr)
  return localcorr_ != NULL ? *localcorr_
                         : *::LOCAL_OUTPUT_CORR::internal_default_instance();
}
inline ::LOCAL_OUTPUT_CORR* ZC::mutable_localcorr() {
  set_has_localcorr();
  if (localcorr_ == NULL) {
    localcorr_ = new ::LOCAL_OUTPUT_CORR;
  }
  // @@protoc_insertion_point(field_mutable:ZC.LocalCorr)
  return localcorr_;
}
inline ::LOCAL_OUTPUT_CORR* ZC::release_localcorr() {
  // @@protoc_insertion_point(field_release:ZC.LocalCorr)
  clear_has_localcorr();
  ::LOCAL_OUTPUT_CORR* temp = localcorr_;
  localcorr_ = NULL;
  return temp;
}
inline void ZC::set_allocated_localcorr(::LOCAL_OUTPUT_CORR* localcorr) {
  delete localcorr_;
  localcorr_ = localcorr;
  if (localcorr) {
    set_has_localcorr();
  } else {
    clear_has_localcorr();
  }
  // @@protoc_insertion_point(field_set_allocated:ZC.LocalCorr)
}

// required .CFG_DST Dst = 8;
inline bool ZC::has_dst() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void ZC::set_has_dst() {
  _has_bits_[0] |= 0x00000020u;
}
inline void ZC::clear_has_dst() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void ZC::clear_dst() {
  if (dst_ != NULL) dst_->::CFG_DST::Clear();
  clear_has_dst();
}
inline const ::CFG_DST& ZC::dst() const {
  // @@protoc_insertion_point(field_get:ZC.Dst)
  return dst_ != NULL ? *dst_
                         : *::CFG_DST::internal_default_instance();
}
inline ::CFG_DST* ZC::mutable_dst() {
  set_has_dst();
  if (dst_ == NULL) {
    dst_ = new ::CFG_DST;
  }
  // @@protoc_insertion_point(field_mutable:ZC.Dst)
  return dst_;
}
inline ::CFG_DST* ZC::release_dst() {
  // @@protoc_insertion_point(field_release:ZC.Dst)
  clear_has_dst();
  ::CFG_DST* temp = dst_;
  dst_ = NULL;
  return temp;
}
inline void ZC::set_allocated_dst(::CFG_DST* dst) {
  delete dst_;
  dst_ = dst;
  if (dst) {
    set_has_dst();
  } else {
    clear_has_dst();
  }
  // @@protoc_insertion_point(field_set_allocated:ZC.Dst)
}

// required int32 DataIntCheck = 9;
inline bool ZC::has_dataintcheck() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void ZC::set_has_dataintcheck() {
  _has_bits_[0] |= 0x00000100u;
}
inline void ZC::clear_has_dataintcheck() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void ZC::clear_dataintcheck() {
  dataintcheck_ = 0;
  clear_has_dataintcheck();
}
inline ::google::protobuf::int32 ZC::dataintcheck() const {
  // @@protoc_insertion_point(field_get:ZC.DataIntCheck)
  return dataintcheck_;
}
inline void ZC::set_dataintcheck(::google::protobuf::int32 value) {
  set_has_dataintcheck();
  dataintcheck_ = value;
  // @@protoc_insertion_point(field_set:ZC.DataIntCheck)
}

// repeated .REMOTE_OUTPUT_CORR RemoteCorr = 10;
inline int ZC::remotecorr_size() const {
  return remotecorr_.size();
}
inline void ZC::clear_remotecorr() {
  remotecorr_.Clear();
}
inline const ::REMOTE_OUTPUT_CORR& ZC::remotecorr(int index) const {
  // @@protoc_insertion_point(field_get:ZC.RemoteCorr)
  return remotecorr_.Get(index);
}
inline ::REMOTE_OUTPUT_CORR* ZC::mutable_remotecorr(int index) {
  // @@protoc_insertion_point(field_mutable:ZC.RemoteCorr)
  return remotecorr_.Mutable(index);
}
inline ::REMOTE_OUTPUT_CORR* ZC::add_remotecorr() {
  // @@protoc_insertion_point(field_add:ZC.RemoteCorr)
  return remotecorr_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::REMOTE_OUTPUT_CORR >*
ZC::mutable_remotecorr() {
  // @@protoc_insertion_point(field_mutable_list:ZC.RemoteCorr)
  return &remotecorr_;
}
inline const ::google::protobuf::RepeatedPtrField< ::REMOTE_OUTPUT_CORR >&
ZC::remotecorr() const {
  // @@protoc_insertion_point(field_list:ZC.RemoteCorr)
  return remotecorr_;
}

// repeated .TIMER Timers = 11;
inline int ZC::timers_size() const {
  return timers_.size();
}
inline void ZC::clear_timers() {
  timers_.Clear();
}
inline const ::TIMER& ZC::timers(int index) const {
  // @@protoc_insertion_point(field_get:ZC.Timers)
  return timers_.Get(index);
}
inline ::TIMER* ZC::mutable_timers(int index) {
  // @@protoc_insertion_point(field_mutable:ZC.Timers)
  return timers_.Mutable(index);
}
inline ::TIMER* ZC::add_timers() {
  // @@protoc_insertion_point(field_add:ZC.Timers)
  return timers_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::TIMER >*
ZC::mutable_timers() {
  // @@protoc_insertion_point(field_mutable_list:ZC.Timers)
  return &timers_;
}
inline const ::google::protobuf::RepeatedPtrField< ::TIMER >&
ZC::timers() const {
  // @@protoc_insertion_point(field_list:ZC.Timers)
  return timers_;
}

// repeated .WIO_INFO WIOInfo = 12;
inline int ZC::wioinfo_size() const {
  return wioinfo_.size();
}
inline void ZC::clear_wioinfo() {
  wioinfo_.Clear();
}
inline const ::WIO_INFO& ZC::wioinfo(int index) const {
  // @@protoc_insertion_point(field_get:ZC.WIOInfo)
  return wioinfo_.Get(index);
}
inline ::WIO_INFO* ZC::mutable_wioinfo(int index) {
  // @@protoc_insertion_point(field_mutable:ZC.WIOInfo)
  return wioinfo_.Mutable(index);
}
inline ::WIO_INFO* ZC::add_wioinfo() {
  // @@protoc_insertion_point(field_add:ZC.WIOInfo)
  return wioinfo_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::WIO_INFO >*
ZC::mutable_wioinfo() {
  // @@protoc_insertion_point(field_mutable_list:ZC.WIOInfo)
  return &wioinfo_;
}
inline const ::google::protobuf::RepeatedPtrField< ::WIO_INFO >&
ZC::wioinfo() const {
  // @@protoc_insertion_point(field_list:ZC.WIOInfo)
  return wioinfo_;
}

// repeated .PASSWORD Password = 13;
inline int ZC::password_size() const {
  return password_.size();
}
inline void ZC::clear_password() {
  password_.Clear();
}
inline const ::PASSWORD& ZC::password(int index) const {
  // @@protoc_insertion_point(field_get:ZC.Password)
  return password_.Get(index);
}
inline ::PASSWORD* ZC::mutable_password(int index) {
  // @@protoc_insertion_point(field_mutable:ZC.Password)
  return password_.Mutable(index);
}
inline ::PASSWORD* ZC::add_password() {
  // @@protoc_insertion_point(field_add:ZC.Password)
  return password_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::PASSWORD >*
ZC::mutable_password() {
  // @@protoc_insertion_point(field_mutable_list:ZC.Password)
  return &password_;
}
inline const ::google::protobuf::RepeatedPtrField< ::PASSWORD >&
ZC::password() const {
  // @@protoc_insertion_point(field_list:ZC.Password)
  return password_;
}

// -------------------------------------------------------------------

// PASSWORDS

// repeated .PASSWORD Password = 1;
inline int PASSWORDS::password_size() const {
  return password_.size();
}
inline void PASSWORDS::clear_password() {
  password_.Clear();
}
inline const ::PASSWORD& PASSWORDS::password(int index) const {
  // @@protoc_insertion_point(field_get:PASSWORDS.Password)
  return password_.Get(index);
}
inline ::PASSWORD* PASSWORDS::mutable_password(int index) {
  // @@protoc_insertion_point(field_mutable:PASSWORDS.Password)
  return password_.Mutable(index);
}
inline ::PASSWORD* PASSWORDS::add_password() {
  // @@protoc_insertion_point(field_add:PASSWORDS.Password)
  return password_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::PASSWORD >*
PASSWORDS::mutable_password() {
  // @@protoc_insertion_point(field_mutable_list:PASSWORDS.Password)
  return &password_;
}
inline const ::google::protobuf::RepeatedPtrField< ::PASSWORD >&
PASSWORDS::password() const {
  // @@protoc_insertion_point(field_list:PASSWORDS.Password)
  return password_;
}

// -------------------------------------------------------------------

// CFG_RTC

// required int32 seconds = 1;
inline bool CFG_RTC::has_seconds() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CFG_RTC::set_has_seconds() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CFG_RTC::clear_has_seconds() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CFG_RTC::clear_seconds() {
  seconds_ = 0;
  clear_has_seconds();
}
inline ::google::protobuf::int32 CFG_RTC::seconds() const {
  // @@protoc_insertion_point(field_get:CFG_RTC.seconds)
  return seconds_;
}
inline void CFG_RTC::set_seconds(::google::protobuf::int32 value) {
  set_has_seconds();
  seconds_ = value;
  // @@protoc_insertion_point(field_set:CFG_RTC.seconds)
}

// required int32 minutes = 2;
inline bool CFG_RTC::has_minutes() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CFG_RTC::set_has_minutes() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CFG_RTC::clear_has_minutes() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CFG_RTC::clear_minutes() {
  minutes_ = 0;
  clear_has_minutes();
}
inline ::google::protobuf::int32 CFG_RTC::minutes() const {
  // @@protoc_insertion_point(field_get:CFG_RTC.minutes)
  return minutes_;
}
inline void CFG_RTC::set_minutes(::google::protobuf::int32 value) {
  set_has_minutes();
  minutes_ = value;
  // @@protoc_insertion_point(field_set:CFG_RTC.minutes)
}

// required int32 hours = 3;
inline bool CFG_RTC::has_hours() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CFG_RTC::set_has_hours() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CFG_RTC::clear_has_hours() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CFG_RTC::clear_hours() {
  hours_ = 0;
  clear_has_hours();
}
inline ::google::protobuf::int32 CFG_RTC::hours() const {
  // @@protoc_insertion_point(field_get:CFG_RTC.hours)
  return hours_;
}
inline void CFG_RTC::set_hours(::google::protobuf::int32 value) {
  set_has_hours();
  hours_ = value;
  // @@protoc_insertion_point(field_set:CFG_RTC.hours)
}

// required int32 date = 4;
inline bool CFG_RTC::has_date() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CFG_RTC::set_has_date() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CFG_RTC::clear_has_date() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CFG_RTC::clear_date() {
  date_ = 0;
  clear_has_date();
}
inline ::google::protobuf::int32 CFG_RTC::date() const {
  // @@protoc_insertion_point(field_get:CFG_RTC.date)
  return date_;
}
inline void CFG_RTC::set_date(::google::protobuf::int32 value) {
  set_has_date();
  date_ = value;
  // @@protoc_insertion_point(field_set:CFG_RTC.date)
}

// required int32 month = 5;
inline bool CFG_RTC::has_month() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CFG_RTC::set_has_month() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CFG_RTC::clear_has_month() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CFG_RTC::clear_month() {
  month_ = 0;
  clear_has_month();
}
inline ::google::protobuf::int32 CFG_RTC::month() const {
  // @@protoc_insertion_point(field_get:CFG_RTC.month)
  return month_;
}
inline void CFG_RTC::set_month(::google::protobuf::int32 value) {
  set_has_month();
  month_ = value;
  // @@protoc_insertion_point(field_set:CFG_RTC.month)
}

// required int32 year = 6;
inline bool CFG_RTC::has_year() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CFG_RTC::set_has_year() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CFG_RTC::clear_has_year() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CFG_RTC::clear_year() {
  year_ = 0;
  clear_has_year();
}
inline ::google::protobuf::int32 CFG_RTC::year() const {
  // @@protoc_insertion_point(field_get:CFG_RTC.year)
  return year_;
}
inline void CFG_RTC::set_year(::google::protobuf::int32 value) {
  set_has_year();
  year_ = value;
  // @@protoc_insertion_point(field_set:CFG_RTC.year)
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_zc_2eproto__INCLUDED
