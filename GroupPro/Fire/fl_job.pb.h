// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: fl_job.proto

#ifndef PROTOBUF_fl_5fjob_2eproto__INCLUDED
#define PROTOBUF_fl_5fjob_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3003000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3003000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include "fl_defs.pb.h"
// @@protoc_insertion_point(includes)
class DeviceModel;
class DeviceModelDefaultTypeInternal;
extern DeviceModelDefaultTypeInternal _DeviceModel_default_instance_;
class DeviceModels;
class DeviceModelsDefaultTypeInternal;
extern DeviceModelsDefaultTypeInternal _DeviceModels_default_instance_;
class PBCorrelation;
class PBCorrelationDefaultTypeInternal;
extern PBCorrelationDefaultTypeInternal _PBCorrelation_default_instance_;
class PBCorrelationInput;
class PBCorrelationInputDefaultTypeInternal;
extern PBCorrelationInputDefaultTypeInternal _PBCorrelationInput_default_instance_;
class PBCorrelationInputFromWIO;
class PBCorrelationInputFromWIODefaultTypeInternal;
extern PBCorrelationInputFromWIODefaultTypeInternal _PBCorrelationInputFromWIO_default_instance_;
class PBCorrelationInputFromZC;
class PBCorrelationInputFromZCDefaultTypeInternal;
extern PBCorrelationInputFromZCDefaultTypeInternal _PBCorrelationInputFromZC_default_instance_;
class PBFloor;
class PBFloorDefaultTypeInternal;
extern PBFloorDefaultTypeInternal _PBFloor_default_instance_;
class PBGraphics;
class PBGraphicsDefaultTypeInternal;
extern PBGraphicsDefaultTypeInternal _PBGraphics_default_instance_;
class PBJob;
class PBJobDefaultTypeInternal;
extern PBJobDefaultTypeInternal _PBJob_default_instance_;
class PBPosition;
class PBPositionDefaultTypeInternal;
extern PBPositionDefaultTypeInternal _PBPosition_default_instance_;
class PBTransform;
class PBTransformDefaultTypeInternal;
extern PBTransformDefaultTypeInternal _PBTransform_default_instance_;
class PBVersion;
class PBVersionDefaultTypeInternal;
extern PBVersionDefaultTypeInternal _PBVersion_default_instance_;
class PBWio;
class PBWioDefaultTypeInternal;
extern PBWioDefaultTypeInternal _PBWio_default_instance_;
class PBZoneController;
class PBZoneControllerDefaultTypeInternal;
extern PBZoneControllerDefaultTypeInternal _PBZoneController_default_instance_;

namespace protobuf_fl_5fjob_2eproto {
// Internal implementation detail -- do not call these.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[];
  static const ::google::protobuf::uint32 offsets[];
  static void InitDefaultsImpl();
  static void Shutdown();
};
void AddDescriptors();
void InitDefaults();
}  // namespace protobuf_fl_5fjob_2eproto

enum DeviceModel_Category {
  DeviceModel_Category_UNDEFINED_CATEGORY = 0,
  DeviceModel_Category_TWO_WIRE_NOTIFICATION_APPLIANCE = 1,
  DeviceModel_Category_CONVENTIONAL_SMOKE_DETECTOR = 2,
  DeviceModel_Category_CONVENTIONAL_HEAT_DETECTOR = 3,
  DeviceModel_Category_PULL_STATION = 4
};
bool DeviceModel_Category_IsValid(int value);
const DeviceModel_Category DeviceModel_Category_Category_MIN = DeviceModel_Category_UNDEFINED_CATEGORY;
const DeviceModel_Category DeviceModel_Category_Category_MAX = DeviceModel_Category_PULL_STATION;
const int DeviceModel_Category_Category_ARRAYSIZE = DeviceModel_Category_Category_MAX + 1;

const ::google::protobuf::EnumDescriptor* DeviceModel_Category_descriptor();
inline const ::std::string& DeviceModel_Category_Name(DeviceModel_Category value) {
  return ::google::protobuf::internal::NameOfEnum(
    DeviceModel_Category_descriptor(), value);
}
inline bool DeviceModel_Category_Parse(
    const ::std::string& name, DeviceModel_Category* value) {
  return ::google::protobuf::internal::ParseNamedEnum<DeviceModel_Category>(
    DeviceModel_Category_descriptor(), name, value);
}
enum DeviceModel_Type {
  DeviceModel_Type_INPUT = 0,
  DeviceModel_Type_OUTPUT = 1
};
bool DeviceModel_Type_IsValid(int value);
const DeviceModel_Type DeviceModel_Type_Type_MIN = DeviceModel_Type_INPUT;
const DeviceModel_Type DeviceModel_Type_Type_MAX = DeviceModel_Type_OUTPUT;
const int DeviceModel_Type_Type_ARRAYSIZE = DeviceModel_Type_Type_MAX + 1;

const ::google::protobuf::EnumDescriptor* DeviceModel_Type_descriptor();
inline const ::std::string& DeviceModel_Type_Name(DeviceModel_Type value) {
  return ::google::protobuf::internal::NameOfEnum(
    DeviceModel_Type_descriptor(), value);
}
inline bool DeviceModel_Type_Parse(
    const ::std::string& name, DeviceModel_Type* value) {
  return ::google::protobuf::internal::ParseNamedEnum<DeviceModel_Type>(
    DeviceModel_Type_descriptor(), name, value);
}
enum PBCorrelation_TriggerType {
  PBCorrelation_TriggerType_ANY_INPUTS = 0,
  PBCorrelation_TriggerType_ALL_INPUTS = 1
};
bool PBCorrelation_TriggerType_IsValid(int value);
const PBCorrelation_TriggerType PBCorrelation_TriggerType_TriggerType_MIN = PBCorrelation_TriggerType_ANY_INPUTS;
const PBCorrelation_TriggerType PBCorrelation_TriggerType_TriggerType_MAX = PBCorrelation_TriggerType_ALL_INPUTS;
const int PBCorrelation_TriggerType_TriggerType_ARRAYSIZE = PBCorrelation_TriggerType_TriggerType_MAX + 1;

const ::google::protobuf::EnumDescriptor* PBCorrelation_TriggerType_descriptor();
inline const ::std::string& PBCorrelation_TriggerType_Name(PBCorrelation_TriggerType value) {
  return ::google::protobuf::internal::NameOfEnum(
    PBCorrelation_TriggerType_descriptor(), value);
}
inline bool PBCorrelation_TriggerType_Parse(
    const ::std::string& name, PBCorrelation_TriggerType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<PBCorrelation_TriggerType>(
    PBCorrelation_TriggerType_descriptor(), name, value);
}
enum PBFloor_UnitOfMeasure {
  PBFloor_UnitOfMeasure_METERS = 0,
  PBFloor_UnitOfMeasure_YARDS = 1,
  PBFloor_UnitOfMeasure_FEET = 2,
  PBFloor_UnitOfMeasure_INCHES = 3,
  PBFloor_UnitOfMeasure_CENTIMETERS = 4
};
bool PBFloor_UnitOfMeasure_IsValid(int value);
const PBFloor_UnitOfMeasure PBFloor_UnitOfMeasure_UnitOfMeasure_MIN = PBFloor_UnitOfMeasure_METERS;
const PBFloor_UnitOfMeasure PBFloor_UnitOfMeasure_UnitOfMeasure_MAX = PBFloor_UnitOfMeasure_CENTIMETERS;
const int PBFloor_UnitOfMeasure_UnitOfMeasure_ARRAYSIZE = PBFloor_UnitOfMeasure_UnitOfMeasure_MAX + 1;

const ::google::protobuf::EnumDescriptor* PBFloor_UnitOfMeasure_descriptor();
inline const ::std::string& PBFloor_UnitOfMeasure_Name(PBFloor_UnitOfMeasure value) {
  return ::google::protobuf::internal::NameOfEnum(
    PBFloor_UnitOfMeasure_descriptor(), value);
}
inline bool PBFloor_UnitOfMeasure_Parse(
    const ::std::string& name, PBFloor_UnitOfMeasure* value) {
  return ::google::protobuf::internal::ParseNamedEnum<PBFloor_UnitOfMeasure>(
    PBFloor_UnitOfMeasure_descriptor(), name, value);
}
// ===================================================================

class DeviceModel : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:DeviceModel) */ {
 public:
  DeviceModel();
  virtual ~DeviceModel();

  DeviceModel(const DeviceModel& from);

  inline DeviceModel& operator=(const DeviceModel& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DeviceModel& default_instance();

  static inline const DeviceModel* internal_default_instance() {
    return reinterpret_cast<const DeviceModel*>(
               &_DeviceModel_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(DeviceModel* other);

  // implements Message ----------------------------------------------

  inline DeviceModel* New() const PROTOBUF_FINAL { return New(NULL); }

  DeviceModel* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const DeviceModel& from);
  void MergeFrom(const DeviceModel& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(DeviceModel* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef DeviceModel_Category Category;
  static const Category UNDEFINED_CATEGORY =
    DeviceModel_Category_UNDEFINED_CATEGORY;
  static const Category TWO_WIRE_NOTIFICATION_APPLIANCE =
    DeviceModel_Category_TWO_WIRE_NOTIFICATION_APPLIANCE;
  static const Category CONVENTIONAL_SMOKE_DETECTOR =
    DeviceModel_Category_CONVENTIONAL_SMOKE_DETECTOR;
  static const Category CONVENTIONAL_HEAT_DETECTOR =
    DeviceModel_Category_CONVENTIONAL_HEAT_DETECTOR;
  static const Category PULL_STATION =
    DeviceModel_Category_PULL_STATION;
  static inline bool Category_IsValid(int value) {
    return DeviceModel_Category_IsValid(value);
  }
  static const Category Category_MIN =
    DeviceModel_Category_Category_MIN;
  static const Category Category_MAX =
    DeviceModel_Category_Category_MAX;
  static const int Category_ARRAYSIZE =
    DeviceModel_Category_Category_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Category_descriptor() {
    return DeviceModel_Category_descriptor();
  }
  static inline const ::std::string& Category_Name(Category value) {
    return DeviceModel_Category_Name(value);
  }
  static inline bool Category_Parse(const ::std::string& name,
      Category* value) {
    return DeviceModel_Category_Parse(name, value);
  }

  typedef DeviceModel_Type Type;
  static const Type INPUT =
    DeviceModel_Type_INPUT;
  static const Type OUTPUT =
    DeviceModel_Type_OUTPUT;
  static inline bool Type_IsValid(int value) {
    return DeviceModel_Type_IsValid(value);
  }
  static const Type Type_MIN =
    DeviceModel_Type_Type_MIN;
  static const Type Type_MAX =
    DeviceModel_Type_Type_MAX;
  static const int Type_ARRAYSIZE =
    DeviceModel_Type_Type_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Type_descriptor() {
    return DeviceModel_Type_descriptor();
  }
  static inline const ::std::string& Type_Name(Type value) {
    return DeviceModel_Type_Name(value);
  }
  static inline bool Type_Parse(const ::std::string& name,
      Type* value) {
    return DeviceModel_Type_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // required string name = 2;
  bool has_name() const;
  void clear_name();
  static const int kNameFieldNumber = 2;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // required string description = 3;
  bool has_description() const;
  void clear_description();
  static const int kDescriptionFieldNumber = 3;
  const ::std::string& description() const;
  void set_description(const ::std::string& value);
  #if LANG_CXX11
  void set_description(::std::string&& value);
  #endif
  void set_description(const char* value);
  void set_description(const char* value, size_t size);
  ::std::string* mutable_description();
  ::std::string* release_description();
  void set_allocated_description(::std::string* description);

  // required .DeviceBaseModel base_model = 1;
  bool has_base_model() const;
  void clear_base_model();
  static const int kBaseModelFieldNumber = 1;
  ::DeviceBaseModel base_model() const;
  void set_base_model(::DeviceBaseModel value);

  // required .DeviceModel.Type type = 4;
  bool has_type() const;
  void clear_type();
  static const int kTypeFieldNumber = 4;
  ::DeviceModel_Type type() const;
  void set_type(::DeviceModel_Type value);

  // required .DeviceModel.Category category = 5;
  bool has_category() const;
  void clear_category();
  static const int kCategoryFieldNumber = 5;
  ::DeviceModel_Category category() const;
  void set_category(::DeviceModel_Category value);

  // @@protoc_insertion_point(class_scope:DeviceModel)
 private:
  void set_has_base_model();
  void clear_has_base_model();
  void set_has_name();
  void clear_has_name();
  void set_has_description();
  void clear_has_description();
  void set_has_type();
  void clear_has_type();
  void set_has_category();
  void clear_has_category();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::internal::ArenaStringPtr description_;
  int base_model_;
  int type_;
  int category_;
  friend struct protobuf_fl_5fjob_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class DeviceModels : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:DeviceModels) */ {
 public:
  DeviceModels();
  virtual ~DeviceModels();

  DeviceModels(const DeviceModels& from);

  inline DeviceModels& operator=(const DeviceModels& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DeviceModels& default_instance();

  static inline const DeviceModels* internal_default_instance() {
    return reinterpret_cast<const DeviceModels*>(
               &_DeviceModels_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void Swap(DeviceModels* other);

  // implements Message ----------------------------------------------

  inline DeviceModels* New() const PROTOBUF_FINAL { return New(NULL); }

  DeviceModels* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const DeviceModels& from);
  void MergeFrom(const DeviceModels& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(DeviceModels* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .DeviceModel dev = 1;
  int dev_size() const;
  void clear_dev();
  static const int kDevFieldNumber = 1;
  const ::DeviceModel& dev(int index) const;
  ::DeviceModel* mutable_dev(int index);
  ::DeviceModel* add_dev();
  ::google::protobuf::RepeatedPtrField< ::DeviceModel >*
      mutable_dev();
  const ::google::protobuf::RepeatedPtrField< ::DeviceModel >&
      dev() const;

  // @@protoc_insertion_point(class_scope:DeviceModels)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::DeviceModel > dev_;
  friend struct protobuf_fl_5fjob_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class PBVersion : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:PBVersion) */ {
 public:
  PBVersion();
  virtual ~PBVersion();

  PBVersion(const PBVersion& from);

  inline PBVersion& operator=(const PBVersion& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PBVersion& default_instance();

  static inline const PBVersion* internal_default_instance() {
    return reinterpret_cast<const PBVersion*>(
               &_PBVersion_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    2;

  void Swap(PBVersion* other);

  // implements Message ----------------------------------------------

  inline PBVersion* New() const PROTOBUF_FINAL { return New(NULL); }

  PBVersion* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const PBVersion& from);
  void MergeFrom(const PBVersion& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(PBVersion* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string suffix = 4;
  bool has_suffix() const;
  void clear_suffix();
  static const int kSuffixFieldNumber = 4;
  const ::std::string& suffix() const;
  void set_suffix(const ::std::string& value);
  #if LANG_CXX11
  void set_suffix(::std::string&& value);
  #endif
  void set_suffix(const char* value);
  void set_suffix(const char* value, size_t size);
  ::std::string* mutable_suffix();
  ::std::string* release_suffix();
  void set_allocated_suffix(::std::string* suffix);

  // optional uint32 major = 1;
  bool has_major() const;
  void clear_major();
  static const int kMajorFieldNumber = 1;
  ::google::protobuf::uint32 major() const;
  void set_major(::google::protobuf::uint32 value);

  // optional uint32 minor = 2;
  bool has_minor() const;
  void clear_minor();
  static const int kMinorFieldNumber = 2;
  ::google::protobuf::uint32 minor() const;
  void set_minor(::google::protobuf::uint32 value);

  // optional uint32 patch = 3;
  bool has_patch() const;
  void clear_patch();
  static const int kPatchFieldNumber = 3;
  ::google::protobuf::uint32 patch() const;
  void set_patch(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:PBVersion)
 private:
  void set_has_major();
  void clear_has_major();
  void set_has_minor();
  void clear_has_minor();
  void set_has_patch();
  void clear_has_patch();
  void set_has_suffix();
  void clear_has_suffix();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr suffix_;
  ::google::protobuf::uint32 major_;
  ::google::protobuf::uint32 minor_;
  ::google::protobuf::uint32 patch_;
  friend struct protobuf_fl_5fjob_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class PBPosition : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:PBPosition) */ {
 public:
  PBPosition();
  virtual ~PBPosition();

  PBPosition(const PBPosition& from);

  inline PBPosition& operator=(const PBPosition& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PBPosition& default_instance();

  static inline const PBPosition* internal_default_instance() {
    return reinterpret_cast<const PBPosition*>(
               &_PBPosition_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    3;

  void Swap(PBPosition* other);

  // implements Message ----------------------------------------------

  inline PBPosition* New() const PROTOBUF_FINAL { return New(NULL); }

  PBPosition* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const PBPosition& from);
  void MergeFrom(const PBPosition& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(PBPosition* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required float x = 1;
  bool has_x() const;
  void clear_x();
  static const int kXFieldNumber = 1;
  float x() const;
  void set_x(float value);

  // required float y = 2;
  bool has_y() const;
  void clear_y();
  static const int kYFieldNumber = 2;
  float y() const;
  void set_y(float value);

  // optional float z = 3;
  bool has_z() const;
  void clear_z();
  static const int kZFieldNumber = 3;
  float z() const;
  void set_z(float value);

  // @@protoc_insertion_point(class_scope:PBPosition)
 private:
  void set_has_x();
  void clear_has_x();
  void set_has_y();
  void clear_has_y();
  void set_has_z();
  void clear_has_z();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  float x_;
  float y_;
  float z_;
  friend struct protobuf_fl_5fjob_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class PBTransform : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:PBTransform) */ {
 public:
  PBTransform();
  virtual ~PBTransform();

  PBTransform(const PBTransform& from);

  inline PBTransform& operator=(const PBTransform& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PBTransform& default_instance();

  static inline const PBTransform* internal_default_instance() {
    return reinterpret_cast<const PBTransform*>(
               &_PBTransform_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    4;

  void Swap(PBTransform* other);

  // implements Message ----------------------------------------------

  inline PBTransform* New() const PROTOBUF_FINAL { return New(NULL); }

  PBTransform* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const PBTransform& from);
  void MergeFrom(const PBTransform& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(PBTransform* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required float m11 = 1;
  bool has_m11() const;
  void clear_m11();
  static const int kM11FieldNumber = 1;
  float m11() const;
  void set_m11(float value);

  // required float m12 = 2;
  bool has_m12() const;
  void clear_m12();
  static const int kM12FieldNumber = 2;
  float m12() const;
  void set_m12(float value);

  // required float m13 = 3;
  bool has_m13() const;
  void clear_m13();
  static const int kM13FieldNumber = 3;
  float m13() const;
  void set_m13(float value);

  // required float m21 = 4;
  bool has_m21() const;
  void clear_m21();
  static const int kM21FieldNumber = 4;
  float m21() const;
  void set_m21(float value);

  // required float m22 = 5;
  bool has_m22() const;
  void clear_m22();
  static const int kM22FieldNumber = 5;
  float m22() const;
  void set_m22(float value);

  // required float m23 = 6;
  bool has_m23() const;
  void clear_m23();
  static const int kM23FieldNumber = 6;
  float m23() const;
  void set_m23(float value);

  // required float m31 = 7;
  bool has_m31() const;
  void clear_m31();
  static const int kM31FieldNumber = 7;
  float m31() const;
  void set_m31(float value);

  // required float m32 = 8;
  bool has_m32() const;
  void clear_m32();
  static const int kM32FieldNumber = 8;
  float m32() const;
  void set_m32(float value);

  // required float m33 = 9;
  bool has_m33() const;
  void clear_m33();
  static const int kM33FieldNumber = 9;
  float m33() const;
  void set_m33(float value);

  // @@protoc_insertion_point(class_scope:PBTransform)
 private:
  void set_has_m11();
  void clear_has_m11();
  void set_has_m12();
  void clear_has_m12();
  void set_has_m13();
  void clear_has_m13();
  void set_has_m21();
  void clear_has_m21();
  void set_has_m22();
  void clear_has_m22();
  void set_has_m23();
  void clear_has_m23();
  void set_has_m31();
  void clear_has_m31();
  void set_has_m32();
  void clear_has_m32();
  void set_has_m33();
  void clear_has_m33();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  float m11_;
  float m12_;
  float m13_;
  float m21_;
  float m22_;
  float m23_;
  float m31_;
  float m32_;
  float m33_;
  friend struct protobuf_fl_5fjob_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class PBGraphics : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:PBGraphics) */ {
 public:
  PBGraphics();
  virtual ~PBGraphics();

  PBGraphics(const PBGraphics& from);

  inline PBGraphics& operator=(const PBGraphics& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PBGraphics& default_instance();

  static inline const PBGraphics* internal_default_instance() {
    return reinterpret_cast<const PBGraphics*>(
               &_PBGraphics_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    5;

  void Swap(PBGraphics* other);

  // implements Message ----------------------------------------------

  inline PBGraphics* New() const PROTOBUF_FINAL { return New(NULL); }

  PBGraphics* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const PBGraphics& from);
  void MergeFrom(const PBGraphics& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(PBGraphics* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string type = 3;
  bool has_type() const;
  void clear_type();
  static const int kTypeFieldNumber = 3;
  const ::std::string& type() const;
  void set_type(const ::std::string& value);
  #if LANG_CXX11
  void set_type(::std::string&& value);
  #endif
  void set_type(const char* value);
  void set_type(const char* value, size_t size);
  ::std::string* mutable_type();
  ::std::string* release_type();
  void set_allocated_type(::std::string* type);

  // optional bytes svg_data = 5;
  bool has_svg_data() const;
  void clear_svg_data();
  static const int kSvgDataFieldNumber = 5;
  const ::std::string& svg_data() const;
  void set_svg_data(const ::std::string& value);
  #if LANG_CXX11
  void set_svg_data(::std::string&& value);
  #endif
  void set_svg_data(const char* value);
  void set_svg_data(const void* value, size_t size);
  ::std::string* mutable_svg_data();
  ::std::string* release_svg_data();
  void set_allocated_svg_data(::std::string* svg_data);

  // optional bytes img_data = 6;
  bool has_img_data() const;
  void clear_img_data();
  static const int kImgDataFieldNumber = 6;
  const ::std::string& img_data() const;
  void set_img_data(const ::std::string& value);
  #if LANG_CXX11
  void set_img_data(::std::string&& value);
  #endif
  void set_img_data(const char* value);
  void set_img_data(const void* value, size_t size);
  ::std::string* mutable_img_data();
  ::std::string* release_img_data();
  void set_allocated_img_data(::std::string* img_data);

  // optional .PBPosition pos = 1;
  bool has_pos() const;
  void clear_pos();
  static const int kPosFieldNumber = 1;
  const ::PBPosition& pos() const;
  ::PBPosition* mutable_pos();
  ::PBPosition* release_pos();
  void set_allocated_pos(::PBPosition* pos);

  // optional .PBTransform transform = 2;
  bool has_transform() const;
  void clear_transform();
  static const int kTransformFieldNumber = 2;
  const ::PBTransform& transform() const;
  ::PBTransform* mutable_transform();
  ::PBTransform* release_transform();
  void set_allocated_transform(::PBTransform* transform);

  // optional float z_value = 4;
  bool has_z_value() const;
  void clear_z_value();
  static const int kZValueFieldNumber = 4;
  float z_value() const;
  void set_z_value(float value);

  // @@protoc_insertion_point(class_scope:PBGraphics)
 private:
  void set_has_pos();
  void clear_has_pos();
  void set_has_transform();
  void clear_has_transform();
  void set_has_type();
  void clear_has_type();
  void set_has_z_value();
  void clear_has_z_value();
  void set_has_svg_data();
  void clear_has_svg_data();
  void set_has_img_data();
  void clear_has_img_data();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr type_;
  ::google::protobuf::internal::ArenaStringPtr svg_data_;
  ::google::protobuf::internal::ArenaStringPtr img_data_;
  ::PBPosition* pos_;
  ::PBTransform* transform_;
  float z_value_;
  friend struct protobuf_fl_5fjob_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class PBWio : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:PBWio) */ {
 public:
  PBWio();
  virtual ~PBWio();

  PBWio(const PBWio& from);

  inline PBWio& operator=(const PBWio& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PBWio& default_instance();

  static inline const PBWio* internal_default_instance() {
    return reinterpret_cast<const PBWio*>(
               &_PBWio_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    6;

  void Swap(PBWio* other);

  // implements Message ----------------------------------------------

  inline PBWio* New() const PROTOBUF_FINAL { return New(NULL); }

  PBWio* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const PBWio& from);
  void MergeFrom(const PBWio& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(PBWio* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string guid = 1;
  bool has_guid() const;
  void clear_guid();
  static const int kGuidFieldNumber = 1;
  const ::std::string& guid() const;
  void set_guid(const ::std::string& value);
  #if LANG_CXX11
  void set_guid(::std::string&& value);
  #endif
  void set_guid(const char* value);
  void set_guid(const char* value, size_t size);
  ::std::string* mutable_guid();
  ::std::string* release_guid();
  void set_allocated_guid(::std::string* guid);

  // optional string title = 2;
  bool has_title() const;
  void clear_title();
  static const int kTitleFieldNumber = 2;
  const ::std::string& title() const;
  void set_title(const ::std::string& value);
  #if LANG_CXX11
  void set_title(::std::string&& value);
  #endif
  void set_title(const char* value);
  void set_title(const char* value, size_t size);
  ::std::string* mutable_title();
  ::std::string* release_title();
  void set_allocated_title(::std::string* title);

  // optional string location = 3;
  bool has_location() const;
  void clear_location();
  static const int kLocationFieldNumber = 3;
  const ::std::string& location() const;
  void set_location(const ::std::string& value);
  #if LANG_CXX11
  void set_location(::std::string&& value);
  #endif
  void set_location(const char* value);
  void set_location(const char* value, size_t size);
  ::std::string* mutable_location();
  ::std::string* release_location();
  void set_allocated_location(::std::string* location);

  // optional string mac_address = 4;
  bool has_mac_address() const;
  void clear_mac_address();
  static const int kMacAddressFieldNumber = 4;
  const ::std::string& mac_address() const;
  void set_mac_address(const ::std::string& value);
  #if LANG_CXX11
  void set_mac_address(::std::string&& value);
  #endif
  void set_mac_address(const char* value);
  void set_mac_address(const char* value, size_t size);
  ::std::string* mutable_mac_address();
  ::std::string* release_mac_address();
  void set_allocated_mac_address(::std::string* mac_address);

  // optional .PBGraphics graphics = 7;
  bool has_graphics() const;
  void clear_graphics();
  static const int kGraphicsFieldNumber = 7;
  const ::PBGraphics& graphics() const;
  ::PBGraphics* mutable_graphics();
  ::PBGraphics* release_graphics();
  void set_allocated_graphics(::PBGraphics* graphics);

  // optional .DeviceBaseModel model = 5;
  bool has_model() const;
  void clear_model();
  static const int kModelFieldNumber = 5;
  ::DeviceBaseModel model() const;
  void set_model(::DeviceBaseModel value);

  // optional .SignalingType signaling = 6;
  bool has_signaling() const;
  void clear_signaling();
  static const int kSignalingFieldNumber = 6;
  ::SignalingType signaling() const;
  void set_signaling(::SignalingType value);

  // @@protoc_insertion_point(class_scope:PBWio)
 private:
  void set_has_guid();
  void clear_has_guid();
  void set_has_title();
  void clear_has_title();
  void set_has_location();
  void clear_has_location();
  void set_has_mac_address();
  void clear_has_mac_address();
  void set_has_model();
  void clear_has_model();
  void set_has_signaling();
  void clear_has_signaling();
  void set_has_graphics();
  void clear_has_graphics();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr guid_;
  ::google::protobuf::internal::ArenaStringPtr title_;
  ::google::protobuf::internal::ArenaStringPtr location_;
  ::google::protobuf::internal::ArenaStringPtr mac_address_;
  ::PBGraphics* graphics_;
  int model_;
  int signaling_;
  friend struct protobuf_fl_5fjob_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class PBCorrelationInputFromZC : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:PBCorrelationInputFromZC) */ {
 public:
  PBCorrelationInputFromZC();
  virtual ~PBCorrelationInputFromZC();

  PBCorrelationInputFromZC(const PBCorrelationInputFromZC& from);

  inline PBCorrelationInputFromZC& operator=(const PBCorrelationInputFromZC& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PBCorrelationInputFromZC& default_instance();

  enum SourceCase {
    kInput = 2,
    kSystemStatus = 3,
    kLocalTrouble = 4,
    kRemoteTrouble = 5,
    SOURCE_NOT_SET = 0,
  };

  static inline const PBCorrelationInputFromZC* internal_default_instance() {
    return reinterpret_cast<const PBCorrelationInputFromZC*>(
               &_PBCorrelationInputFromZC_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    7;

  void Swap(PBCorrelationInputFromZC* other);

  // implements Message ----------------------------------------------

  inline PBCorrelationInputFromZC* New() const PROTOBUF_FINAL { return New(NULL); }

  PBCorrelationInputFromZC* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const PBCorrelationInputFromZC& from);
  void MergeFrom(const PBCorrelationInputFromZC& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(PBCorrelationInputFromZC* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string zc_guid = 1;
  bool has_zc_guid() const;
  void clear_zc_guid();
  static const int kZcGuidFieldNumber = 1;
  const ::std::string& zc_guid() const;
  void set_zc_guid(const ::std::string& value);
  #if LANG_CXX11
  void set_zc_guid(::std::string&& value);
  #endif
  void set_zc_guid(const char* value);
  void set_zc_guid(const char* value, size_t size);
  ::std::string* mutable_zc_guid();
  ::std::string* release_zc_guid();
  void set_allocated_zc_guid(::std::string* zc_guid);

  // optional .InputType input = 2;
  bool has_input() const;
  void clear_input();
  static const int kInputFieldNumber = 2;
  ::InputType input() const;
  void set_input(::InputType value);

  // optional .SystemStatusType system_status = 3;
  bool has_system_status() const;
  void clear_system_status();
  static const int kSystemStatusFieldNumber = 3;
  ::SystemStatusType system_status() const;
  void set_system_status(::SystemStatusType value);

  // optional .LocalTroubleType local_trouble = 4;
  bool has_local_trouble() const;
  void clear_local_trouble();
  static const int kLocalTroubleFieldNumber = 4;
  ::LocalTroubleType local_trouble() const;
  void set_local_trouble(::LocalTroubleType value);

  // optional .RemoteTroubleType remote_trouble = 5;
  bool has_remote_trouble() const;
  void clear_remote_trouble();
  static const int kRemoteTroubleFieldNumber = 5;
  ::RemoteTroubleType remote_trouble() const;
  void set_remote_trouble(::RemoteTroubleType value);

  SourceCase source_case() const;
  // @@protoc_insertion_point(class_scope:PBCorrelationInputFromZC)
 private:
  void set_has_zc_guid();
  void clear_has_zc_guid();
  void set_has_input();
  void set_has_system_status();
  void set_has_local_trouble();
  void set_has_remote_trouble();

  inline bool has_source() const;
  void clear_source();
  inline void clear_has_source();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr zc_guid_;
  union SourceUnion {
    SourceUnion() {}
    int input_;
    int system_status_;
    int local_trouble_;
    int remote_trouble_;
  } source_;
  ::google::protobuf::uint32 _oneof_case_[1];

  friend struct protobuf_fl_5fjob_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class PBCorrelationInputFromWIO : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:PBCorrelationInputFromWIO) */ {
 public:
  PBCorrelationInputFromWIO();
  virtual ~PBCorrelationInputFromWIO();

  PBCorrelationInputFromWIO(const PBCorrelationInputFromWIO& from);

  inline PBCorrelationInputFromWIO& operator=(const PBCorrelationInputFromWIO& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PBCorrelationInputFromWIO& default_instance();

  static inline const PBCorrelationInputFromWIO* internal_default_instance() {
    return reinterpret_cast<const PBCorrelationInputFromWIO*>(
               &_PBCorrelationInputFromWIO_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    8;

  void Swap(PBCorrelationInputFromWIO* other);

  // implements Message ----------------------------------------------

  inline PBCorrelationInputFromWIO* New() const PROTOBUF_FINAL { return New(NULL); }

  PBCorrelationInputFromWIO* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const PBCorrelationInputFromWIO& from);
  void MergeFrom(const PBCorrelationInputFromWIO& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(PBCorrelationInputFromWIO* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string wio_guid = 1;
  bool has_wio_guid() const;
  void clear_wio_guid();
  static const int kWioGuidFieldNumber = 1;
  const ::std::string& wio_guid() const;
  void set_wio_guid(const ::std::string& value);
  #if LANG_CXX11
  void set_wio_guid(::std::string&& value);
  #endif
  void set_wio_guid(const char* value);
  void set_wio_guid(const char* value, size_t size);
  ::std::string* mutable_wio_guid();
  ::std::string* release_wio_guid();
  void set_allocated_wio_guid(::std::string* wio_guid);

  // optional .InputType input = 2;
  bool has_input() const;
  void clear_input();
  static const int kInputFieldNumber = 2;
  ::InputType input() const;
  void set_input(::InputType value);

  // @@protoc_insertion_point(class_scope:PBCorrelationInputFromWIO)
 private:
  void set_has_wio_guid();
  void clear_has_wio_guid();
  void set_has_input();
  void clear_has_input();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr wio_guid_;
  int input_;
  friend struct protobuf_fl_5fjob_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class PBCorrelationInput : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:PBCorrelationInput) */ {
 public:
  PBCorrelationInput();
  virtual ~PBCorrelationInput();

  PBCorrelationInput(const PBCorrelationInput& from);

  inline PBCorrelationInput& operator=(const PBCorrelationInput& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PBCorrelationInput& default_instance();

  static inline const PBCorrelationInput* internal_default_instance() {
    return reinterpret_cast<const PBCorrelationInput*>(
               &_PBCorrelationInput_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    9;

  void Swap(PBCorrelationInput* other);

  // implements Message ----------------------------------------------

  inline PBCorrelationInput* New() const PROTOBUF_FINAL { return New(NULL); }

  PBCorrelationInput* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const PBCorrelationInput& from);
  void MergeFrom(const PBCorrelationInput& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(PBCorrelationInput* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string guid = 1;
  bool has_guid() const;
  void clear_guid();
  static const int kGuidFieldNumber = 1;
  const ::std::string& guid() const;
  void set_guid(const ::std::string& value);
  #if LANG_CXX11
  void set_guid(::std::string&& value);
  #endif
  void set_guid(const char* value);
  void set_guid(const char* value, size_t size);
  ::std::string* mutable_guid();
  ::std::string* release_guid();
  void set_allocated_guid(::std::string* guid);

  // optional .PBPosition pos = 2;
  bool has_pos() const;
  void clear_pos();
  static const int kPosFieldNumber = 2;
  const ::PBPosition& pos() const;
  ::PBPosition* mutable_pos();
  ::PBPosition* release_pos();
  void set_allocated_pos(::PBPosition* pos);

  // optional .PBCorrelationInputFromWIO wio_input = 3;
  bool has_wio_input() const;
  void clear_wio_input();
  static const int kWioInputFieldNumber = 3;
  const ::PBCorrelationInputFromWIO& wio_input() const;
  ::PBCorrelationInputFromWIO* mutable_wio_input();
  ::PBCorrelationInputFromWIO* release_wio_input();
  void set_allocated_wio_input(::PBCorrelationInputFromWIO* wio_input);

  // optional .PBCorrelationInputFromZC zc_input = 4;
  bool has_zc_input() const;
  void clear_zc_input();
  static const int kZcInputFieldNumber = 4;
  const ::PBCorrelationInputFromZC& zc_input() const;
  ::PBCorrelationInputFromZC* mutable_zc_input();
  ::PBCorrelationInputFromZC* release_zc_input();
  void set_allocated_zc_input(::PBCorrelationInputFromZC* zc_input);

  // @@protoc_insertion_point(class_scope:PBCorrelationInput)
 private:
  void set_has_guid();
  void clear_has_guid();
  void set_has_pos();
  void clear_has_pos();
  void set_has_wio_input();
  void clear_has_wio_input();
  void set_has_zc_input();
  void clear_has_zc_input();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr guid_;
  ::PBPosition* pos_;
  ::PBCorrelationInputFromWIO* wio_input_;
  ::PBCorrelationInputFromZC* zc_input_;
  friend struct protobuf_fl_5fjob_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class PBCorrelation : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:PBCorrelation) */ {
 public:
  PBCorrelation();
  virtual ~PBCorrelation();

  PBCorrelation(const PBCorrelation& from);

  inline PBCorrelation& operator=(const PBCorrelation& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PBCorrelation& default_instance();

  static inline const PBCorrelation* internal_default_instance() {
    return reinterpret_cast<const PBCorrelation*>(
               &_PBCorrelation_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    10;

  void Swap(PBCorrelation* other);

  // implements Message ----------------------------------------------

  inline PBCorrelation* New() const PROTOBUF_FINAL { return New(NULL); }

  PBCorrelation* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const PBCorrelation& from);
  void MergeFrom(const PBCorrelation& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(PBCorrelation* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef PBCorrelation_TriggerType TriggerType;
  static const TriggerType ANY_INPUTS =
    PBCorrelation_TriggerType_ANY_INPUTS;
  static const TriggerType ALL_INPUTS =
    PBCorrelation_TriggerType_ALL_INPUTS;
  static inline bool TriggerType_IsValid(int value) {
    return PBCorrelation_TriggerType_IsValid(value);
  }
  static const TriggerType TriggerType_MIN =
    PBCorrelation_TriggerType_TriggerType_MIN;
  static const TriggerType TriggerType_MAX =
    PBCorrelation_TriggerType_TriggerType_MAX;
  static const int TriggerType_ARRAYSIZE =
    PBCorrelation_TriggerType_TriggerType_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  TriggerType_descriptor() {
    return PBCorrelation_TriggerType_descriptor();
  }
  static inline const ::std::string& TriggerType_Name(TriggerType value) {
    return PBCorrelation_TriggerType_Name(value);
  }
  static inline bool TriggerType_Parse(const ::std::string& name,
      TriggerType* value) {
    return PBCorrelation_TriggerType_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated .PBCorrelationInput input = 4;
  int input_size() const;
  void clear_input();
  static const int kInputFieldNumber = 4;
  const ::PBCorrelationInput& input(int index) const;
  ::PBCorrelationInput* mutable_input(int index);
  ::PBCorrelationInput* add_input();
  ::google::protobuf::RepeatedPtrField< ::PBCorrelationInput >*
      mutable_input();
  const ::google::protobuf::RepeatedPtrField< ::PBCorrelationInput >&
      input() const;

  // optional string guid = 1;
  bool has_guid() const;
  void clear_guid();
  static const int kGuidFieldNumber = 1;
  const ::std::string& guid() const;
  void set_guid(const ::std::string& value);
  #if LANG_CXX11
  void set_guid(::std::string&& value);
  #endif
  void set_guid(const char* value);
  void set_guid(const char* value, size_t size);
  ::std::string* mutable_guid();
  ::std::string* release_guid();
  void set_allocated_guid(::std::string* guid);

  // optional .LocalRelay relay = 2;
  bool has_relay() const;
  void clear_relay();
  static const int kRelayFieldNumber = 2;
  ::LocalRelay relay() const;
  void set_relay(::LocalRelay value);

  // optional .PBCorrelation.TriggerType trigger = 3;
  bool has_trigger() const;
  void clear_trigger();
  static const int kTriggerFieldNumber = 3;
  ::PBCorrelation_TriggerType trigger() const;
  void set_trigger(::PBCorrelation_TriggerType value);

  // @@protoc_insertion_point(class_scope:PBCorrelation)
 private:
  void set_has_guid();
  void clear_has_guid();
  void set_has_relay();
  void clear_has_relay();
  void set_has_trigger();
  void clear_has_trigger();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::PBCorrelationInput > input_;
  ::google::protobuf::internal::ArenaStringPtr guid_;
  int relay_;
  int trigger_;
  friend struct protobuf_fl_5fjob_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class PBZoneController : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:PBZoneController) */ {
 public:
  PBZoneController();
  virtual ~PBZoneController();

  PBZoneController(const PBZoneController& from);

  inline PBZoneController& operator=(const PBZoneController& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PBZoneController& default_instance();

  static inline const PBZoneController* internal_default_instance() {
    return reinterpret_cast<const PBZoneController*>(
               &_PBZoneController_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    11;

  void Swap(PBZoneController* other);

  // implements Message ----------------------------------------------

  inline PBZoneController* New() const PROTOBUF_FINAL { return New(NULL); }

  PBZoneController* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const PBZoneController& from);
  void MergeFrom(const PBZoneController& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(PBZoneController* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .PBWio wio = 8;
  int wio_size() const;
  void clear_wio();
  static const int kWioFieldNumber = 8;
  const ::PBWio& wio(int index) const;
  ::PBWio* mutable_wio(int index);
  ::PBWio* add_wio();
  ::google::protobuf::RepeatedPtrField< ::PBWio >*
      mutable_wio();
  const ::google::protobuf::RepeatedPtrField< ::PBWio >&
      wio() const;

  // repeated .PBCorrelation correlation = 9;
  int correlation_size() const;
  void clear_correlation();
  static const int kCorrelationFieldNumber = 9;
  const ::PBCorrelation& correlation(int index) const;
  ::PBCorrelation* mutable_correlation(int index);
  ::PBCorrelation* add_correlation();
  ::google::protobuf::RepeatedPtrField< ::PBCorrelation >*
      mutable_correlation();
  const ::google::protobuf::RepeatedPtrField< ::PBCorrelation >&
      correlation() const;

  // optional string guid = 1;
  bool has_guid() const;
  void clear_guid();
  static const int kGuidFieldNumber = 1;
  const ::std::string& guid() const;
  void set_guid(const ::std::string& value);
  #if LANG_CXX11
  void set_guid(::std::string&& value);
  #endif
  void set_guid(const char* value);
  void set_guid(const char* value, size_t size);
  ::std::string* mutable_guid();
  ::std::string* release_guid();
  void set_allocated_guid(::std::string* guid);

  // optional string title = 2;
  bool has_title() const;
  void clear_title();
  static const int kTitleFieldNumber = 2;
  const ::std::string& title() const;
  void set_title(const ::std::string& value);
  #if LANG_CXX11
  void set_title(::std::string&& value);
  #endif
  void set_title(const char* value);
  void set_title(const char* value, size_t size);
  ::std::string* mutable_title();
  ::std::string* release_title();
  void set_allocated_title(::std::string* title);

  // optional string location = 3;
  bool has_location() const;
  void clear_location();
  static const int kLocationFieldNumber = 3;
  const ::std::string& location() const;
  void set_location(const ::std::string& value);
  #if LANG_CXX11
  void set_location(::std::string&& value);
  #endif
  void set_location(const char* value);
  void set_location(const char* value, size_t size);
  ::std::string* mutable_location();
  ::std::string* release_location();
  void set_allocated_location(::std::string* location);

  // optional string mac_address = 4;
  bool has_mac_address() const;
  void clear_mac_address();
  static const int kMacAddressFieldNumber = 4;
  const ::std::string& mac_address() const;
  void set_mac_address(const ::std::string& value);
  #if LANG_CXX11
  void set_mac_address(::std::string&& value);
  #endif
  void set_mac_address(const char* value);
  void set_mac_address(const char* value, size_t size);
  ::std::string* mutable_mac_address();
  ::std::string* release_mac_address();
  void set_allocated_mac_address(::std::string* mac_address);

  // optional string pan_id = 5;
  bool has_pan_id() const;
  void clear_pan_id();
  static const int kPanIdFieldNumber = 5;
  const ::std::string& pan_id() const;
  void set_pan_id(const ::std::string& value);
  #if LANG_CXX11
  void set_pan_id(::std::string&& value);
  #endif
  void set_pan_id(const char* value);
  void set_pan_id(const char* value, size_t size);
  ::std::string* mutable_pan_id();
  ::std::string* release_pan_id();
  void set_allocated_pan_id(::std::string* pan_id);

  // optional .PBGraphics graphics = 7;
  bool has_graphics() const;
  void clear_graphics();
  static const int kGraphicsFieldNumber = 7;
  const ::PBGraphics& graphics() const;
  ::PBGraphics* mutable_graphics();
  ::PBGraphics* release_graphics();
  void set_allocated_graphics(::PBGraphics* graphics);

  // optional uint32 channel = 6;
  bool has_channel() const;
  void clear_channel();
  static const int kChannelFieldNumber = 6;
  ::google::protobuf::uint32 channel() const;
  void set_channel(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:PBZoneController)
 private:
  void set_has_guid();
  void clear_has_guid();
  void set_has_title();
  void clear_has_title();
  void set_has_location();
  void clear_has_location();
  void set_has_mac_address();
  void clear_has_mac_address();
  void set_has_pan_id();
  void clear_has_pan_id();
  void set_has_channel();
  void clear_has_channel();
  void set_has_graphics();
  void clear_has_graphics();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::PBWio > wio_;
  ::google::protobuf::RepeatedPtrField< ::PBCorrelation > correlation_;
  ::google::protobuf::internal::ArenaStringPtr guid_;
  ::google::protobuf::internal::ArenaStringPtr title_;
  ::google::protobuf::internal::ArenaStringPtr location_;
  ::google::protobuf::internal::ArenaStringPtr mac_address_;
  ::google::protobuf::internal::ArenaStringPtr pan_id_;
  ::PBGraphics* graphics_;
  ::google::protobuf::uint32 channel_;
  friend struct protobuf_fl_5fjob_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class PBFloor : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:PBFloor) */ {
 public:
  PBFloor();
  virtual ~PBFloor();

  PBFloor(const PBFloor& from);

  inline PBFloor& operator=(const PBFloor& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PBFloor& default_instance();

  static inline const PBFloor* internal_default_instance() {
    return reinterpret_cast<const PBFloor*>(
               &_PBFloor_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    12;

  void Swap(PBFloor* other);

  // implements Message ----------------------------------------------

  inline PBFloor* New() const PROTOBUF_FINAL { return New(NULL); }

  PBFloor* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const PBFloor& from);
  void MergeFrom(const PBFloor& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(PBFloor* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef PBFloor_UnitOfMeasure UnitOfMeasure;
  static const UnitOfMeasure METERS =
    PBFloor_UnitOfMeasure_METERS;
  static const UnitOfMeasure YARDS =
    PBFloor_UnitOfMeasure_YARDS;
  static const UnitOfMeasure FEET =
    PBFloor_UnitOfMeasure_FEET;
  static const UnitOfMeasure INCHES =
    PBFloor_UnitOfMeasure_INCHES;
  static const UnitOfMeasure CENTIMETERS =
    PBFloor_UnitOfMeasure_CENTIMETERS;
  static inline bool UnitOfMeasure_IsValid(int value) {
    return PBFloor_UnitOfMeasure_IsValid(value);
  }
  static const UnitOfMeasure UnitOfMeasure_MIN =
    PBFloor_UnitOfMeasure_UnitOfMeasure_MIN;
  static const UnitOfMeasure UnitOfMeasure_MAX =
    PBFloor_UnitOfMeasure_UnitOfMeasure_MAX;
  static const int UnitOfMeasure_ARRAYSIZE =
    PBFloor_UnitOfMeasure_UnitOfMeasure_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  UnitOfMeasure_descriptor() {
    return PBFloor_UnitOfMeasure_descriptor();
  }
  static inline const ::std::string& UnitOfMeasure_Name(UnitOfMeasure value) {
    return PBFloor_UnitOfMeasure_Name(value);
  }
  static inline bool UnitOfMeasure_Parse(const ::std::string& name,
      UnitOfMeasure* value) {
    return PBFloor_UnitOfMeasure_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated .PBZoneController zc = 5;
  int zc_size() const;
  void clear_zc();
  static const int kZcFieldNumber = 5;
  const ::PBZoneController& zc(int index) const;
  ::PBZoneController* mutable_zc(int index);
  ::PBZoneController* add_zc();
  ::google::protobuf::RepeatedPtrField< ::PBZoneController >*
      mutable_zc();
  const ::google::protobuf::RepeatedPtrField< ::PBZoneController >&
      zc() const;

  // optional string guid = 1;
  bool has_guid() const;
  void clear_guid();
  static const int kGuidFieldNumber = 1;
  const ::std::string& guid() const;
  void set_guid(const ::std::string& value);
  #if LANG_CXX11
  void set_guid(::std::string&& value);
  #endif
  void set_guid(const char* value);
  void set_guid(const char* value, size_t size);
  ::std::string* mutable_guid();
  ::std::string* release_guid();
  void set_allocated_guid(::std::string* guid);

  // optional string title = 2;
  bool has_title() const;
  void clear_title();
  static const int kTitleFieldNumber = 2;
  const ::std::string& title() const;
  void set_title(const ::std::string& value);
  #if LANG_CXX11
  void set_title(::std::string&& value);
  #endif
  void set_title(const char* value);
  void set_title(const char* value, size_t size);
  ::std::string* mutable_title();
  ::std::string* release_title();
  void set_allocated_title(::std::string* title);

  // optional .PBGraphics graphics = 4;
  bool has_graphics() const;
  void clear_graphics();
  static const int kGraphicsFieldNumber = 4;
  const ::PBGraphics& graphics() const;
  ::PBGraphics* mutable_graphics();
  ::PBGraphics* release_graphics();
  void set_allocated_graphics(::PBGraphics* graphics);

  // optional .PBFloor.UnitOfMeasure unit_of_measure = 3;
  bool has_unit_of_measure() const;
  void clear_unit_of_measure();
  static const int kUnitOfMeasureFieldNumber = 3;
  ::PBFloor_UnitOfMeasure unit_of_measure() const;
  void set_unit_of_measure(::PBFloor_UnitOfMeasure value);

  // @@protoc_insertion_point(class_scope:PBFloor)
 private:
  void set_has_guid();
  void clear_has_guid();
  void set_has_title();
  void clear_has_title();
  void set_has_unit_of_measure();
  void clear_has_unit_of_measure();
  void set_has_graphics();
  void clear_has_graphics();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::PBZoneController > zc_;
  ::google::protobuf::internal::ArenaStringPtr guid_;
  ::google::protobuf::internal::ArenaStringPtr title_;
  ::PBGraphics* graphics_;
  int unit_of_measure_;
  friend struct protobuf_fl_5fjob_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class PBJob : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:PBJob) */ {
 public:
  PBJob();
  virtual ~PBJob();

  PBJob(const PBJob& from);

  inline PBJob& operator=(const PBJob& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PBJob& default_instance();

  static inline const PBJob* internal_default_instance() {
    return reinterpret_cast<const PBJob*>(
               &_PBJob_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    13;

  void Swap(PBJob* other);

  // implements Message ----------------------------------------------

  inline PBJob* New() const PROTOBUF_FINAL { return New(NULL); }

  PBJob* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const PBJob& from);
  void MergeFrom(const PBJob& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(PBJob* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .PBFloor floor = 9;
  int floor_size() const;
  void clear_floor();
  static const int kFloorFieldNumber = 9;
  const ::PBFloor& floor(int index) const;
  ::PBFloor* mutable_floor(int index);
  ::PBFloor* add_floor();
  ::google::protobuf::RepeatedPtrField< ::PBFloor >*
      mutable_floor();
  const ::google::protobuf::RepeatedPtrField< ::PBFloor >&
      floor() const;

  // optional string guid = 1;
  bool has_guid() const;
  void clear_guid();
  static const int kGuidFieldNumber = 1;
  const ::std::string& guid() const;
  void set_guid(const ::std::string& value);
  #if LANG_CXX11
  void set_guid(::std::string&& value);
  #endif
  void set_guid(const char* value);
  void set_guid(const char* value, size_t size);
  ::std::string* mutable_guid();
  ::std::string* release_guid();
  void set_allocated_guid(::std::string* guid);

  // optional string creation_date_utc = 4;
  bool has_creation_date_utc() const;
  void clear_creation_date_utc();
  static const int kCreationDateUtcFieldNumber = 4;
  const ::std::string& creation_date_utc() const;
  void set_creation_date_utc(const ::std::string& value);
  #if LANG_CXX11
  void set_creation_date_utc(::std::string&& value);
  #endif
  void set_creation_date_utc(const char* value);
  void set_creation_date_utc(const char* value, size_t size);
  ::std::string* mutable_creation_date_utc();
  ::std::string* release_creation_date_utc();
  void set_allocated_creation_date_utc(::std::string* creation_date_utc);

  // optional string creation_time_utc = 5;
  bool has_creation_time_utc() const;
  void clear_creation_time_utc();
  static const int kCreationTimeUtcFieldNumber = 5;
  const ::std::string& creation_time_utc() const;
  void set_creation_time_utc(const ::std::string& value);
  #if LANG_CXX11
  void set_creation_time_utc(::std::string&& value);
  #endif
  void set_creation_time_utc(const char* value);
  void set_creation_time_utc(const char* value, size_t size);
  ::std::string* mutable_creation_time_utc();
  ::std::string* release_creation_time_utc();
  void set_allocated_creation_time_utc(::std::string* creation_time_utc);

  // optional string title = 6;
  bool has_title() const;
  void clear_title();
  static const int kTitleFieldNumber = 6;
  const ::std::string& title() const;
  void set_title(const ::std::string& value);
  #if LANG_CXX11
  void set_title(::std::string&& value);
  #endif
  void set_title(const char* value);
  void set_title(const char* value, size_t size);
  ::std::string* mutable_title();
  ::std::string* release_title();
  void set_allocated_title(::std::string* title);

  // optional string password = 7;
  bool has_password() const;
  void clear_password();
  static const int kPasswordFieldNumber = 7;
  const ::std::string& password() const;
  void set_password(const ::std::string& value);
  #if LANG_CXX11
  void set_password(::std::string&& value);
  #endif
  void set_password(const char* value);
  void set_password(const char* value, size_t size);
  ::std::string* mutable_password();
  ::std::string* release_password();
  void set_allocated_password(::std::string* password);

  // optional .PBVersion job_version = 2;
  bool has_job_version() const;
  void clear_job_version();
  static const int kJobVersionFieldNumber = 2;
  const ::PBVersion& job_version() const;
  ::PBVersion* mutable_job_version();
  ::PBVersion* release_job_version();
  void set_allocated_job_version(::PBVersion* job_version);

  // optional .PBVersion configurator_version = 3;
  bool has_configurator_version() const;
  void clear_configurator_version();
  static const int kConfiguratorVersionFieldNumber = 3;
  const ::PBVersion& configurator_version() const;
  ::PBVersion* mutable_configurator_version();
  ::PBVersion* release_configurator_version();
  void set_allocated_configurator_version(::PBVersion* configurator_version);

  // optional .StandardType standard = 8;
  bool has_standard() const;
  void clear_standard();
  static const int kStandardFieldNumber = 8;
  ::StandardType standard() const;
  void set_standard(::StandardType value);

  // @@protoc_insertion_point(class_scope:PBJob)
 private:
  void set_has_guid();
  void clear_has_guid();
  void set_has_job_version();
  void clear_has_job_version();
  void set_has_configurator_version();
  void clear_has_configurator_version();
  void set_has_creation_date_utc();
  void clear_has_creation_date_utc();
  void set_has_creation_time_utc();
  void clear_has_creation_time_utc();
  void set_has_title();
  void clear_has_title();
  void set_has_password();
  void clear_has_password();
  void set_has_standard();
  void clear_has_standard();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::PBFloor > floor_;
  ::google::protobuf::internal::ArenaStringPtr guid_;
  ::google::protobuf::internal::ArenaStringPtr creation_date_utc_;
  ::google::protobuf::internal::ArenaStringPtr creation_time_utc_;
  ::google::protobuf::internal::ArenaStringPtr title_;
  ::google::protobuf::internal::ArenaStringPtr password_;
  ::PBVersion* job_version_;
  ::PBVersion* configurator_version_;
  int standard_;
  friend struct protobuf_fl_5fjob_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// DeviceModel

// required .DeviceBaseModel base_model = 1;
inline bool DeviceModel::has_base_model() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void DeviceModel::set_has_base_model() {
  _has_bits_[0] |= 0x00000004u;
}
inline void DeviceModel::clear_has_base_model() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void DeviceModel::clear_base_model() {
  base_model_ = 0;
  clear_has_base_model();
}
inline ::DeviceBaseModel DeviceModel::base_model() const {
  // @@protoc_insertion_point(field_get:DeviceModel.base_model)
  return static_cast< ::DeviceBaseModel >(base_model_);
}
inline void DeviceModel::set_base_model(::DeviceBaseModel value) {
  assert(::DeviceBaseModel_IsValid(value));
  set_has_base_model();
  base_model_ = value;
  // @@protoc_insertion_point(field_set:DeviceModel.base_model)
}

// required string name = 2;
inline bool DeviceModel::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DeviceModel::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DeviceModel::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DeviceModel::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_name();
}
inline const ::std::string& DeviceModel::name() const {
  // @@protoc_insertion_point(field_get:DeviceModel.name)
  return name_.GetNoArena();
}
inline void DeviceModel::set_name(const ::std::string& value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:DeviceModel.name)
}
#if LANG_CXX11
inline void DeviceModel::set_name(::std::string&& value) {
  set_has_name();
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:DeviceModel.name)
}
#endif
inline void DeviceModel::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:DeviceModel.name)
}
inline void DeviceModel::set_name(const char* value, size_t size) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:DeviceModel.name)
}
inline ::std::string* DeviceModel::mutable_name() {
  set_has_name();
  // @@protoc_insertion_point(field_mutable:DeviceModel.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* DeviceModel::release_name() {
  // @@protoc_insertion_point(field_release:DeviceModel.name)
  clear_has_name();
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DeviceModel::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:DeviceModel.name)
}

// required string description = 3;
inline bool DeviceModel::has_description() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void DeviceModel::set_has_description() {
  _has_bits_[0] |= 0x00000002u;
}
inline void DeviceModel::clear_has_description() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void DeviceModel::clear_description() {
  description_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_description();
}
inline const ::std::string& DeviceModel::description() const {
  // @@protoc_insertion_point(field_get:DeviceModel.description)
  return description_.GetNoArena();
}
inline void DeviceModel::set_description(const ::std::string& value) {
  set_has_description();
  description_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:DeviceModel.description)
}
#if LANG_CXX11
inline void DeviceModel::set_description(::std::string&& value) {
  set_has_description();
  description_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:DeviceModel.description)
}
#endif
inline void DeviceModel::set_description(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_description();
  description_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:DeviceModel.description)
}
inline void DeviceModel::set_description(const char* value, size_t size) {
  set_has_description();
  description_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:DeviceModel.description)
}
inline ::std::string* DeviceModel::mutable_description() {
  set_has_description();
  // @@protoc_insertion_point(field_mutable:DeviceModel.description)
  return description_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* DeviceModel::release_description() {
  // @@protoc_insertion_point(field_release:DeviceModel.description)
  clear_has_description();
  return description_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DeviceModel::set_allocated_description(::std::string* description) {
  if (description != NULL) {
    set_has_description();
  } else {
    clear_has_description();
  }
  description_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), description);
  // @@protoc_insertion_point(field_set_allocated:DeviceModel.description)
}

// required .DeviceModel.Type type = 4;
inline bool DeviceModel::has_type() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void DeviceModel::set_has_type() {
  _has_bits_[0] |= 0x00000008u;
}
inline void DeviceModel::clear_has_type() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void DeviceModel::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::DeviceModel_Type DeviceModel::type() const {
  // @@protoc_insertion_point(field_get:DeviceModel.type)
  return static_cast< ::DeviceModel_Type >(type_);
}
inline void DeviceModel::set_type(::DeviceModel_Type value) {
  assert(::DeviceModel_Type_IsValid(value));
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:DeviceModel.type)
}

// required .DeviceModel.Category category = 5;
inline bool DeviceModel::has_category() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void DeviceModel::set_has_category() {
  _has_bits_[0] |= 0x00000010u;
}
inline void DeviceModel::clear_has_category() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void DeviceModel::clear_category() {
  category_ = 0;
  clear_has_category();
}
inline ::DeviceModel_Category DeviceModel::category() const {
  // @@protoc_insertion_point(field_get:DeviceModel.category)
  return static_cast< ::DeviceModel_Category >(category_);
}
inline void DeviceModel::set_category(::DeviceModel_Category value) {
  assert(::DeviceModel_Category_IsValid(value));
  set_has_category();
  category_ = value;
  // @@protoc_insertion_point(field_set:DeviceModel.category)
}

// -------------------------------------------------------------------

// DeviceModels

// repeated .DeviceModel dev = 1;
inline int DeviceModels::dev_size() const {
  return dev_.size();
}
inline void DeviceModels::clear_dev() {
  dev_.Clear();
}
inline const ::DeviceModel& DeviceModels::dev(int index) const {
  // @@protoc_insertion_point(field_get:DeviceModels.dev)
  return dev_.Get(index);
}
inline ::DeviceModel* DeviceModels::mutable_dev(int index) {
  // @@protoc_insertion_point(field_mutable:DeviceModels.dev)
  return dev_.Mutable(index);
}
inline ::DeviceModel* DeviceModels::add_dev() {
  // @@protoc_insertion_point(field_add:DeviceModels.dev)
  return dev_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::DeviceModel >*
DeviceModels::mutable_dev() {
  // @@protoc_insertion_point(field_mutable_list:DeviceModels.dev)
  return &dev_;
}
inline const ::google::protobuf::RepeatedPtrField< ::DeviceModel >&
DeviceModels::dev() const {
  // @@protoc_insertion_point(field_list:DeviceModels.dev)
  return dev_;
}

// -------------------------------------------------------------------

// PBVersion

// optional uint32 major = 1;
inline bool PBVersion::has_major() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PBVersion::set_has_major() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PBVersion::clear_has_major() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PBVersion::clear_major() {
  major_ = 0u;
  clear_has_major();
}
inline ::google::protobuf::uint32 PBVersion::major() const {
  // @@protoc_insertion_point(field_get:PBVersion.major)
  return major_;
}
inline void PBVersion::set_major(::google::protobuf::uint32 value) {
  set_has_major();
  major_ = value;
  // @@protoc_insertion_point(field_set:PBVersion.major)
}

// optional uint32 minor = 2;
inline bool PBVersion::has_minor() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PBVersion::set_has_minor() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PBVersion::clear_has_minor() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PBVersion::clear_minor() {
  minor_ = 0u;
  clear_has_minor();
}
inline ::google::protobuf::uint32 PBVersion::minor() const {
  // @@protoc_insertion_point(field_get:PBVersion.minor)
  return minor_;
}
inline void PBVersion::set_minor(::google::protobuf::uint32 value) {
  set_has_minor();
  minor_ = value;
  // @@protoc_insertion_point(field_set:PBVersion.minor)
}

// optional uint32 patch = 3;
inline bool PBVersion::has_patch() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void PBVersion::set_has_patch() {
  _has_bits_[0] |= 0x00000008u;
}
inline void PBVersion::clear_has_patch() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void PBVersion::clear_patch() {
  patch_ = 0u;
  clear_has_patch();
}
inline ::google::protobuf::uint32 PBVersion::patch() const {
  // @@protoc_insertion_point(field_get:PBVersion.patch)
  return patch_;
}
inline void PBVersion::set_patch(::google::protobuf::uint32 value) {
  set_has_patch();
  patch_ = value;
  // @@protoc_insertion_point(field_set:PBVersion.patch)
}

// optional string suffix = 4;
inline bool PBVersion::has_suffix() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PBVersion::set_has_suffix() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PBVersion::clear_has_suffix() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PBVersion::clear_suffix() {
  suffix_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_suffix();
}
inline const ::std::string& PBVersion::suffix() const {
  // @@protoc_insertion_point(field_get:PBVersion.suffix)
  return suffix_.GetNoArena();
}
inline void PBVersion::set_suffix(const ::std::string& value) {
  set_has_suffix();
  suffix_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:PBVersion.suffix)
}
#if LANG_CXX11
inline void PBVersion::set_suffix(::std::string&& value) {
  set_has_suffix();
  suffix_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:PBVersion.suffix)
}
#endif
inline void PBVersion::set_suffix(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_suffix();
  suffix_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:PBVersion.suffix)
}
inline void PBVersion::set_suffix(const char* value, size_t size) {
  set_has_suffix();
  suffix_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:PBVersion.suffix)
}
inline ::std::string* PBVersion::mutable_suffix() {
  set_has_suffix();
  // @@protoc_insertion_point(field_mutable:PBVersion.suffix)
  return suffix_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PBVersion::release_suffix() {
  // @@protoc_insertion_point(field_release:PBVersion.suffix)
  clear_has_suffix();
  return suffix_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PBVersion::set_allocated_suffix(::std::string* suffix) {
  if (suffix != NULL) {
    set_has_suffix();
  } else {
    clear_has_suffix();
  }
  suffix_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), suffix);
  // @@protoc_insertion_point(field_set_allocated:PBVersion.suffix)
}

// -------------------------------------------------------------------

// PBPosition

// required float x = 1;
inline bool PBPosition::has_x() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PBPosition::set_has_x() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PBPosition::clear_has_x() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PBPosition::clear_x() {
  x_ = 0;
  clear_has_x();
}
inline float PBPosition::x() const {
  // @@protoc_insertion_point(field_get:PBPosition.x)
  return x_;
}
inline void PBPosition::set_x(float value) {
  set_has_x();
  x_ = value;
  // @@protoc_insertion_point(field_set:PBPosition.x)
}

// required float y = 2;
inline bool PBPosition::has_y() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PBPosition::set_has_y() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PBPosition::clear_has_y() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PBPosition::clear_y() {
  y_ = 0;
  clear_has_y();
}
inline float PBPosition::y() const {
  // @@protoc_insertion_point(field_get:PBPosition.y)
  return y_;
}
inline void PBPosition::set_y(float value) {
  set_has_y();
  y_ = value;
  // @@protoc_insertion_point(field_set:PBPosition.y)
}

// optional float z = 3;
inline bool PBPosition::has_z() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PBPosition::set_has_z() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PBPosition::clear_has_z() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PBPosition::clear_z() {
  z_ = 0;
  clear_has_z();
}
inline float PBPosition::z() const {
  // @@protoc_insertion_point(field_get:PBPosition.z)
  return z_;
}
inline void PBPosition::set_z(float value) {
  set_has_z();
  z_ = value;
  // @@protoc_insertion_point(field_set:PBPosition.z)
}

// -------------------------------------------------------------------

// PBTransform

// required float m11 = 1;
inline bool PBTransform::has_m11() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PBTransform::set_has_m11() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PBTransform::clear_has_m11() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PBTransform::clear_m11() {
  m11_ = 0;
  clear_has_m11();
}
inline float PBTransform::m11() const {
  // @@protoc_insertion_point(field_get:PBTransform.m11)
  return m11_;
}
inline void PBTransform::set_m11(float value) {
  set_has_m11();
  m11_ = value;
  // @@protoc_insertion_point(field_set:PBTransform.m11)
}

// required float m12 = 2;
inline bool PBTransform::has_m12() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PBTransform::set_has_m12() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PBTransform::clear_has_m12() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PBTransform::clear_m12() {
  m12_ = 0;
  clear_has_m12();
}
inline float PBTransform::m12() const {
  // @@protoc_insertion_point(field_get:PBTransform.m12)
  return m12_;
}
inline void PBTransform::set_m12(float value) {
  set_has_m12();
  m12_ = value;
  // @@protoc_insertion_point(field_set:PBTransform.m12)
}

// required float m13 = 3;
inline bool PBTransform::has_m13() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PBTransform::set_has_m13() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PBTransform::clear_has_m13() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PBTransform::clear_m13() {
  m13_ = 0;
  clear_has_m13();
}
inline float PBTransform::m13() const {
  // @@protoc_insertion_point(field_get:PBTransform.m13)
  return m13_;
}
inline void PBTransform::set_m13(float value) {
  set_has_m13();
  m13_ = value;
  // @@protoc_insertion_point(field_set:PBTransform.m13)
}

// required float m21 = 4;
inline bool PBTransform::has_m21() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void PBTransform::set_has_m21() {
  _has_bits_[0] |= 0x00000008u;
}
inline void PBTransform::clear_has_m21() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void PBTransform::clear_m21() {
  m21_ = 0;
  clear_has_m21();
}
inline float PBTransform::m21() const {
  // @@protoc_insertion_point(field_get:PBTransform.m21)
  return m21_;
}
inline void PBTransform::set_m21(float value) {
  set_has_m21();
  m21_ = value;
  // @@protoc_insertion_point(field_set:PBTransform.m21)
}

// required float m22 = 5;
inline bool PBTransform::has_m22() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void PBTransform::set_has_m22() {
  _has_bits_[0] |= 0x00000010u;
}
inline void PBTransform::clear_has_m22() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void PBTransform::clear_m22() {
  m22_ = 0;
  clear_has_m22();
}
inline float PBTransform::m22() const {
  // @@protoc_insertion_point(field_get:PBTransform.m22)
  return m22_;
}
inline void PBTransform::set_m22(float value) {
  set_has_m22();
  m22_ = value;
  // @@protoc_insertion_point(field_set:PBTransform.m22)
}

// required float m23 = 6;
inline bool PBTransform::has_m23() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void PBTransform::set_has_m23() {
  _has_bits_[0] |= 0x00000020u;
}
inline void PBTransform::clear_has_m23() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void PBTransform::clear_m23() {
  m23_ = 0;
  clear_has_m23();
}
inline float PBTransform::m23() const {
  // @@protoc_insertion_point(field_get:PBTransform.m23)
  return m23_;
}
inline void PBTransform::set_m23(float value) {
  set_has_m23();
  m23_ = value;
  // @@protoc_insertion_point(field_set:PBTransform.m23)
}

// required float m31 = 7;
inline bool PBTransform::has_m31() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void PBTransform::set_has_m31() {
  _has_bits_[0] |= 0x00000040u;
}
inline void PBTransform::clear_has_m31() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void PBTransform::clear_m31() {
  m31_ = 0;
  clear_has_m31();
}
inline float PBTransform::m31() const {
  // @@protoc_insertion_point(field_get:PBTransform.m31)
  return m31_;
}
inline void PBTransform::set_m31(float value) {
  set_has_m31();
  m31_ = value;
  // @@protoc_insertion_point(field_set:PBTransform.m31)
}

// required float m32 = 8;
inline bool PBTransform::has_m32() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void PBTransform::set_has_m32() {
  _has_bits_[0] |= 0x00000080u;
}
inline void PBTransform::clear_has_m32() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void PBTransform::clear_m32() {
  m32_ = 0;
  clear_has_m32();
}
inline float PBTransform::m32() const {
  // @@protoc_insertion_point(field_get:PBTransform.m32)
  return m32_;
}
inline void PBTransform::set_m32(float value) {
  set_has_m32();
  m32_ = value;
  // @@protoc_insertion_point(field_set:PBTransform.m32)
}

// required float m33 = 9;
inline bool PBTransform::has_m33() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void PBTransform::set_has_m33() {
  _has_bits_[0] |= 0x00000100u;
}
inline void PBTransform::clear_has_m33() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void PBTransform::clear_m33() {
  m33_ = 0;
  clear_has_m33();
}
inline float PBTransform::m33() const {
  // @@protoc_insertion_point(field_get:PBTransform.m33)
  return m33_;
}
inline void PBTransform::set_m33(float value) {
  set_has_m33();
  m33_ = value;
  // @@protoc_insertion_point(field_set:PBTransform.m33)
}

// -------------------------------------------------------------------

// PBGraphics

// optional .PBPosition pos = 1;
inline bool PBGraphics::has_pos() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void PBGraphics::set_has_pos() {
  _has_bits_[0] |= 0x00000008u;
}
inline void PBGraphics::clear_has_pos() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void PBGraphics::clear_pos() {
  if (pos_ != NULL) pos_->::PBPosition::Clear();
  clear_has_pos();
}
inline const ::PBPosition& PBGraphics::pos() const {
  // @@protoc_insertion_point(field_get:PBGraphics.pos)
  return pos_ != NULL ? *pos_
                         : *::PBPosition::internal_default_instance();
}
inline ::PBPosition* PBGraphics::mutable_pos() {
  set_has_pos();
  if (pos_ == NULL) {
    pos_ = new ::PBPosition;
  }
  // @@protoc_insertion_point(field_mutable:PBGraphics.pos)
  return pos_;
}
inline ::PBPosition* PBGraphics::release_pos() {
  // @@protoc_insertion_point(field_release:PBGraphics.pos)
  clear_has_pos();
  ::PBPosition* temp = pos_;
  pos_ = NULL;
  return temp;
}
inline void PBGraphics::set_allocated_pos(::PBPosition* pos) {
  delete pos_;
  pos_ = pos;
  if (pos) {
    set_has_pos();
  } else {
    clear_has_pos();
  }
  // @@protoc_insertion_point(field_set_allocated:PBGraphics.pos)
}

// optional .PBTransform transform = 2;
inline bool PBGraphics::has_transform() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void PBGraphics::set_has_transform() {
  _has_bits_[0] |= 0x00000010u;
}
inline void PBGraphics::clear_has_transform() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void PBGraphics::clear_transform() {
  if (transform_ != NULL) transform_->::PBTransform::Clear();
  clear_has_transform();
}
inline const ::PBTransform& PBGraphics::transform() const {
  // @@protoc_insertion_point(field_get:PBGraphics.transform)
  return transform_ != NULL ? *transform_
                         : *::PBTransform::internal_default_instance();
}
inline ::PBTransform* PBGraphics::mutable_transform() {
  set_has_transform();
  if (transform_ == NULL) {
    transform_ = new ::PBTransform;
  }
  // @@protoc_insertion_point(field_mutable:PBGraphics.transform)
  return transform_;
}
inline ::PBTransform* PBGraphics::release_transform() {
  // @@protoc_insertion_point(field_release:PBGraphics.transform)
  clear_has_transform();
  ::PBTransform* temp = transform_;
  transform_ = NULL;
  return temp;
}
inline void PBGraphics::set_allocated_transform(::PBTransform* transform) {
  delete transform_;
  transform_ = transform;
  if (transform) {
    set_has_transform();
  } else {
    clear_has_transform();
  }
  // @@protoc_insertion_point(field_set_allocated:PBGraphics.transform)
}

// optional string type = 3;
inline bool PBGraphics::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PBGraphics::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PBGraphics::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PBGraphics::clear_type() {
  type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_type();
}
inline const ::std::string& PBGraphics::type() const {
  // @@protoc_insertion_point(field_get:PBGraphics.type)
  return type_.GetNoArena();
}
inline void PBGraphics::set_type(const ::std::string& value) {
  set_has_type();
  type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:PBGraphics.type)
}
#if LANG_CXX11
inline void PBGraphics::set_type(::std::string&& value) {
  set_has_type();
  type_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:PBGraphics.type)
}
#endif
inline void PBGraphics::set_type(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_type();
  type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:PBGraphics.type)
}
inline void PBGraphics::set_type(const char* value, size_t size) {
  set_has_type();
  type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:PBGraphics.type)
}
inline ::std::string* PBGraphics::mutable_type() {
  set_has_type();
  // @@protoc_insertion_point(field_mutable:PBGraphics.type)
  return type_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PBGraphics::release_type() {
  // @@protoc_insertion_point(field_release:PBGraphics.type)
  clear_has_type();
  return type_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PBGraphics::set_allocated_type(::std::string* type) {
  if (type != NULL) {
    set_has_type();
  } else {
    clear_has_type();
  }
  type_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), type);
  // @@protoc_insertion_point(field_set_allocated:PBGraphics.type)
}

// optional float z_value = 4;
inline bool PBGraphics::has_z_value() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void PBGraphics::set_has_z_value() {
  _has_bits_[0] |= 0x00000020u;
}
inline void PBGraphics::clear_has_z_value() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void PBGraphics::clear_z_value() {
  z_value_ = 0;
  clear_has_z_value();
}
inline float PBGraphics::z_value() const {
  // @@protoc_insertion_point(field_get:PBGraphics.z_value)
  return z_value_;
}
inline void PBGraphics::set_z_value(float value) {
  set_has_z_value();
  z_value_ = value;
  // @@protoc_insertion_point(field_set:PBGraphics.z_value)
}

// optional bytes svg_data = 5;
inline bool PBGraphics::has_svg_data() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PBGraphics::set_has_svg_data() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PBGraphics::clear_has_svg_data() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PBGraphics::clear_svg_data() {
  svg_data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_svg_data();
}
inline const ::std::string& PBGraphics::svg_data() const {
  // @@protoc_insertion_point(field_get:PBGraphics.svg_data)
  return svg_data_.GetNoArena();
}
inline void PBGraphics::set_svg_data(const ::std::string& value) {
  set_has_svg_data();
  svg_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:PBGraphics.svg_data)
}
#if LANG_CXX11
inline void PBGraphics::set_svg_data(::std::string&& value) {
  set_has_svg_data();
  svg_data_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:PBGraphics.svg_data)
}
#endif
inline void PBGraphics::set_svg_data(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_svg_data();
  svg_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:PBGraphics.svg_data)
}
inline void PBGraphics::set_svg_data(const void* value, size_t size) {
  set_has_svg_data();
  svg_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:PBGraphics.svg_data)
}
inline ::std::string* PBGraphics::mutable_svg_data() {
  set_has_svg_data();
  // @@protoc_insertion_point(field_mutable:PBGraphics.svg_data)
  return svg_data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PBGraphics::release_svg_data() {
  // @@protoc_insertion_point(field_release:PBGraphics.svg_data)
  clear_has_svg_data();
  return svg_data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PBGraphics::set_allocated_svg_data(::std::string* svg_data) {
  if (svg_data != NULL) {
    set_has_svg_data();
  } else {
    clear_has_svg_data();
  }
  svg_data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), svg_data);
  // @@protoc_insertion_point(field_set_allocated:PBGraphics.svg_data)
}

// optional bytes img_data = 6;
inline bool PBGraphics::has_img_data() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PBGraphics::set_has_img_data() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PBGraphics::clear_has_img_data() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PBGraphics::clear_img_data() {
  img_data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_img_data();
}
inline const ::std::string& PBGraphics::img_data() const {
  // @@protoc_insertion_point(field_get:PBGraphics.img_data)
  return img_data_.GetNoArena();
}
inline void PBGraphics::set_img_data(const ::std::string& value) {
  set_has_img_data();
  img_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:PBGraphics.img_data)
}
#if LANG_CXX11
inline void PBGraphics::set_img_data(::std::string&& value) {
  set_has_img_data();
  img_data_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:PBGraphics.img_data)
}
#endif
inline void PBGraphics::set_img_data(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_img_data();
  img_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:PBGraphics.img_data)
}
inline void PBGraphics::set_img_data(const void* value, size_t size) {
  set_has_img_data();
  img_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:PBGraphics.img_data)
}
inline ::std::string* PBGraphics::mutable_img_data() {
  set_has_img_data();
  // @@protoc_insertion_point(field_mutable:PBGraphics.img_data)
  return img_data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PBGraphics::release_img_data() {
  // @@protoc_insertion_point(field_release:PBGraphics.img_data)
  clear_has_img_data();
  return img_data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PBGraphics::set_allocated_img_data(::std::string* img_data) {
  if (img_data != NULL) {
    set_has_img_data();
  } else {
    clear_has_img_data();
  }
  img_data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), img_data);
  // @@protoc_insertion_point(field_set_allocated:PBGraphics.img_data)
}

// -------------------------------------------------------------------

// PBWio

// optional string guid = 1;
inline bool PBWio::has_guid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PBWio::set_has_guid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PBWio::clear_has_guid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PBWio::clear_guid() {
  guid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_guid();
}
inline const ::std::string& PBWio::guid() const {
  // @@protoc_insertion_point(field_get:PBWio.guid)
  return guid_.GetNoArena();
}
inline void PBWio::set_guid(const ::std::string& value) {
  set_has_guid();
  guid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:PBWio.guid)
}
#if LANG_CXX11
inline void PBWio::set_guid(::std::string&& value) {
  set_has_guid();
  guid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:PBWio.guid)
}
#endif
inline void PBWio::set_guid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_guid();
  guid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:PBWio.guid)
}
inline void PBWio::set_guid(const char* value, size_t size) {
  set_has_guid();
  guid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:PBWio.guid)
}
inline ::std::string* PBWio::mutable_guid() {
  set_has_guid();
  // @@protoc_insertion_point(field_mutable:PBWio.guid)
  return guid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PBWio::release_guid() {
  // @@protoc_insertion_point(field_release:PBWio.guid)
  clear_has_guid();
  return guid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PBWio::set_allocated_guid(::std::string* guid) {
  if (guid != NULL) {
    set_has_guid();
  } else {
    clear_has_guid();
  }
  guid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), guid);
  // @@protoc_insertion_point(field_set_allocated:PBWio.guid)
}

// optional string title = 2;
inline bool PBWio::has_title() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PBWio::set_has_title() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PBWio::clear_has_title() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PBWio::clear_title() {
  title_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_title();
}
inline const ::std::string& PBWio::title() const {
  // @@protoc_insertion_point(field_get:PBWio.title)
  return title_.GetNoArena();
}
inline void PBWio::set_title(const ::std::string& value) {
  set_has_title();
  title_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:PBWio.title)
}
#if LANG_CXX11
inline void PBWio::set_title(::std::string&& value) {
  set_has_title();
  title_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:PBWio.title)
}
#endif
inline void PBWio::set_title(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_title();
  title_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:PBWio.title)
}
inline void PBWio::set_title(const char* value, size_t size) {
  set_has_title();
  title_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:PBWio.title)
}
inline ::std::string* PBWio::mutable_title() {
  set_has_title();
  // @@protoc_insertion_point(field_mutable:PBWio.title)
  return title_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PBWio::release_title() {
  // @@protoc_insertion_point(field_release:PBWio.title)
  clear_has_title();
  return title_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PBWio::set_allocated_title(::std::string* title) {
  if (title != NULL) {
    set_has_title();
  } else {
    clear_has_title();
  }
  title_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), title);
  // @@protoc_insertion_point(field_set_allocated:PBWio.title)
}

// optional string location = 3;
inline bool PBWio::has_location() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PBWio::set_has_location() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PBWio::clear_has_location() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PBWio::clear_location() {
  location_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_location();
}
inline const ::std::string& PBWio::location() const {
  // @@protoc_insertion_point(field_get:PBWio.location)
  return location_.GetNoArena();
}
inline void PBWio::set_location(const ::std::string& value) {
  set_has_location();
  location_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:PBWio.location)
}
#if LANG_CXX11
inline void PBWio::set_location(::std::string&& value) {
  set_has_location();
  location_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:PBWio.location)
}
#endif
inline void PBWio::set_location(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_location();
  location_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:PBWio.location)
}
inline void PBWio::set_location(const char* value, size_t size) {
  set_has_location();
  location_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:PBWio.location)
}
inline ::std::string* PBWio::mutable_location() {
  set_has_location();
  // @@protoc_insertion_point(field_mutable:PBWio.location)
  return location_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PBWio::release_location() {
  // @@protoc_insertion_point(field_release:PBWio.location)
  clear_has_location();
  return location_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PBWio::set_allocated_location(::std::string* location) {
  if (location != NULL) {
    set_has_location();
  } else {
    clear_has_location();
  }
  location_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), location);
  // @@protoc_insertion_point(field_set_allocated:PBWio.location)
}

// optional string mac_address = 4;
inline bool PBWio::has_mac_address() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void PBWio::set_has_mac_address() {
  _has_bits_[0] |= 0x00000008u;
}
inline void PBWio::clear_has_mac_address() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void PBWio::clear_mac_address() {
  mac_address_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_mac_address();
}
inline const ::std::string& PBWio::mac_address() const {
  // @@protoc_insertion_point(field_get:PBWio.mac_address)
  return mac_address_.GetNoArena();
}
inline void PBWio::set_mac_address(const ::std::string& value) {
  set_has_mac_address();
  mac_address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:PBWio.mac_address)
}
#if LANG_CXX11
inline void PBWio::set_mac_address(::std::string&& value) {
  set_has_mac_address();
  mac_address_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:PBWio.mac_address)
}
#endif
inline void PBWio::set_mac_address(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_mac_address();
  mac_address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:PBWio.mac_address)
}
inline void PBWio::set_mac_address(const char* value, size_t size) {
  set_has_mac_address();
  mac_address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:PBWio.mac_address)
}
inline ::std::string* PBWio::mutable_mac_address() {
  set_has_mac_address();
  // @@protoc_insertion_point(field_mutable:PBWio.mac_address)
  return mac_address_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PBWio::release_mac_address() {
  // @@protoc_insertion_point(field_release:PBWio.mac_address)
  clear_has_mac_address();
  return mac_address_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PBWio::set_allocated_mac_address(::std::string* mac_address) {
  if (mac_address != NULL) {
    set_has_mac_address();
  } else {
    clear_has_mac_address();
  }
  mac_address_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), mac_address);
  // @@protoc_insertion_point(field_set_allocated:PBWio.mac_address)
}

// optional .DeviceBaseModel model = 5;
inline bool PBWio::has_model() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void PBWio::set_has_model() {
  _has_bits_[0] |= 0x00000020u;
}
inline void PBWio::clear_has_model() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void PBWio::clear_model() {
  model_ = 0;
  clear_has_model();
}
inline ::DeviceBaseModel PBWio::model() const {
  // @@protoc_insertion_point(field_get:PBWio.model)
  return static_cast< ::DeviceBaseModel >(model_);
}
inline void PBWio::set_model(::DeviceBaseModel value) {
  assert(::DeviceBaseModel_IsValid(value));
  set_has_model();
  model_ = value;
  // @@protoc_insertion_point(field_set:PBWio.model)
}

// optional .SignalingType signaling = 6;
inline bool PBWio::has_signaling() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void PBWio::set_has_signaling() {
  _has_bits_[0] |= 0x00000040u;
}
inline void PBWio::clear_has_signaling() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void PBWio::clear_signaling() {
  signaling_ = 0;
  clear_has_signaling();
}
inline ::SignalingType PBWio::signaling() const {
  // @@protoc_insertion_point(field_get:PBWio.signaling)
  return static_cast< ::SignalingType >(signaling_);
}
inline void PBWio::set_signaling(::SignalingType value) {
  assert(::SignalingType_IsValid(value));
  set_has_signaling();
  signaling_ = value;
  // @@protoc_insertion_point(field_set:PBWio.signaling)
}

// optional .PBGraphics graphics = 7;
inline bool PBWio::has_graphics() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void PBWio::set_has_graphics() {
  _has_bits_[0] |= 0x00000010u;
}
inline void PBWio::clear_has_graphics() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void PBWio::clear_graphics() {
  if (graphics_ != NULL) graphics_->::PBGraphics::Clear();
  clear_has_graphics();
}
inline const ::PBGraphics& PBWio::graphics() const {
  // @@protoc_insertion_point(field_get:PBWio.graphics)
  return graphics_ != NULL ? *graphics_
                         : *::PBGraphics::internal_default_instance();
}
inline ::PBGraphics* PBWio::mutable_graphics() {
  set_has_graphics();
  if (graphics_ == NULL) {
    graphics_ = new ::PBGraphics;
  }
  // @@protoc_insertion_point(field_mutable:PBWio.graphics)
  return graphics_;
}
inline ::PBGraphics* PBWio::release_graphics() {
  // @@protoc_insertion_point(field_release:PBWio.graphics)
  clear_has_graphics();
  ::PBGraphics* temp = graphics_;
  graphics_ = NULL;
  return temp;
}
inline void PBWio::set_allocated_graphics(::PBGraphics* graphics) {
  delete graphics_;
  graphics_ = graphics;
  if (graphics) {
    set_has_graphics();
  } else {
    clear_has_graphics();
  }
  // @@protoc_insertion_point(field_set_allocated:PBWio.graphics)
}

// -------------------------------------------------------------------

// PBCorrelationInputFromZC

// optional string zc_guid = 1;
inline bool PBCorrelationInputFromZC::has_zc_guid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PBCorrelationInputFromZC::set_has_zc_guid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PBCorrelationInputFromZC::clear_has_zc_guid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PBCorrelationInputFromZC::clear_zc_guid() {
  zc_guid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_zc_guid();
}
inline const ::std::string& PBCorrelationInputFromZC::zc_guid() const {
  // @@protoc_insertion_point(field_get:PBCorrelationInputFromZC.zc_guid)
  return zc_guid_.GetNoArena();
}
inline void PBCorrelationInputFromZC::set_zc_guid(const ::std::string& value) {
  set_has_zc_guid();
  zc_guid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:PBCorrelationInputFromZC.zc_guid)
}
#if LANG_CXX11
inline void PBCorrelationInputFromZC::set_zc_guid(::std::string&& value) {
  set_has_zc_guid();
  zc_guid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:PBCorrelationInputFromZC.zc_guid)
}
#endif
inline void PBCorrelationInputFromZC::set_zc_guid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_zc_guid();
  zc_guid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:PBCorrelationInputFromZC.zc_guid)
}
inline void PBCorrelationInputFromZC::set_zc_guid(const char* value, size_t size) {
  set_has_zc_guid();
  zc_guid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:PBCorrelationInputFromZC.zc_guid)
}
inline ::std::string* PBCorrelationInputFromZC::mutable_zc_guid() {
  set_has_zc_guid();
  // @@protoc_insertion_point(field_mutable:PBCorrelationInputFromZC.zc_guid)
  return zc_guid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PBCorrelationInputFromZC::release_zc_guid() {
  // @@protoc_insertion_point(field_release:PBCorrelationInputFromZC.zc_guid)
  clear_has_zc_guid();
  return zc_guid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PBCorrelationInputFromZC::set_allocated_zc_guid(::std::string* zc_guid) {
  if (zc_guid != NULL) {
    set_has_zc_guid();
  } else {
    clear_has_zc_guid();
  }
  zc_guid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), zc_guid);
  // @@protoc_insertion_point(field_set_allocated:PBCorrelationInputFromZC.zc_guid)
}

// optional .InputType input = 2;
inline bool PBCorrelationInputFromZC::has_input() const {
  return source_case() == kInput;
}
inline void PBCorrelationInputFromZC::set_has_input() {
  _oneof_case_[0] = kInput;
}
inline void PBCorrelationInputFromZC::clear_input() {
  if (has_input()) {
    source_.input_ = 0;
    clear_has_source();
  }
}
inline ::InputType PBCorrelationInputFromZC::input() const {
  // @@protoc_insertion_point(field_get:PBCorrelationInputFromZC.input)
  if (has_input()) {
    return static_cast< ::InputType >(source_.input_);
  }
  return static_cast< ::InputType >(0);
}
inline void PBCorrelationInputFromZC::set_input(::InputType value) {
  assert(::InputType_IsValid(value));
  if (!has_input()) {
    clear_source();
    set_has_input();
  }
  source_.input_ = value;
  // @@protoc_insertion_point(field_set:PBCorrelationInputFromZC.input)
}

// optional .SystemStatusType system_status = 3;
inline bool PBCorrelationInputFromZC::has_system_status() const {
  return source_case() == kSystemStatus;
}
inline void PBCorrelationInputFromZC::set_has_system_status() {
  _oneof_case_[0] = kSystemStatus;
}
inline void PBCorrelationInputFromZC::clear_system_status() {
  if (has_system_status()) {
    source_.system_status_ = 0;
    clear_has_source();
  }
}
inline ::SystemStatusType PBCorrelationInputFromZC::system_status() const {
  // @@protoc_insertion_point(field_get:PBCorrelationInputFromZC.system_status)
  if (has_system_status()) {
    return static_cast< ::SystemStatusType >(source_.system_status_);
  }
  return static_cast< ::SystemStatusType >(0);
}
inline void PBCorrelationInputFromZC::set_system_status(::SystemStatusType value) {
  assert(::SystemStatusType_IsValid(value));
  if (!has_system_status()) {
    clear_source();
    set_has_system_status();
  }
  source_.system_status_ = value;
  // @@protoc_insertion_point(field_set:PBCorrelationInputFromZC.system_status)
}

// optional .LocalTroubleType local_trouble = 4;
inline bool PBCorrelationInputFromZC::has_local_trouble() const {
  return source_case() == kLocalTrouble;
}
inline void PBCorrelationInputFromZC::set_has_local_trouble() {
  _oneof_case_[0] = kLocalTrouble;
}
inline void PBCorrelationInputFromZC::clear_local_trouble() {
  if (has_local_trouble()) {
    source_.local_trouble_ = 0;
    clear_has_source();
  }
}
inline ::LocalTroubleType PBCorrelationInputFromZC::local_trouble() const {
  // @@protoc_insertion_point(field_get:PBCorrelationInputFromZC.local_trouble)
  if (has_local_trouble()) {
    return static_cast< ::LocalTroubleType >(source_.local_trouble_);
  }
  return static_cast< ::LocalTroubleType >(0);
}
inline void PBCorrelationInputFromZC::set_local_trouble(::LocalTroubleType value) {
  assert(::LocalTroubleType_IsValid(value));
  if (!has_local_trouble()) {
    clear_source();
    set_has_local_trouble();
  }
  source_.local_trouble_ = value;
  // @@protoc_insertion_point(field_set:PBCorrelationInputFromZC.local_trouble)
}

// optional .RemoteTroubleType remote_trouble = 5;
inline bool PBCorrelationInputFromZC::has_remote_trouble() const {
  return source_case() == kRemoteTrouble;
}
inline void PBCorrelationInputFromZC::set_has_remote_trouble() {
  _oneof_case_[0] = kRemoteTrouble;
}
inline void PBCorrelationInputFromZC::clear_remote_trouble() {
  if (has_remote_trouble()) {
    source_.remote_trouble_ = 0;
    clear_has_source();
  }
}
inline ::RemoteTroubleType PBCorrelationInputFromZC::remote_trouble() const {
  // @@protoc_insertion_point(field_get:PBCorrelationInputFromZC.remote_trouble)
  if (has_remote_trouble()) {
    return static_cast< ::RemoteTroubleType >(source_.remote_trouble_);
  }
  return static_cast< ::RemoteTroubleType >(0);
}
inline void PBCorrelationInputFromZC::set_remote_trouble(::RemoteTroubleType value) {
  assert(::RemoteTroubleType_IsValid(value));
  if (!has_remote_trouble()) {
    clear_source();
    set_has_remote_trouble();
  }
  source_.remote_trouble_ = value;
  // @@protoc_insertion_point(field_set:PBCorrelationInputFromZC.remote_trouble)
}

inline bool PBCorrelationInputFromZC::has_source() const {
  return source_case() != SOURCE_NOT_SET;
}
inline void PBCorrelationInputFromZC::clear_has_source() {
  _oneof_case_[0] = SOURCE_NOT_SET;
}
inline PBCorrelationInputFromZC::SourceCase PBCorrelationInputFromZC::source_case() const {
  return PBCorrelationInputFromZC::SourceCase(_oneof_case_[0]);
}
// -------------------------------------------------------------------

// PBCorrelationInputFromWIO

// optional string wio_guid = 1;
inline bool PBCorrelationInputFromWIO::has_wio_guid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PBCorrelationInputFromWIO::set_has_wio_guid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PBCorrelationInputFromWIO::clear_has_wio_guid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PBCorrelationInputFromWIO::clear_wio_guid() {
  wio_guid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_wio_guid();
}
inline const ::std::string& PBCorrelationInputFromWIO::wio_guid() const {
  // @@protoc_insertion_point(field_get:PBCorrelationInputFromWIO.wio_guid)
  return wio_guid_.GetNoArena();
}
inline void PBCorrelationInputFromWIO::set_wio_guid(const ::std::string& value) {
  set_has_wio_guid();
  wio_guid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:PBCorrelationInputFromWIO.wio_guid)
}
#if LANG_CXX11
inline void PBCorrelationInputFromWIO::set_wio_guid(::std::string&& value) {
  set_has_wio_guid();
  wio_guid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:PBCorrelationInputFromWIO.wio_guid)
}
#endif
inline void PBCorrelationInputFromWIO::set_wio_guid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_wio_guid();
  wio_guid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:PBCorrelationInputFromWIO.wio_guid)
}
inline void PBCorrelationInputFromWIO::set_wio_guid(const char* value, size_t size) {
  set_has_wio_guid();
  wio_guid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:PBCorrelationInputFromWIO.wio_guid)
}
inline ::std::string* PBCorrelationInputFromWIO::mutable_wio_guid() {
  set_has_wio_guid();
  // @@protoc_insertion_point(field_mutable:PBCorrelationInputFromWIO.wio_guid)
  return wio_guid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PBCorrelationInputFromWIO::release_wio_guid() {
  // @@protoc_insertion_point(field_release:PBCorrelationInputFromWIO.wio_guid)
  clear_has_wio_guid();
  return wio_guid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PBCorrelationInputFromWIO::set_allocated_wio_guid(::std::string* wio_guid) {
  if (wio_guid != NULL) {
    set_has_wio_guid();
  } else {
    clear_has_wio_guid();
  }
  wio_guid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), wio_guid);
  // @@protoc_insertion_point(field_set_allocated:PBCorrelationInputFromWIO.wio_guid)
}

// optional .InputType input = 2;
inline bool PBCorrelationInputFromWIO::has_input() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PBCorrelationInputFromWIO::set_has_input() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PBCorrelationInputFromWIO::clear_has_input() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PBCorrelationInputFromWIO::clear_input() {
  input_ = 0;
  clear_has_input();
}
inline ::InputType PBCorrelationInputFromWIO::input() const {
  // @@protoc_insertion_point(field_get:PBCorrelationInputFromWIO.input)
  return static_cast< ::InputType >(input_);
}
inline void PBCorrelationInputFromWIO::set_input(::InputType value) {
  assert(::InputType_IsValid(value));
  set_has_input();
  input_ = value;
  // @@protoc_insertion_point(field_set:PBCorrelationInputFromWIO.input)
}

// -------------------------------------------------------------------

// PBCorrelationInput

// optional string guid = 1;
inline bool PBCorrelationInput::has_guid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PBCorrelationInput::set_has_guid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PBCorrelationInput::clear_has_guid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PBCorrelationInput::clear_guid() {
  guid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_guid();
}
inline const ::std::string& PBCorrelationInput::guid() const {
  // @@protoc_insertion_point(field_get:PBCorrelationInput.guid)
  return guid_.GetNoArena();
}
inline void PBCorrelationInput::set_guid(const ::std::string& value) {
  set_has_guid();
  guid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:PBCorrelationInput.guid)
}
#if LANG_CXX11
inline void PBCorrelationInput::set_guid(::std::string&& value) {
  set_has_guid();
  guid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:PBCorrelationInput.guid)
}
#endif
inline void PBCorrelationInput::set_guid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_guid();
  guid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:PBCorrelationInput.guid)
}
inline void PBCorrelationInput::set_guid(const char* value, size_t size) {
  set_has_guid();
  guid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:PBCorrelationInput.guid)
}
inline ::std::string* PBCorrelationInput::mutable_guid() {
  set_has_guid();
  // @@protoc_insertion_point(field_mutable:PBCorrelationInput.guid)
  return guid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PBCorrelationInput::release_guid() {
  // @@protoc_insertion_point(field_release:PBCorrelationInput.guid)
  clear_has_guid();
  return guid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PBCorrelationInput::set_allocated_guid(::std::string* guid) {
  if (guid != NULL) {
    set_has_guid();
  } else {
    clear_has_guid();
  }
  guid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), guid);
  // @@protoc_insertion_point(field_set_allocated:PBCorrelationInput.guid)
}

// optional .PBPosition pos = 2;
inline bool PBCorrelationInput::has_pos() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PBCorrelationInput::set_has_pos() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PBCorrelationInput::clear_has_pos() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PBCorrelationInput::clear_pos() {
  if (pos_ != NULL) pos_->::PBPosition::Clear();
  clear_has_pos();
}
inline const ::PBPosition& PBCorrelationInput::pos() const {
  // @@protoc_insertion_point(field_get:PBCorrelationInput.pos)
  return pos_ != NULL ? *pos_
                         : *::PBPosition::internal_default_instance();
}
inline ::PBPosition* PBCorrelationInput::mutable_pos() {
  set_has_pos();
  if (pos_ == NULL) {
    pos_ = new ::PBPosition;
  }
  // @@protoc_insertion_point(field_mutable:PBCorrelationInput.pos)
  return pos_;
}
inline ::PBPosition* PBCorrelationInput::release_pos() {
  // @@protoc_insertion_point(field_release:PBCorrelationInput.pos)
  clear_has_pos();
  ::PBPosition* temp = pos_;
  pos_ = NULL;
  return temp;
}
inline void PBCorrelationInput::set_allocated_pos(::PBPosition* pos) {
  delete pos_;
  pos_ = pos;
  if (pos) {
    set_has_pos();
  } else {
    clear_has_pos();
  }
  // @@protoc_insertion_point(field_set_allocated:PBCorrelationInput.pos)
}

// optional .PBCorrelationInputFromWIO wio_input = 3;
inline bool PBCorrelationInput::has_wio_input() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PBCorrelationInput::set_has_wio_input() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PBCorrelationInput::clear_has_wio_input() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PBCorrelationInput::clear_wio_input() {
  if (wio_input_ != NULL) wio_input_->::PBCorrelationInputFromWIO::Clear();
  clear_has_wio_input();
}
inline const ::PBCorrelationInputFromWIO& PBCorrelationInput::wio_input() const {
  // @@protoc_insertion_point(field_get:PBCorrelationInput.wio_input)
  return wio_input_ != NULL ? *wio_input_
                         : *::PBCorrelationInputFromWIO::internal_default_instance();
}
inline ::PBCorrelationInputFromWIO* PBCorrelationInput::mutable_wio_input() {
  set_has_wio_input();
  if (wio_input_ == NULL) {
    wio_input_ = new ::PBCorrelationInputFromWIO;
  }
  // @@protoc_insertion_point(field_mutable:PBCorrelationInput.wio_input)
  return wio_input_;
}
inline ::PBCorrelationInputFromWIO* PBCorrelationInput::release_wio_input() {
  // @@protoc_insertion_point(field_release:PBCorrelationInput.wio_input)
  clear_has_wio_input();
  ::PBCorrelationInputFromWIO* temp = wio_input_;
  wio_input_ = NULL;
  return temp;
}
inline void PBCorrelationInput::set_allocated_wio_input(::PBCorrelationInputFromWIO* wio_input) {
  delete wio_input_;
  wio_input_ = wio_input;
  if (wio_input) {
    set_has_wio_input();
  } else {
    clear_has_wio_input();
  }
  // @@protoc_insertion_point(field_set_allocated:PBCorrelationInput.wio_input)
}

// optional .PBCorrelationInputFromZC zc_input = 4;
inline bool PBCorrelationInput::has_zc_input() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void PBCorrelationInput::set_has_zc_input() {
  _has_bits_[0] |= 0x00000008u;
}
inline void PBCorrelationInput::clear_has_zc_input() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void PBCorrelationInput::clear_zc_input() {
  if (zc_input_ != NULL) zc_input_->::PBCorrelationInputFromZC::Clear();
  clear_has_zc_input();
}
inline const ::PBCorrelationInputFromZC& PBCorrelationInput::zc_input() const {
  // @@protoc_insertion_point(field_get:PBCorrelationInput.zc_input)
  return zc_input_ != NULL ? *zc_input_
                         : *::PBCorrelationInputFromZC::internal_default_instance();
}
inline ::PBCorrelationInputFromZC* PBCorrelationInput::mutable_zc_input() {
  set_has_zc_input();
  if (zc_input_ == NULL) {
    zc_input_ = new ::PBCorrelationInputFromZC;
  }
  // @@protoc_insertion_point(field_mutable:PBCorrelationInput.zc_input)
  return zc_input_;
}
inline ::PBCorrelationInputFromZC* PBCorrelationInput::release_zc_input() {
  // @@protoc_insertion_point(field_release:PBCorrelationInput.zc_input)
  clear_has_zc_input();
  ::PBCorrelationInputFromZC* temp = zc_input_;
  zc_input_ = NULL;
  return temp;
}
inline void PBCorrelationInput::set_allocated_zc_input(::PBCorrelationInputFromZC* zc_input) {
  delete zc_input_;
  zc_input_ = zc_input;
  if (zc_input) {
    set_has_zc_input();
  } else {
    clear_has_zc_input();
  }
  // @@protoc_insertion_point(field_set_allocated:PBCorrelationInput.zc_input)
}

// -------------------------------------------------------------------

// PBCorrelation

// optional string guid = 1;
inline bool PBCorrelation::has_guid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PBCorrelation::set_has_guid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PBCorrelation::clear_has_guid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PBCorrelation::clear_guid() {
  guid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_guid();
}
inline const ::std::string& PBCorrelation::guid() const {
  // @@protoc_insertion_point(field_get:PBCorrelation.guid)
  return guid_.GetNoArena();
}
inline void PBCorrelation::set_guid(const ::std::string& value) {
  set_has_guid();
  guid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:PBCorrelation.guid)
}
#if LANG_CXX11
inline void PBCorrelation::set_guid(::std::string&& value) {
  set_has_guid();
  guid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:PBCorrelation.guid)
}
#endif
inline void PBCorrelation::set_guid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_guid();
  guid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:PBCorrelation.guid)
}
inline void PBCorrelation::set_guid(const char* value, size_t size) {
  set_has_guid();
  guid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:PBCorrelation.guid)
}
inline ::std::string* PBCorrelation::mutable_guid() {
  set_has_guid();
  // @@protoc_insertion_point(field_mutable:PBCorrelation.guid)
  return guid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PBCorrelation::release_guid() {
  // @@protoc_insertion_point(field_release:PBCorrelation.guid)
  clear_has_guid();
  return guid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PBCorrelation::set_allocated_guid(::std::string* guid) {
  if (guid != NULL) {
    set_has_guid();
  } else {
    clear_has_guid();
  }
  guid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), guid);
  // @@protoc_insertion_point(field_set_allocated:PBCorrelation.guid)
}

// optional .LocalRelay relay = 2;
inline bool PBCorrelation::has_relay() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PBCorrelation::set_has_relay() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PBCorrelation::clear_has_relay() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PBCorrelation::clear_relay() {
  relay_ = 0;
  clear_has_relay();
}
inline ::LocalRelay PBCorrelation::relay() const {
  // @@protoc_insertion_point(field_get:PBCorrelation.relay)
  return static_cast< ::LocalRelay >(relay_);
}
inline void PBCorrelation::set_relay(::LocalRelay value) {
  assert(::LocalRelay_IsValid(value));
  set_has_relay();
  relay_ = value;
  // @@protoc_insertion_point(field_set:PBCorrelation.relay)
}

// optional .PBCorrelation.TriggerType trigger = 3;
inline bool PBCorrelation::has_trigger() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PBCorrelation::set_has_trigger() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PBCorrelation::clear_has_trigger() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PBCorrelation::clear_trigger() {
  trigger_ = 0;
  clear_has_trigger();
}
inline ::PBCorrelation_TriggerType PBCorrelation::trigger() const {
  // @@protoc_insertion_point(field_get:PBCorrelation.trigger)
  return static_cast< ::PBCorrelation_TriggerType >(trigger_);
}
inline void PBCorrelation::set_trigger(::PBCorrelation_TriggerType value) {
  assert(::PBCorrelation_TriggerType_IsValid(value));
  set_has_trigger();
  trigger_ = value;
  // @@protoc_insertion_point(field_set:PBCorrelation.trigger)
}

// repeated .PBCorrelationInput input = 4;
inline int PBCorrelation::input_size() const {
  return input_.size();
}
inline void PBCorrelation::clear_input() {
  input_.Clear();
}
inline const ::PBCorrelationInput& PBCorrelation::input(int index) const {
  // @@protoc_insertion_point(field_get:PBCorrelation.input)
  return input_.Get(index);
}
inline ::PBCorrelationInput* PBCorrelation::mutable_input(int index) {
  // @@protoc_insertion_point(field_mutable:PBCorrelation.input)
  return input_.Mutable(index);
}
inline ::PBCorrelationInput* PBCorrelation::add_input() {
  // @@protoc_insertion_point(field_add:PBCorrelation.input)
  return input_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::PBCorrelationInput >*
PBCorrelation::mutable_input() {
  // @@protoc_insertion_point(field_mutable_list:PBCorrelation.input)
  return &input_;
}
inline const ::google::protobuf::RepeatedPtrField< ::PBCorrelationInput >&
PBCorrelation::input() const {
  // @@protoc_insertion_point(field_list:PBCorrelation.input)
  return input_;
}

// -------------------------------------------------------------------

// PBZoneController

// optional string guid = 1;
inline bool PBZoneController::has_guid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PBZoneController::set_has_guid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PBZoneController::clear_has_guid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PBZoneController::clear_guid() {
  guid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_guid();
}
inline const ::std::string& PBZoneController::guid() const {
  // @@protoc_insertion_point(field_get:PBZoneController.guid)
  return guid_.GetNoArena();
}
inline void PBZoneController::set_guid(const ::std::string& value) {
  set_has_guid();
  guid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:PBZoneController.guid)
}
#if LANG_CXX11
inline void PBZoneController::set_guid(::std::string&& value) {
  set_has_guid();
  guid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:PBZoneController.guid)
}
#endif
inline void PBZoneController::set_guid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_guid();
  guid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:PBZoneController.guid)
}
inline void PBZoneController::set_guid(const char* value, size_t size) {
  set_has_guid();
  guid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:PBZoneController.guid)
}
inline ::std::string* PBZoneController::mutable_guid() {
  set_has_guid();
  // @@protoc_insertion_point(field_mutable:PBZoneController.guid)
  return guid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PBZoneController::release_guid() {
  // @@protoc_insertion_point(field_release:PBZoneController.guid)
  clear_has_guid();
  return guid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PBZoneController::set_allocated_guid(::std::string* guid) {
  if (guid != NULL) {
    set_has_guid();
  } else {
    clear_has_guid();
  }
  guid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), guid);
  // @@protoc_insertion_point(field_set_allocated:PBZoneController.guid)
}

// optional string title = 2;
inline bool PBZoneController::has_title() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PBZoneController::set_has_title() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PBZoneController::clear_has_title() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PBZoneController::clear_title() {
  title_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_title();
}
inline const ::std::string& PBZoneController::title() const {
  // @@protoc_insertion_point(field_get:PBZoneController.title)
  return title_.GetNoArena();
}
inline void PBZoneController::set_title(const ::std::string& value) {
  set_has_title();
  title_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:PBZoneController.title)
}
#if LANG_CXX11
inline void PBZoneController::set_title(::std::string&& value) {
  set_has_title();
  title_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:PBZoneController.title)
}
#endif
inline void PBZoneController::set_title(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_title();
  title_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:PBZoneController.title)
}
inline void PBZoneController::set_title(const char* value, size_t size) {
  set_has_title();
  title_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:PBZoneController.title)
}
inline ::std::string* PBZoneController::mutable_title() {
  set_has_title();
  // @@protoc_insertion_point(field_mutable:PBZoneController.title)
  return title_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PBZoneController::release_title() {
  // @@protoc_insertion_point(field_release:PBZoneController.title)
  clear_has_title();
  return title_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PBZoneController::set_allocated_title(::std::string* title) {
  if (title != NULL) {
    set_has_title();
  } else {
    clear_has_title();
  }
  title_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), title);
  // @@protoc_insertion_point(field_set_allocated:PBZoneController.title)
}

// optional string location = 3;
inline bool PBZoneController::has_location() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PBZoneController::set_has_location() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PBZoneController::clear_has_location() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PBZoneController::clear_location() {
  location_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_location();
}
inline const ::std::string& PBZoneController::location() const {
  // @@protoc_insertion_point(field_get:PBZoneController.location)
  return location_.GetNoArena();
}
inline void PBZoneController::set_location(const ::std::string& value) {
  set_has_location();
  location_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:PBZoneController.location)
}
#if LANG_CXX11
inline void PBZoneController::set_location(::std::string&& value) {
  set_has_location();
  location_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:PBZoneController.location)
}
#endif
inline void PBZoneController::set_location(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_location();
  location_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:PBZoneController.location)
}
inline void PBZoneController::set_location(const char* value, size_t size) {
  set_has_location();
  location_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:PBZoneController.location)
}
inline ::std::string* PBZoneController::mutable_location() {
  set_has_location();
  // @@protoc_insertion_point(field_mutable:PBZoneController.location)
  return location_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PBZoneController::release_location() {
  // @@protoc_insertion_point(field_release:PBZoneController.location)
  clear_has_location();
  return location_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PBZoneController::set_allocated_location(::std::string* location) {
  if (location != NULL) {
    set_has_location();
  } else {
    clear_has_location();
  }
  location_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), location);
  // @@protoc_insertion_point(field_set_allocated:PBZoneController.location)
}

// optional string mac_address = 4;
inline bool PBZoneController::has_mac_address() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void PBZoneController::set_has_mac_address() {
  _has_bits_[0] |= 0x00000008u;
}
inline void PBZoneController::clear_has_mac_address() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void PBZoneController::clear_mac_address() {
  mac_address_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_mac_address();
}
inline const ::std::string& PBZoneController::mac_address() const {
  // @@protoc_insertion_point(field_get:PBZoneController.mac_address)
  return mac_address_.GetNoArena();
}
inline void PBZoneController::set_mac_address(const ::std::string& value) {
  set_has_mac_address();
  mac_address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:PBZoneController.mac_address)
}
#if LANG_CXX11
inline void PBZoneController::set_mac_address(::std::string&& value) {
  set_has_mac_address();
  mac_address_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:PBZoneController.mac_address)
}
#endif
inline void PBZoneController::set_mac_address(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_mac_address();
  mac_address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:PBZoneController.mac_address)
}
inline void PBZoneController::set_mac_address(const char* value, size_t size) {
  set_has_mac_address();
  mac_address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:PBZoneController.mac_address)
}
inline ::std::string* PBZoneController::mutable_mac_address() {
  set_has_mac_address();
  // @@protoc_insertion_point(field_mutable:PBZoneController.mac_address)
  return mac_address_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PBZoneController::release_mac_address() {
  // @@protoc_insertion_point(field_release:PBZoneController.mac_address)
  clear_has_mac_address();
  return mac_address_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PBZoneController::set_allocated_mac_address(::std::string* mac_address) {
  if (mac_address != NULL) {
    set_has_mac_address();
  } else {
    clear_has_mac_address();
  }
  mac_address_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), mac_address);
  // @@protoc_insertion_point(field_set_allocated:PBZoneController.mac_address)
}

// optional string pan_id = 5;
inline bool PBZoneController::has_pan_id() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void PBZoneController::set_has_pan_id() {
  _has_bits_[0] |= 0x00000010u;
}
inline void PBZoneController::clear_has_pan_id() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void PBZoneController::clear_pan_id() {
  pan_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_pan_id();
}
inline const ::std::string& PBZoneController::pan_id() const {
  // @@protoc_insertion_point(field_get:PBZoneController.pan_id)
  return pan_id_.GetNoArena();
}
inline void PBZoneController::set_pan_id(const ::std::string& value) {
  set_has_pan_id();
  pan_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:PBZoneController.pan_id)
}
#if LANG_CXX11
inline void PBZoneController::set_pan_id(::std::string&& value) {
  set_has_pan_id();
  pan_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:PBZoneController.pan_id)
}
#endif
inline void PBZoneController::set_pan_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_pan_id();
  pan_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:PBZoneController.pan_id)
}
inline void PBZoneController::set_pan_id(const char* value, size_t size) {
  set_has_pan_id();
  pan_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:PBZoneController.pan_id)
}
inline ::std::string* PBZoneController::mutable_pan_id() {
  set_has_pan_id();
  // @@protoc_insertion_point(field_mutable:PBZoneController.pan_id)
  return pan_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PBZoneController::release_pan_id() {
  // @@protoc_insertion_point(field_release:PBZoneController.pan_id)
  clear_has_pan_id();
  return pan_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PBZoneController::set_allocated_pan_id(::std::string* pan_id) {
  if (pan_id != NULL) {
    set_has_pan_id();
  } else {
    clear_has_pan_id();
  }
  pan_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), pan_id);
  // @@protoc_insertion_point(field_set_allocated:PBZoneController.pan_id)
}

// optional uint32 channel = 6;
inline bool PBZoneController::has_channel() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void PBZoneController::set_has_channel() {
  _has_bits_[0] |= 0x00000040u;
}
inline void PBZoneController::clear_has_channel() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void PBZoneController::clear_channel() {
  channel_ = 0u;
  clear_has_channel();
}
inline ::google::protobuf::uint32 PBZoneController::channel() const {
  // @@protoc_insertion_point(field_get:PBZoneController.channel)
  return channel_;
}
inline void PBZoneController::set_channel(::google::protobuf::uint32 value) {
  set_has_channel();
  channel_ = value;
  // @@protoc_insertion_point(field_set:PBZoneController.channel)
}

// optional .PBGraphics graphics = 7;
inline bool PBZoneController::has_graphics() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void PBZoneController::set_has_graphics() {
  _has_bits_[0] |= 0x00000020u;
}
inline void PBZoneController::clear_has_graphics() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void PBZoneController::clear_graphics() {
  if (graphics_ != NULL) graphics_->::PBGraphics::Clear();
  clear_has_graphics();
}
inline const ::PBGraphics& PBZoneController::graphics() const {
  // @@protoc_insertion_point(field_get:PBZoneController.graphics)
  return graphics_ != NULL ? *graphics_
                         : *::PBGraphics::internal_default_instance();
}
inline ::PBGraphics* PBZoneController::mutable_graphics() {
  set_has_graphics();
  if (graphics_ == NULL) {
    graphics_ = new ::PBGraphics;
  }
  // @@protoc_insertion_point(field_mutable:PBZoneController.graphics)
  return graphics_;
}
inline ::PBGraphics* PBZoneController::release_graphics() {
  // @@protoc_insertion_point(field_release:PBZoneController.graphics)
  clear_has_graphics();
  ::PBGraphics* temp = graphics_;
  graphics_ = NULL;
  return temp;
}
inline void PBZoneController::set_allocated_graphics(::PBGraphics* graphics) {
  delete graphics_;
  graphics_ = graphics;
  if (graphics) {
    set_has_graphics();
  } else {
    clear_has_graphics();
  }
  // @@protoc_insertion_point(field_set_allocated:PBZoneController.graphics)
}

// repeated .PBWio wio = 8;
inline int PBZoneController::wio_size() const {
  return wio_.size();
}
inline void PBZoneController::clear_wio() {
  wio_.Clear();
}
inline const ::PBWio& PBZoneController::wio(int index) const {
  // @@protoc_insertion_point(field_get:PBZoneController.wio)
  return wio_.Get(index);
}
inline ::PBWio* PBZoneController::mutable_wio(int index) {
  // @@protoc_insertion_point(field_mutable:PBZoneController.wio)
  return wio_.Mutable(index);
}
inline ::PBWio* PBZoneController::add_wio() {
  // @@protoc_insertion_point(field_add:PBZoneController.wio)
  return wio_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::PBWio >*
PBZoneController::mutable_wio() {
  // @@protoc_insertion_point(field_mutable_list:PBZoneController.wio)
  return &wio_;
}
inline const ::google::protobuf::RepeatedPtrField< ::PBWio >&
PBZoneController::wio() const {
  // @@protoc_insertion_point(field_list:PBZoneController.wio)
  return wio_;
}

// repeated .PBCorrelation correlation = 9;
inline int PBZoneController::correlation_size() const {
  return correlation_.size();
}
inline void PBZoneController::clear_correlation() {
  correlation_.Clear();
}
inline const ::PBCorrelation& PBZoneController::correlation(int index) const {
  // @@protoc_insertion_point(field_get:PBZoneController.correlation)
  return correlation_.Get(index);
}
inline ::PBCorrelation* PBZoneController::mutable_correlation(int index) {
  // @@protoc_insertion_point(field_mutable:PBZoneController.correlation)
  return correlation_.Mutable(index);
}
inline ::PBCorrelation* PBZoneController::add_correlation() {
  // @@protoc_insertion_point(field_add:PBZoneController.correlation)
  return correlation_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::PBCorrelation >*
PBZoneController::mutable_correlation() {
  // @@protoc_insertion_point(field_mutable_list:PBZoneController.correlation)
  return &correlation_;
}
inline const ::google::protobuf::RepeatedPtrField< ::PBCorrelation >&
PBZoneController::correlation() const {
  // @@protoc_insertion_point(field_list:PBZoneController.correlation)
  return correlation_;
}

// -------------------------------------------------------------------

// PBFloor

// optional string guid = 1;
inline bool PBFloor::has_guid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PBFloor::set_has_guid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PBFloor::clear_has_guid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PBFloor::clear_guid() {
  guid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_guid();
}
inline const ::std::string& PBFloor::guid() const {
  // @@protoc_insertion_point(field_get:PBFloor.guid)
  return guid_.GetNoArena();
}
inline void PBFloor::set_guid(const ::std::string& value) {
  set_has_guid();
  guid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:PBFloor.guid)
}
#if LANG_CXX11
inline void PBFloor::set_guid(::std::string&& value) {
  set_has_guid();
  guid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:PBFloor.guid)
}
#endif
inline void PBFloor::set_guid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_guid();
  guid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:PBFloor.guid)
}
inline void PBFloor::set_guid(const char* value, size_t size) {
  set_has_guid();
  guid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:PBFloor.guid)
}
inline ::std::string* PBFloor::mutable_guid() {
  set_has_guid();
  // @@protoc_insertion_point(field_mutable:PBFloor.guid)
  return guid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PBFloor::release_guid() {
  // @@protoc_insertion_point(field_release:PBFloor.guid)
  clear_has_guid();
  return guid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PBFloor::set_allocated_guid(::std::string* guid) {
  if (guid != NULL) {
    set_has_guid();
  } else {
    clear_has_guid();
  }
  guid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), guid);
  // @@protoc_insertion_point(field_set_allocated:PBFloor.guid)
}

// optional string title = 2;
inline bool PBFloor::has_title() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PBFloor::set_has_title() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PBFloor::clear_has_title() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PBFloor::clear_title() {
  title_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_title();
}
inline const ::std::string& PBFloor::title() const {
  // @@protoc_insertion_point(field_get:PBFloor.title)
  return title_.GetNoArena();
}
inline void PBFloor::set_title(const ::std::string& value) {
  set_has_title();
  title_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:PBFloor.title)
}
#if LANG_CXX11
inline void PBFloor::set_title(::std::string&& value) {
  set_has_title();
  title_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:PBFloor.title)
}
#endif
inline void PBFloor::set_title(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_title();
  title_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:PBFloor.title)
}
inline void PBFloor::set_title(const char* value, size_t size) {
  set_has_title();
  title_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:PBFloor.title)
}
inline ::std::string* PBFloor::mutable_title() {
  set_has_title();
  // @@protoc_insertion_point(field_mutable:PBFloor.title)
  return title_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PBFloor::release_title() {
  // @@protoc_insertion_point(field_release:PBFloor.title)
  clear_has_title();
  return title_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PBFloor::set_allocated_title(::std::string* title) {
  if (title != NULL) {
    set_has_title();
  } else {
    clear_has_title();
  }
  title_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), title);
  // @@protoc_insertion_point(field_set_allocated:PBFloor.title)
}

// optional .PBFloor.UnitOfMeasure unit_of_measure = 3;
inline bool PBFloor::has_unit_of_measure() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void PBFloor::set_has_unit_of_measure() {
  _has_bits_[0] |= 0x00000008u;
}
inline void PBFloor::clear_has_unit_of_measure() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void PBFloor::clear_unit_of_measure() {
  unit_of_measure_ = 0;
  clear_has_unit_of_measure();
}
inline ::PBFloor_UnitOfMeasure PBFloor::unit_of_measure() const {
  // @@protoc_insertion_point(field_get:PBFloor.unit_of_measure)
  return static_cast< ::PBFloor_UnitOfMeasure >(unit_of_measure_);
}
inline void PBFloor::set_unit_of_measure(::PBFloor_UnitOfMeasure value) {
  assert(::PBFloor_UnitOfMeasure_IsValid(value));
  set_has_unit_of_measure();
  unit_of_measure_ = value;
  // @@protoc_insertion_point(field_set:PBFloor.unit_of_measure)
}

// optional .PBGraphics graphics = 4;
inline bool PBFloor::has_graphics() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PBFloor::set_has_graphics() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PBFloor::clear_has_graphics() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PBFloor::clear_graphics() {
  if (graphics_ != NULL) graphics_->::PBGraphics::Clear();
  clear_has_graphics();
}
inline const ::PBGraphics& PBFloor::graphics() const {
  // @@protoc_insertion_point(field_get:PBFloor.graphics)
  return graphics_ != NULL ? *graphics_
                         : *::PBGraphics::internal_default_instance();
}
inline ::PBGraphics* PBFloor::mutable_graphics() {
  set_has_graphics();
  if (graphics_ == NULL) {
    graphics_ = new ::PBGraphics;
  }
  // @@protoc_insertion_point(field_mutable:PBFloor.graphics)
  return graphics_;
}
inline ::PBGraphics* PBFloor::release_graphics() {
  // @@protoc_insertion_point(field_release:PBFloor.graphics)
  clear_has_graphics();
  ::PBGraphics* temp = graphics_;
  graphics_ = NULL;
  return temp;
}
inline void PBFloor::set_allocated_graphics(::PBGraphics* graphics) {
  delete graphics_;
  graphics_ = graphics;
  if (graphics) {
    set_has_graphics();
  } else {
    clear_has_graphics();
  }
  // @@protoc_insertion_point(field_set_allocated:PBFloor.graphics)
}

// repeated .PBZoneController zc = 5;
inline int PBFloor::zc_size() const {
  return zc_.size();
}
inline void PBFloor::clear_zc() {
  zc_.Clear();
}
inline const ::PBZoneController& PBFloor::zc(int index) const {
  // @@protoc_insertion_point(field_get:PBFloor.zc)
  return zc_.Get(index);
}
inline ::PBZoneController* PBFloor::mutable_zc(int index) {
  // @@protoc_insertion_point(field_mutable:PBFloor.zc)
  return zc_.Mutable(index);
}
inline ::PBZoneController* PBFloor::add_zc() {
  // @@protoc_insertion_point(field_add:PBFloor.zc)
  return zc_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::PBZoneController >*
PBFloor::mutable_zc() {
  // @@protoc_insertion_point(field_mutable_list:PBFloor.zc)
  return &zc_;
}
inline const ::google::protobuf::RepeatedPtrField< ::PBZoneController >&
PBFloor::zc() const {
  // @@protoc_insertion_point(field_list:PBFloor.zc)
  return zc_;
}

// -------------------------------------------------------------------

// PBJob

// optional string guid = 1;
inline bool PBJob::has_guid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PBJob::set_has_guid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PBJob::clear_has_guid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PBJob::clear_guid() {
  guid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_guid();
}
inline const ::std::string& PBJob::guid() const {
  // @@protoc_insertion_point(field_get:PBJob.guid)
  return guid_.GetNoArena();
}
inline void PBJob::set_guid(const ::std::string& value) {
  set_has_guid();
  guid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:PBJob.guid)
}
#if LANG_CXX11
inline void PBJob::set_guid(::std::string&& value) {
  set_has_guid();
  guid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:PBJob.guid)
}
#endif
inline void PBJob::set_guid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_guid();
  guid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:PBJob.guid)
}
inline void PBJob::set_guid(const char* value, size_t size) {
  set_has_guid();
  guid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:PBJob.guid)
}
inline ::std::string* PBJob::mutable_guid() {
  set_has_guid();
  // @@protoc_insertion_point(field_mutable:PBJob.guid)
  return guid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PBJob::release_guid() {
  // @@protoc_insertion_point(field_release:PBJob.guid)
  clear_has_guid();
  return guid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PBJob::set_allocated_guid(::std::string* guid) {
  if (guid != NULL) {
    set_has_guid();
  } else {
    clear_has_guid();
  }
  guid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), guid);
  // @@protoc_insertion_point(field_set_allocated:PBJob.guid)
}

// optional .PBVersion job_version = 2;
inline bool PBJob::has_job_version() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void PBJob::set_has_job_version() {
  _has_bits_[0] |= 0x00000020u;
}
inline void PBJob::clear_has_job_version() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void PBJob::clear_job_version() {
  if (job_version_ != NULL) job_version_->::PBVersion::Clear();
  clear_has_job_version();
}
inline const ::PBVersion& PBJob::job_version() const {
  // @@protoc_insertion_point(field_get:PBJob.job_version)
  return job_version_ != NULL ? *job_version_
                         : *::PBVersion::internal_default_instance();
}
inline ::PBVersion* PBJob::mutable_job_version() {
  set_has_job_version();
  if (job_version_ == NULL) {
    job_version_ = new ::PBVersion;
  }
  // @@protoc_insertion_point(field_mutable:PBJob.job_version)
  return job_version_;
}
inline ::PBVersion* PBJob::release_job_version() {
  // @@protoc_insertion_point(field_release:PBJob.job_version)
  clear_has_job_version();
  ::PBVersion* temp = job_version_;
  job_version_ = NULL;
  return temp;
}
inline void PBJob::set_allocated_job_version(::PBVersion* job_version) {
  delete job_version_;
  job_version_ = job_version;
  if (job_version) {
    set_has_job_version();
  } else {
    clear_has_job_version();
  }
  // @@protoc_insertion_point(field_set_allocated:PBJob.job_version)
}

// optional .PBVersion configurator_version = 3;
inline bool PBJob::has_configurator_version() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void PBJob::set_has_configurator_version() {
  _has_bits_[0] |= 0x00000040u;
}
inline void PBJob::clear_has_configurator_version() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void PBJob::clear_configurator_version() {
  if (configurator_version_ != NULL) configurator_version_->::PBVersion::Clear();
  clear_has_configurator_version();
}
inline const ::PBVersion& PBJob::configurator_version() const {
  // @@protoc_insertion_point(field_get:PBJob.configurator_version)
  return configurator_version_ != NULL ? *configurator_version_
                         : *::PBVersion::internal_default_instance();
}
inline ::PBVersion* PBJob::mutable_configurator_version() {
  set_has_configurator_version();
  if (configurator_version_ == NULL) {
    configurator_version_ = new ::PBVersion;
  }
  // @@protoc_insertion_point(field_mutable:PBJob.configurator_version)
  return configurator_version_;
}
inline ::PBVersion* PBJob::release_configurator_version() {
  // @@protoc_insertion_point(field_release:PBJob.configurator_version)
  clear_has_configurator_version();
  ::PBVersion* temp = configurator_version_;
  configurator_version_ = NULL;
  return temp;
}
inline void PBJob::set_allocated_configurator_version(::PBVersion* configurator_version) {
  delete configurator_version_;
  configurator_version_ = configurator_version;
  if (configurator_version) {
    set_has_configurator_version();
  } else {
    clear_has_configurator_version();
  }
  // @@protoc_insertion_point(field_set_allocated:PBJob.configurator_version)
}

// optional string creation_date_utc = 4;
inline bool PBJob::has_creation_date_utc() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PBJob::set_has_creation_date_utc() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PBJob::clear_has_creation_date_utc() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PBJob::clear_creation_date_utc() {
  creation_date_utc_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_creation_date_utc();
}
inline const ::std::string& PBJob::creation_date_utc() const {
  // @@protoc_insertion_point(field_get:PBJob.creation_date_utc)
  return creation_date_utc_.GetNoArena();
}
inline void PBJob::set_creation_date_utc(const ::std::string& value) {
  set_has_creation_date_utc();
  creation_date_utc_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:PBJob.creation_date_utc)
}
#if LANG_CXX11
inline void PBJob::set_creation_date_utc(::std::string&& value) {
  set_has_creation_date_utc();
  creation_date_utc_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:PBJob.creation_date_utc)
}
#endif
inline void PBJob::set_creation_date_utc(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_creation_date_utc();
  creation_date_utc_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:PBJob.creation_date_utc)
}
inline void PBJob::set_creation_date_utc(const char* value, size_t size) {
  set_has_creation_date_utc();
  creation_date_utc_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:PBJob.creation_date_utc)
}
inline ::std::string* PBJob::mutable_creation_date_utc() {
  set_has_creation_date_utc();
  // @@protoc_insertion_point(field_mutable:PBJob.creation_date_utc)
  return creation_date_utc_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PBJob::release_creation_date_utc() {
  // @@protoc_insertion_point(field_release:PBJob.creation_date_utc)
  clear_has_creation_date_utc();
  return creation_date_utc_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PBJob::set_allocated_creation_date_utc(::std::string* creation_date_utc) {
  if (creation_date_utc != NULL) {
    set_has_creation_date_utc();
  } else {
    clear_has_creation_date_utc();
  }
  creation_date_utc_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), creation_date_utc);
  // @@protoc_insertion_point(field_set_allocated:PBJob.creation_date_utc)
}

// optional string creation_time_utc = 5;
inline bool PBJob::has_creation_time_utc() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PBJob::set_has_creation_time_utc() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PBJob::clear_has_creation_time_utc() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PBJob::clear_creation_time_utc() {
  creation_time_utc_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_creation_time_utc();
}
inline const ::std::string& PBJob::creation_time_utc() const {
  // @@protoc_insertion_point(field_get:PBJob.creation_time_utc)
  return creation_time_utc_.GetNoArena();
}
inline void PBJob::set_creation_time_utc(const ::std::string& value) {
  set_has_creation_time_utc();
  creation_time_utc_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:PBJob.creation_time_utc)
}
#if LANG_CXX11
inline void PBJob::set_creation_time_utc(::std::string&& value) {
  set_has_creation_time_utc();
  creation_time_utc_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:PBJob.creation_time_utc)
}
#endif
inline void PBJob::set_creation_time_utc(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_creation_time_utc();
  creation_time_utc_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:PBJob.creation_time_utc)
}
inline void PBJob::set_creation_time_utc(const char* value, size_t size) {
  set_has_creation_time_utc();
  creation_time_utc_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:PBJob.creation_time_utc)
}
inline ::std::string* PBJob::mutable_creation_time_utc() {
  set_has_creation_time_utc();
  // @@protoc_insertion_point(field_mutable:PBJob.creation_time_utc)
  return creation_time_utc_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PBJob::release_creation_time_utc() {
  // @@protoc_insertion_point(field_release:PBJob.creation_time_utc)
  clear_has_creation_time_utc();
  return creation_time_utc_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PBJob::set_allocated_creation_time_utc(::std::string* creation_time_utc) {
  if (creation_time_utc != NULL) {
    set_has_creation_time_utc();
  } else {
    clear_has_creation_time_utc();
  }
  creation_time_utc_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), creation_time_utc);
  // @@protoc_insertion_point(field_set_allocated:PBJob.creation_time_utc)
}

// optional string title = 6;
inline bool PBJob::has_title() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void PBJob::set_has_title() {
  _has_bits_[0] |= 0x00000008u;
}
inline void PBJob::clear_has_title() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void PBJob::clear_title() {
  title_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_title();
}
inline const ::std::string& PBJob::title() const {
  // @@protoc_insertion_point(field_get:PBJob.title)
  return title_.GetNoArena();
}
inline void PBJob::set_title(const ::std::string& value) {
  set_has_title();
  title_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:PBJob.title)
}
#if LANG_CXX11
inline void PBJob::set_title(::std::string&& value) {
  set_has_title();
  title_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:PBJob.title)
}
#endif
inline void PBJob::set_title(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_title();
  title_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:PBJob.title)
}
inline void PBJob::set_title(const char* value, size_t size) {
  set_has_title();
  title_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:PBJob.title)
}
inline ::std::string* PBJob::mutable_title() {
  set_has_title();
  // @@protoc_insertion_point(field_mutable:PBJob.title)
  return title_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PBJob::release_title() {
  // @@protoc_insertion_point(field_release:PBJob.title)
  clear_has_title();
  return title_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PBJob::set_allocated_title(::std::string* title) {
  if (title != NULL) {
    set_has_title();
  } else {
    clear_has_title();
  }
  title_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), title);
  // @@protoc_insertion_point(field_set_allocated:PBJob.title)
}

// optional string password = 7;
inline bool PBJob::has_password() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void PBJob::set_has_password() {
  _has_bits_[0] |= 0x00000010u;
}
inline void PBJob::clear_has_password() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void PBJob::clear_password() {
  password_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_password();
}
inline const ::std::string& PBJob::password() const {
  // @@protoc_insertion_point(field_get:PBJob.password)
  return password_.GetNoArena();
}
inline void PBJob::set_password(const ::std::string& value) {
  set_has_password();
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:PBJob.password)
}
#if LANG_CXX11
inline void PBJob::set_password(::std::string&& value) {
  set_has_password();
  password_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:PBJob.password)
}
#endif
inline void PBJob::set_password(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_password();
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:PBJob.password)
}
inline void PBJob::set_password(const char* value, size_t size) {
  set_has_password();
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:PBJob.password)
}
inline ::std::string* PBJob::mutable_password() {
  set_has_password();
  // @@protoc_insertion_point(field_mutable:PBJob.password)
  return password_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PBJob::release_password() {
  // @@protoc_insertion_point(field_release:PBJob.password)
  clear_has_password();
  return password_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PBJob::set_allocated_password(::std::string* password) {
  if (password != NULL) {
    set_has_password();
  } else {
    clear_has_password();
  }
  password_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), password);
  // @@protoc_insertion_point(field_set_allocated:PBJob.password)
}

// optional .StandardType standard = 8;
inline bool PBJob::has_standard() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void PBJob::set_has_standard() {
  _has_bits_[0] |= 0x00000080u;
}
inline void PBJob::clear_has_standard() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void PBJob::clear_standard() {
  standard_ = 0;
  clear_has_standard();
}
inline ::StandardType PBJob::standard() const {
  // @@protoc_insertion_point(field_get:PBJob.standard)
  return static_cast< ::StandardType >(standard_);
}
inline void PBJob::set_standard(::StandardType value) {
  assert(::StandardType_IsValid(value));
  set_has_standard();
  standard_ = value;
  // @@protoc_insertion_point(field_set:PBJob.standard)
}

// repeated .PBFloor floor = 9;
inline int PBJob::floor_size() const {
  return floor_.size();
}
inline void PBJob::clear_floor() {
  floor_.Clear();
}
inline const ::PBFloor& PBJob::floor(int index) const {
  // @@protoc_insertion_point(field_get:PBJob.floor)
  return floor_.Get(index);
}
inline ::PBFloor* PBJob::mutable_floor(int index) {
  // @@protoc_insertion_point(field_mutable:PBJob.floor)
  return floor_.Mutable(index);
}
inline ::PBFloor* PBJob::add_floor() {
  // @@protoc_insertion_point(field_add:PBJob.floor)
  return floor_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::PBFloor >*
PBJob::mutable_floor() {
  // @@protoc_insertion_point(field_mutable_list:PBJob.floor)
  return &floor_;
}
inline const ::google::protobuf::RepeatedPtrField< ::PBFloor >&
PBJob::floor() const {
  // @@protoc_insertion_point(field_list:PBJob.floor)
  return floor_;
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


#ifndef SWIG
namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::DeviceModel_Category> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::DeviceModel_Category>() {
  return ::DeviceModel_Category_descriptor();
}
template <> struct is_proto_enum< ::DeviceModel_Type> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::DeviceModel_Type>() {
  return ::DeviceModel_Type_descriptor();
}
template <> struct is_proto_enum< ::PBCorrelation_TriggerType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::PBCorrelation_TriggerType>() {
  return ::PBCorrelation_TriggerType_descriptor();
}
template <> struct is_proto_enum< ::PBFloor_UnitOfMeasure> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::PBFloor_UnitOfMeasure>() {
  return ::PBFloor_UnitOfMeasure_descriptor();
}

}  // namespace protobuf
}  // namespace google
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_fl_5fjob_2eproto__INCLUDED
