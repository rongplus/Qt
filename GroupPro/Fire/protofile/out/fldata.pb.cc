// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: fldata.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "fldata.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
class Pro_PointDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<Pro_Point> {
} _Pro_Point_default_instance_;
class PRO_TIMERDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<PRO_TIMER> {
} _PRO_TIMER_default_instance_;
class PRO_DayLightSavingDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<PRO_DayLightSaving> {
} _PRO_DayLightSaving_default_instance_;
class Pro_WIODefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<Pro_WIO> {
} _Pro_WIO_default_instance_;
class Pro_ZCIODefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<Pro_ZCIO> {
} _Pro_ZCIO_default_instance_;
class Pro_ZCDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<Pro_ZC> {
} _Pro_ZC_default_instance_;
class Pro_FloorDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<Pro_Floor> {
} _Pro_Floor_default_instance_;
class Pro_JobDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<Pro_Job> {
} _Pro_Job_default_instance_;

namespace protobuf_fldata_2eproto {


namespace {

::google::protobuf::Metadata file_level_metadata[8];

}  // namespace

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTableField
    const TableStruct::entries[] = {
  {0, 0, 0, ::google::protobuf::internal::kInvalidMask, 0, 0},
};

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::AuxillaryParseTableField
    const TableStruct::aux[] = {
  ::google::protobuf::internal::AuxillaryParseTableField(),
};
PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTable const
    TableStruct::schema[] = {
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
};

const ::google::protobuf::uint32 TableStruct::offsets[] = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Pro_Point, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Pro_Point, x_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Pro_Point, y_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PRO_TIMER, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PRO_TIMER, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PRO_TIMER, duration_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PRO_DayLightSaving, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PRO_DayLightSaving, month_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PRO_DayLightSaving, week_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PRO_DayLightSaving, dayofweek_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PRO_DayLightSaving, hour_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PRO_DayLightSaving, min_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Pro_WIO, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Pro_WIO, channel_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Pro_WIO, guid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Pro_WIO, location_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Pro_WIO, macaddr_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Pro_WIO, model_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Pro_WIO, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Pro_WIO, position_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Pro_WIO, signaling_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Pro_WIO, type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Pro_WIO, scale_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Pro_WIO, wiotype_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Pro_WIO, corrs_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Pro_WIO, value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Pro_WIO, comment_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Pro_ZCIO, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Pro_ZCIO, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Pro_ZCIO, type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Pro_ZCIO, value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Pro_ZCIO, corrs_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Pro_ZCIO, cktprocesstype_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Pro_ZCIO, tag_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Pro_ZCIO, comment_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Pro_ZC, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Pro_ZC, channel_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Pro_ZC, guid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Pro_ZC, location_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Pro_ZC, macaddr_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Pro_ZC, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Pro_ZC, panid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Pro_ZC, position_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Pro_ZC, type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Pro_ZC, scale_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Pro_ZC, wio_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Pro_ZC, input_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Pro_ZC, relay_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Pro_ZC, local_troubles_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Pro_ZC, remote_trouble_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Pro_ZC, stats_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Pro_ZC, range_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Pro_ZC, passcode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Pro_ZC, timer_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Pro_ZC, scu_feature_flags_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Pro_ZC, comment_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Pro_Floor, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Pro_Floor, comment_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Pro_Floor, floorgraph_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Pro_Floor, guid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Pro_Floor, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Pro_Floor, position_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Pro_Floor, type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Pro_Floor, scale_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Pro_Floor, unit_of_measure_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Pro_Floor, zc_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Pro_Floor, plotting_scale_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Pro_Job, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Pro_Job, comment_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Pro_Job, guid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Pro_Job, jobpath_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Pro_Job, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Pro_Job, standard_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Pro_Job, type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Pro_Job, floor_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Pro_Job, daylight_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Pro_Job, dailyadjust_),
};

static const ::google::protobuf::internal::MigrationSchema schemas[] = {
  { 0, -1, sizeof(Pro_Point)},
  { 7, -1, sizeof(PRO_TIMER)},
  { 14, -1, sizeof(PRO_DayLightSaving)},
  { 24, -1, sizeof(Pro_WIO)},
  { 43, -1, sizeof(Pro_ZCIO)},
  { 55, -1, sizeof(Pro_ZC)},
  { 80, -1, sizeof(Pro_Floor)},
  { 95, -1, sizeof(Pro_Job)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&_Pro_Point_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_PRO_TIMER_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_PRO_DayLightSaving_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_Pro_WIO_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_Pro_ZCIO_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_Pro_ZC_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_Pro_Floor_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_Pro_Job_default_instance_),
};

namespace {

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "fldata.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 8);
}

}  // namespace

void TableStruct::Shutdown() {
  _Pro_Point_default_instance_.Shutdown();
  delete file_level_metadata[0].reflection;
  _PRO_TIMER_default_instance_.Shutdown();
  delete file_level_metadata[1].reflection;
  _PRO_DayLightSaving_default_instance_.Shutdown();
  delete file_level_metadata[2].reflection;
  _Pro_WIO_default_instance_.Shutdown();
  delete file_level_metadata[3].reflection;
  _Pro_ZCIO_default_instance_.Shutdown();
  delete file_level_metadata[4].reflection;
  _Pro_ZC_default_instance_.Shutdown();
  delete file_level_metadata[5].reflection;
  _Pro_Floor_default_instance_.Shutdown();
  delete file_level_metadata[6].reflection;
  _Pro_Job_default_instance_.Shutdown();
  delete file_level_metadata[7].reflection;
}

void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  _Pro_Point_default_instance_.DefaultConstruct();
  _PRO_TIMER_default_instance_.DefaultConstruct();
  _PRO_DayLightSaving_default_instance_.DefaultConstruct();
  _Pro_WIO_default_instance_.DefaultConstruct();
  _Pro_ZCIO_default_instance_.DefaultConstruct();
  _Pro_ZC_default_instance_.DefaultConstruct();
  _Pro_Floor_default_instance_.DefaultConstruct();
  _Pro_Job_default_instance_.DefaultConstruct();
  _Pro_WIO_default_instance_.get_mutable()->position_ = const_cast< ::Pro_Point*>(
      ::Pro_Point::internal_default_instance());
  _Pro_WIO_default_instance_.get_mutable()->scale_ = const_cast< ::Pro_Point*>(
      ::Pro_Point::internal_default_instance());
  _Pro_ZC_default_instance_.get_mutable()->position_ = const_cast< ::Pro_Point*>(
      ::Pro_Point::internal_default_instance());
  _Pro_ZC_default_instance_.get_mutable()->scale_ = const_cast< ::Pro_Point*>(
      ::Pro_Point::internal_default_instance());
  _Pro_Floor_default_instance_.get_mutable()->position_ = const_cast< ::Pro_Point*>(
      ::Pro_Point::internal_default_instance());
  _Pro_Floor_default_instance_.get_mutable()->scale_ = const_cast< ::Pro_Point*>(
      ::Pro_Point::internal_default_instance());
}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] = {
      "\n\014fldata.proto\"!\n\tPro_Point\022\t\n\001x\030\001 \001(\002\022\t"
      "\n\001y\030\002 \001(\002\")\n\tPRO_TIMER\022\n\n\002ID\030\001 \001(\005\022\020\n\010Du"
      "ration\030\002 \001(\005\"_\n\022PRO_DayLightSaving\022\r\n\005mo"
      "nth\030\001 \001(\005\022\014\n\004week\030\002 \001(\005\022\021\n\tdayOfWeek\030\003 \001"
      "(\005\022\014\n\004hour\030\004 \001(\005\022\013\n\003min\030\005 \001(\005\"\202\002\n\007Pro_WI"
      "O\022\017\n\007Channel\030\001 \001(\t\022\014\n\004GUID\030\002 \001(\t\022\020\n\010Loca"
      "tion\030\003 \001(\t\022\017\n\007MACAddr\030\004 \001(\t\022\r\n\005Model\030\005 \001"
      "(\t\022\014\n\004Name\030\006 \001(\t\022\034\n\010Position\030\007 \001(\0132\n.Pro"
      "_Point\022\021\n\tSignaling\030\010 \001(\t\022\014\n\004Type\030\t \001(\t\022"
      "\031\n\005Scale\030\n \001(\0132\n.Pro_Point\022\017\n\007WIOType\030\013 "
      "\001(\t\022\r\n\005Corrs\030\014 \001(\t\022\r\n\005Value\030\r \001(\t\022\017\n\007Com"
      "ment\030\016 \001(\t\"z\n\010Pro_ZCIO\022\014\n\004Name\030\001 \001(\t\022\014\n\004"
      "Type\030\002 \001(\t\022\r\n\005Value\030\003 \001(\t\022\r\n\005Corrs\030\004 \001(\t"
      "\022\026\n\016CktProcessType\030\005 \001(\t\022\013\n\003Tag\030\006 \001(\t\022\017\n"
      "\007Comment\030\007 \001(\t\"\301\003\n\006Pro_ZC\022\017\n\007Channel\030\001 \001"
      "(\t\022\014\n\004GUID\030\002 \001(\t\022\020\n\010Location\030\003 \001(\t\022\017\n\007MA"
      "CAddr\030\004 \001(\t\022\014\n\004Name\030\005 \001(\t\022\r\n\005PANID\030\006 \001(\t"
      "\022\034\n\010Position\030\007 \001(\0132\n.Pro_Point\022\014\n\004Type\030\010"
      " \001(\t\022\031\n\005Scale\030\t \001(\0132\n.Pro_Point\022\025\n\003WIO\030\n"
      " \003(\0132\010.Pro_WIO\022\030\n\005Input\030\013 \003(\0132\t.Pro_ZCIO"
      "\022\030\n\005RELAY\030\014 \003(\0132\t.Pro_ZCIO\022!\n\016LOCAL_TROU"
      "BLES\030\r \003(\0132\t.Pro_ZCIO\022!\n\016REMOTE_TROUBLE\030"
      "\016 \003(\0132\t.Pro_ZCIO\022\030\n\005STATS\030\017 \003(\0132\t.Pro_ZC"
      "IO\022\r\n\005range\030\020 \001(\r\022\020\n\010PassCode\030\021 \003(\t\022\031\n\005T"
      "imer\030\022 \003(\0132\n.PRO_TIMER\022\031\n\021SCU_FEATURE_FL"
      "AGS\030\023 \001(\005\022\017\n\007Comment\030\024 \001(\t\"\331\001\n\tPro_Floor"
      "\022\017\n\007Comment\030\001 \001(\t\022\022\n\nFloorGraph\030\002 \001(\t\022\014\n"
      "\004GUID\030\003 \001(\t\022\014\n\004Name\030\004 \001(\t\022\034\n\010Position\030\005 "
      "\001(\0132\n.Pro_Point\022\014\n\004Type\030\006 \001(\t\022\031\n\005Scale\030\007"
      " \001(\0132\n.Pro_Point\022\027\n\017unit_of_measure\030\010 \001("
      "\t\022\023\n\002ZC\030\t \003(\0132\007.Pro_ZC\022\026\n\016plotting_scale"
      "\030\n \001(\t\"\276\001\n\007Pro_Job\022\017\n\007Comment\030\001 \001(\t\022\014\n\004G"
      "UID\030\002 \001(\t\022\017\n\007JobPath\030\003 \001(\t\022\014\n\004Name\030\004 \001(\t"
      "\022\020\n\010Standard\030\005 \001(\t\022\014\n\004Type\030\006 \001(\t\022\031\n\005Floo"
      "r\030\007 \003(\0132\n.Pro_Floor\022%\n\010DayLight\030\010 \003(\0132\023."
      "PRO_DayLightSaving\022\023\n\013DailyAdjust\030\t \001(\005b"
      "\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 1447);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "fldata.proto", &protobuf_RegisterTypes);
  ::google::protobuf::internal::OnShutdown(&TableStruct::Shutdown);
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;

}  // namespace protobuf_fldata_2eproto


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Pro_Point::kXFieldNumber;
const int Pro_Point::kYFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Pro_Point::Pro_Point()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_fldata_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Pro_Point)
}
Pro_Point::Pro_Point(const Pro_Point& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&x_, &from.x_,
    reinterpret_cast<char*>(&y_) -
    reinterpret_cast<char*>(&x_) + sizeof(y_));
  // @@protoc_insertion_point(copy_constructor:Pro_Point)
}

void Pro_Point::SharedCtor() {
  ::memset(&x_, 0, reinterpret_cast<char*>(&y_) -
    reinterpret_cast<char*>(&x_) + sizeof(y_));
  _cached_size_ = 0;
}

Pro_Point::~Pro_Point() {
  // @@protoc_insertion_point(destructor:Pro_Point)
  SharedDtor();
}

void Pro_Point::SharedDtor() {
}

void Pro_Point::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Pro_Point::descriptor() {
  protobuf_fldata_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_fldata_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Pro_Point& Pro_Point::default_instance() {
  protobuf_fldata_2eproto::InitDefaults();
  return *internal_default_instance();
}

Pro_Point* Pro_Point::New(::google::protobuf::Arena* arena) const {
  Pro_Point* n = new Pro_Point;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Pro_Point::Clear() {
// @@protoc_insertion_point(message_clear_start:Pro_Point)
  ::memset(&x_, 0, reinterpret_cast<char*>(&y_) -
    reinterpret_cast<char*>(&x_) + sizeof(y_));
}

bool Pro_Point::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Pro_Point)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // float x = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(13u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &x_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float y = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(21u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &y_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Pro_Point)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Pro_Point)
  return false;
#undef DO_
}

void Pro_Point::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Pro_Point)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // float x = 1;
  if (this->x() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(1, this->x(), output);
  }

  // float y = 2;
  if (this->y() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->y(), output);
  }

  // @@protoc_insertion_point(serialize_end:Pro_Point)
}

::google::protobuf::uint8* Pro_Point::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:Pro_Point)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // float x = 1;
  if (this->x() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(1, this->x(), target);
  }

  // float y = 2;
  if (this->y() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->y(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:Pro_Point)
  return target;
}

size_t Pro_Point::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Pro_Point)
  size_t total_size = 0;

  // float x = 1;
  if (this->x() != 0) {
    total_size += 1 + 4;
  }

  // float y = 2;
  if (this->y() != 0) {
    total_size += 1 + 4;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Pro_Point::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Pro_Point)
  GOOGLE_DCHECK_NE(&from, this);
  const Pro_Point* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Pro_Point>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Pro_Point)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Pro_Point)
    MergeFrom(*source);
  }
}

void Pro_Point::MergeFrom(const Pro_Point& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Pro_Point)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.x() != 0) {
    set_x(from.x());
  }
  if (from.y() != 0) {
    set_y(from.y());
  }
}

void Pro_Point::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Pro_Point)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Pro_Point::CopyFrom(const Pro_Point& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Pro_Point)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Pro_Point::IsInitialized() const {
  return true;
}

void Pro_Point::Swap(Pro_Point* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Pro_Point::InternalSwap(Pro_Point* other) {
  std::swap(x_, other->x_);
  std::swap(y_, other->y_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Pro_Point::GetMetadata() const {
  protobuf_fldata_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_fldata_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Pro_Point

// float x = 1;
void Pro_Point::clear_x() {
  x_ = 0;
}
float Pro_Point::x() const {
  // @@protoc_insertion_point(field_get:Pro_Point.x)
  return x_;
}
void Pro_Point::set_x(float value) {
  
  x_ = value;
  // @@protoc_insertion_point(field_set:Pro_Point.x)
}

// float y = 2;
void Pro_Point::clear_y() {
  y_ = 0;
}
float Pro_Point::y() const {
  // @@protoc_insertion_point(field_get:Pro_Point.y)
  return y_;
}
void Pro_Point::set_y(float value) {
  
  y_ = value;
  // @@protoc_insertion_point(field_set:Pro_Point.y)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PRO_TIMER::kIDFieldNumber;
const int PRO_TIMER::kDurationFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PRO_TIMER::PRO_TIMER()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_fldata_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:PRO_TIMER)
}
PRO_TIMER::PRO_TIMER(const PRO_TIMER& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&id_, &from.id_,
    reinterpret_cast<char*>(&duration_) -
    reinterpret_cast<char*>(&id_) + sizeof(duration_));
  // @@protoc_insertion_point(copy_constructor:PRO_TIMER)
}

void PRO_TIMER::SharedCtor() {
  ::memset(&id_, 0, reinterpret_cast<char*>(&duration_) -
    reinterpret_cast<char*>(&id_) + sizeof(duration_));
  _cached_size_ = 0;
}

PRO_TIMER::~PRO_TIMER() {
  // @@protoc_insertion_point(destructor:PRO_TIMER)
  SharedDtor();
}

void PRO_TIMER::SharedDtor() {
}

void PRO_TIMER::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PRO_TIMER::descriptor() {
  protobuf_fldata_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_fldata_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PRO_TIMER& PRO_TIMER::default_instance() {
  protobuf_fldata_2eproto::InitDefaults();
  return *internal_default_instance();
}

PRO_TIMER* PRO_TIMER::New(::google::protobuf::Arena* arena) const {
  PRO_TIMER* n = new PRO_TIMER;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PRO_TIMER::Clear() {
// @@protoc_insertion_point(message_clear_start:PRO_TIMER)
  ::memset(&id_, 0, reinterpret_cast<char*>(&duration_) -
    reinterpret_cast<char*>(&id_) + sizeof(duration_));
}

bool PRO_TIMER::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:PRO_TIMER)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 ID = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 Duration = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &duration_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:PRO_TIMER)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:PRO_TIMER)
  return false;
#undef DO_
}

void PRO_TIMER::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:PRO_TIMER)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 ID = 1;
  if (this->id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->id(), output);
  }

  // int32 Duration = 2;
  if (this->duration() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->duration(), output);
  }

  // @@protoc_insertion_point(serialize_end:PRO_TIMER)
}

::google::protobuf::uint8* PRO_TIMER::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:PRO_TIMER)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 ID = 1;
  if (this->id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->id(), target);
  }

  // int32 Duration = 2;
  if (this->duration() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->duration(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:PRO_TIMER)
  return target;
}

size_t PRO_TIMER::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:PRO_TIMER)
  size_t total_size = 0;

  // int32 ID = 1;
  if (this->id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->id());
  }

  // int32 Duration = 2;
  if (this->duration() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->duration());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PRO_TIMER::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:PRO_TIMER)
  GOOGLE_DCHECK_NE(&from, this);
  const PRO_TIMER* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PRO_TIMER>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:PRO_TIMER)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:PRO_TIMER)
    MergeFrom(*source);
  }
}

void PRO_TIMER::MergeFrom(const PRO_TIMER& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:PRO_TIMER)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.id() != 0) {
    set_id(from.id());
  }
  if (from.duration() != 0) {
    set_duration(from.duration());
  }
}

void PRO_TIMER::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:PRO_TIMER)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PRO_TIMER::CopyFrom(const PRO_TIMER& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PRO_TIMER)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PRO_TIMER::IsInitialized() const {
  return true;
}

void PRO_TIMER::Swap(PRO_TIMER* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PRO_TIMER::InternalSwap(PRO_TIMER* other) {
  std::swap(id_, other->id_);
  std::swap(duration_, other->duration_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PRO_TIMER::GetMetadata() const {
  protobuf_fldata_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_fldata_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PRO_TIMER

// int32 ID = 1;
void PRO_TIMER::clear_id() {
  id_ = 0;
}
::google::protobuf::int32 PRO_TIMER::id() const {
  // @@protoc_insertion_point(field_get:PRO_TIMER.ID)
  return id_;
}
void PRO_TIMER::set_id(::google::protobuf::int32 value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:PRO_TIMER.ID)
}

// int32 Duration = 2;
void PRO_TIMER::clear_duration() {
  duration_ = 0;
}
::google::protobuf::int32 PRO_TIMER::duration() const {
  // @@protoc_insertion_point(field_get:PRO_TIMER.Duration)
  return duration_;
}
void PRO_TIMER::set_duration(::google::protobuf::int32 value) {
  
  duration_ = value;
  // @@protoc_insertion_point(field_set:PRO_TIMER.Duration)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PRO_DayLightSaving::kMonthFieldNumber;
const int PRO_DayLightSaving::kWeekFieldNumber;
const int PRO_DayLightSaving::kDayOfWeekFieldNumber;
const int PRO_DayLightSaving::kHourFieldNumber;
const int PRO_DayLightSaving::kMinFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PRO_DayLightSaving::PRO_DayLightSaving()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_fldata_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:PRO_DayLightSaving)
}
PRO_DayLightSaving::PRO_DayLightSaving(const PRO_DayLightSaving& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&month_, &from.month_,
    reinterpret_cast<char*>(&min_) -
    reinterpret_cast<char*>(&month_) + sizeof(min_));
  // @@protoc_insertion_point(copy_constructor:PRO_DayLightSaving)
}

void PRO_DayLightSaving::SharedCtor() {
  ::memset(&month_, 0, reinterpret_cast<char*>(&min_) -
    reinterpret_cast<char*>(&month_) + sizeof(min_));
  _cached_size_ = 0;
}

PRO_DayLightSaving::~PRO_DayLightSaving() {
  // @@protoc_insertion_point(destructor:PRO_DayLightSaving)
  SharedDtor();
}

void PRO_DayLightSaving::SharedDtor() {
}

void PRO_DayLightSaving::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PRO_DayLightSaving::descriptor() {
  protobuf_fldata_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_fldata_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PRO_DayLightSaving& PRO_DayLightSaving::default_instance() {
  protobuf_fldata_2eproto::InitDefaults();
  return *internal_default_instance();
}

PRO_DayLightSaving* PRO_DayLightSaving::New(::google::protobuf::Arena* arena) const {
  PRO_DayLightSaving* n = new PRO_DayLightSaving;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PRO_DayLightSaving::Clear() {
// @@protoc_insertion_point(message_clear_start:PRO_DayLightSaving)
  ::memset(&month_, 0, reinterpret_cast<char*>(&min_) -
    reinterpret_cast<char*>(&month_) + sizeof(min_));
}

bool PRO_DayLightSaving::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:PRO_DayLightSaving)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 month = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &month_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 week = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &week_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 dayOfWeek = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &dayofweek_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 hour = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &hour_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 min = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &min_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:PRO_DayLightSaving)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:PRO_DayLightSaving)
  return false;
#undef DO_
}

void PRO_DayLightSaving::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:PRO_DayLightSaving)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 month = 1;
  if (this->month() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->month(), output);
  }

  // int32 week = 2;
  if (this->week() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->week(), output);
  }

  // int32 dayOfWeek = 3;
  if (this->dayofweek() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->dayofweek(), output);
  }

  // int32 hour = 4;
  if (this->hour() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->hour(), output);
  }

  // int32 min = 5;
  if (this->min() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->min(), output);
  }

  // @@protoc_insertion_point(serialize_end:PRO_DayLightSaving)
}

::google::protobuf::uint8* PRO_DayLightSaving::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:PRO_DayLightSaving)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 month = 1;
  if (this->month() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->month(), target);
  }

  // int32 week = 2;
  if (this->week() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->week(), target);
  }

  // int32 dayOfWeek = 3;
  if (this->dayofweek() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->dayofweek(), target);
  }

  // int32 hour = 4;
  if (this->hour() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->hour(), target);
  }

  // int32 min = 5;
  if (this->min() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->min(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:PRO_DayLightSaving)
  return target;
}

size_t PRO_DayLightSaving::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:PRO_DayLightSaving)
  size_t total_size = 0;

  // int32 month = 1;
  if (this->month() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->month());
  }

  // int32 week = 2;
  if (this->week() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->week());
  }

  // int32 dayOfWeek = 3;
  if (this->dayofweek() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->dayofweek());
  }

  // int32 hour = 4;
  if (this->hour() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->hour());
  }

  // int32 min = 5;
  if (this->min() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->min());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PRO_DayLightSaving::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:PRO_DayLightSaving)
  GOOGLE_DCHECK_NE(&from, this);
  const PRO_DayLightSaving* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PRO_DayLightSaving>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:PRO_DayLightSaving)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:PRO_DayLightSaving)
    MergeFrom(*source);
  }
}

void PRO_DayLightSaving::MergeFrom(const PRO_DayLightSaving& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:PRO_DayLightSaving)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.month() != 0) {
    set_month(from.month());
  }
  if (from.week() != 0) {
    set_week(from.week());
  }
  if (from.dayofweek() != 0) {
    set_dayofweek(from.dayofweek());
  }
  if (from.hour() != 0) {
    set_hour(from.hour());
  }
  if (from.min() != 0) {
    set_min(from.min());
  }
}

void PRO_DayLightSaving::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:PRO_DayLightSaving)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PRO_DayLightSaving::CopyFrom(const PRO_DayLightSaving& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PRO_DayLightSaving)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PRO_DayLightSaving::IsInitialized() const {
  return true;
}

void PRO_DayLightSaving::Swap(PRO_DayLightSaving* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PRO_DayLightSaving::InternalSwap(PRO_DayLightSaving* other) {
  std::swap(month_, other->month_);
  std::swap(week_, other->week_);
  std::swap(dayofweek_, other->dayofweek_);
  std::swap(hour_, other->hour_);
  std::swap(min_, other->min_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PRO_DayLightSaving::GetMetadata() const {
  protobuf_fldata_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_fldata_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PRO_DayLightSaving

// int32 month = 1;
void PRO_DayLightSaving::clear_month() {
  month_ = 0;
}
::google::protobuf::int32 PRO_DayLightSaving::month() const {
  // @@protoc_insertion_point(field_get:PRO_DayLightSaving.month)
  return month_;
}
void PRO_DayLightSaving::set_month(::google::protobuf::int32 value) {
  
  month_ = value;
  // @@protoc_insertion_point(field_set:PRO_DayLightSaving.month)
}

// int32 week = 2;
void PRO_DayLightSaving::clear_week() {
  week_ = 0;
}
::google::protobuf::int32 PRO_DayLightSaving::week() const {
  // @@protoc_insertion_point(field_get:PRO_DayLightSaving.week)
  return week_;
}
void PRO_DayLightSaving::set_week(::google::protobuf::int32 value) {
  
  week_ = value;
  // @@protoc_insertion_point(field_set:PRO_DayLightSaving.week)
}

// int32 dayOfWeek = 3;
void PRO_DayLightSaving::clear_dayofweek() {
  dayofweek_ = 0;
}
::google::protobuf::int32 PRO_DayLightSaving::dayofweek() const {
  // @@protoc_insertion_point(field_get:PRO_DayLightSaving.dayOfWeek)
  return dayofweek_;
}
void PRO_DayLightSaving::set_dayofweek(::google::protobuf::int32 value) {
  
  dayofweek_ = value;
  // @@protoc_insertion_point(field_set:PRO_DayLightSaving.dayOfWeek)
}

// int32 hour = 4;
void PRO_DayLightSaving::clear_hour() {
  hour_ = 0;
}
::google::protobuf::int32 PRO_DayLightSaving::hour() const {
  // @@protoc_insertion_point(field_get:PRO_DayLightSaving.hour)
  return hour_;
}
void PRO_DayLightSaving::set_hour(::google::protobuf::int32 value) {
  
  hour_ = value;
  // @@protoc_insertion_point(field_set:PRO_DayLightSaving.hour)
}

// int32 min = 5;
void PRO_DayLightSaving::clear_min() {
  min_ = 0;
}
::google::protobuf::int32 PRO_DayLightSaving::min() const {
  // @@protoc_insertion_point(field_get:PRO_DayLightSaving.min)
  return min_;
}
void PRO_DayLightSaving::set_min(::google::protobuf::int32 value) {
  
  min_ = value;
  // @@protoc_insertion_point(field_set:PRO_DayLightSaving.min)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Pro_WIO::kChannelFieldNumber;
const int Pro_WIO::kGUIDFieldNumber;
const int Pro_WIO::kLocationFieldNumber;
const int Pro_WIO::kMACAddrFieldNumber;
const int Pro_WIO::kModelFieldNumber;
const int Pro_WIO::kNameFieldNumber;
const int Pro_WIO::kPositionFieldNumber;
const int Pro_WIO::kSignalingFieldNumber;
const int Pro_WIO::kTypeFieldNumber;
const int Pro_WIO::kScaleFieldNumber;
const int Pro_WIO::kWIOTypeFieldNumber;
const int Pro_WIO::kCorrsFieldNumber;
const int Pro_WIO::kValueFieldNumber;
const int Pro_WIO::kCommentFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Pro_WIO::Pro_WIO()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_fldata_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Pro_WIO)
}
Pro_WIO::Pro_WIO(const Pro_WIO& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  channel_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.channel().size() > 0) {
    channel_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.channel_);
  }
  guid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.guid().size() > 0) {
    guid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.guid_);
  }
  location_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.location().size() > 0) {
    location_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.location_);
  }
  macaddr_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.macaddr().size() > 0) {
    macaddr_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.macaddr_);
  }
  model_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.model().size() > 0) {
    model_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.model_);
  }
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  signaling_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.signaling().size() > 0) {
    signaling_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.signaling_);
  }
  type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.type().size() > 0) {
    type_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.type_);
  }
  wiotype_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.wiotype().size() > 0) {
    wiotype_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.wiotype_);
  }
  corrs_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.corrs().size() > 0) {
    corrs_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.corrs_);
  }
  value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.value().size() > 0) {
    value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.value_);
  }
  comment_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.comment().size() > 0) {
    comment_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.comment_);
  }
  if (from.has_position()) {
    position_ = new ::Pro_Point(*from.position_);
  } else {
    position_ = NULL;
  }
  if (from.has_scale()) {
    scale_ = new ::Pro_Point(*from.scale_);
  } else {
    scale_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:Pro_WIO)
}

void Pro_WIO::SharedCtor() {
  channel_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  guid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  location_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  macaddr_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  model_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  signaling_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  wiotype_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  corrs_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  comment_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&position_, 0, reinterpret_cast<char*>(&scale_) -
    reinterpret_cast<char*>(&position_) + sizeof(scale_));
  _cached_size_ = 0;
}

Pro_WIO::~Pro_WIO() {
  // @@protoc_insertion_point(destructor:Pro_WIO)
  SharedDtor();
}

void Pro_WIO::SharedDtor() {
  channel_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  guid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  location_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  macaddr_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  model_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  signaling_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  type_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  wiotype_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  corrs_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  comment_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) {
    delete position_;
  }
  if (this != internal_default_instance()) {
    delete scale_;
  }
}

void Pro_WIO::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Pro_WIO::descriptor() {
  protobuf_fldata_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_fldata_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Pro_WIO& Pro_WIO::default_instance() {
  protobuf_fldata_2eproto::InitDefaults();
  return *internal_default_instance();
}

Pro_WIO* Pro_WIO::New(::google::protobuf::Arena* arena) const {
  Pro_WIO* n = new Pro_WIO;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Pro_WIO::Clear() {
// @@protoc_insertion_point(message_clear_start:Pro_WIO)
  channel_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  guid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  location_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  macaddr_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  model_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  signaling_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  wiotype_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  corrs_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  comment_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && position_ != NULL) {
    delete position_;
  }
  position_ = NULL;
  if (GetArenaNoVirtual() == NULL && scale_ != NULL) {
    delete scale_;
  }
  scale_ = NULL;
}

bool Pro_WIO::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Pro_WIO)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string Channel = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_channel()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->channel().data(), this->channel().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Pro_WIO.Channel"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string GUID = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_guid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->guid().data(), this->guid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Pro_WIO.GUID"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string Location = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_location()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->location().data(), this->location().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Pro_WIO.Location"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string MACAddr = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_macaddr()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->macaddr().data(), this->macaddr().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Pro_WIO.MACAddr"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string Model = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_model()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->model().data(), this->model().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Pro_WIO.Model"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string Name = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Pro_WIO.Name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Pro_Point Position = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_position()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string Signaling = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_signaling()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->signaling().data(), this->signaling().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Pro_WIO.Signaling"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string Type = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_type()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->type().data(), this->type().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Pro_WIO.Type"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Pro_Point Scale = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_scale()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string WIOType = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(90u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_wiotype()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->wiotype().data(), this->wiotype().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Pro_WIO.WIOType"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string Corrs = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(98u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_corrs()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->corrs().data(), this->corrs().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Pro_WIO.Corrs"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string Value = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(106u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_value()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->value().data(), this->value().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Pro_WIO.Value"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string Comment = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(114u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_comment()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->comment().data(), this->comment().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Pro_WIO.Comment"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Pro_WIO)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Pro_WIO)
  return false;
#undef DO_
}

void Pro_WIO::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Pro_WIO)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string Channel = 1;
  if (this->channel().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->channel().data(), this->channel().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Pro_WIO.Channel");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->channel(), output);
  }

  // string GUID = 2;
  if (this->guid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->guid().data(), this->guid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Pro_WIO.GUID");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->guid(), output);
  }

  // string Location = 3;
  if (this->location().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->location().data(), this->location().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Pro_WIO.Location");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->location(), output);
  }

  // string MACAddr = 4;
  if (this->macaddr().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->macaddr().data(), this->macaddr().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Pro_WIO.MACAddr");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->macaddr(), output);
  }

  // string Model = 5;
  if (this->model().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->model().data(), this->model().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Pro_WIO.Model");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->model(), output);
  }

  // string Name = 6;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Pro_WIO.Name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->name(), output);
  }

  // .Pro_Point Position = 7;
  if (this->has_position()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, *this->position_, output);
  }

  // string Signaling = 8;
  if (this->signaling().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->signaling().data(), this->signaling().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Pro_WIO.Signaling");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      8, this->signaling(), output);
  }

  // string Type = 9;
  if (this->type().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->type().data(), this->type().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Pro_WIO.Type");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      9, this->type(), output);
  }

  // .Pro_Point Scale = 10;
  if (this->has_scale()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      10, *this->scale_, output);
  }

  // string WIOType = 11;
  if (this->wiotype().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->wiotype().data(), this->wiotype().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Pro_WIO.WIOType");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      11, this->wiotype(), output);
  }

  // string Corrs = 12;
  if (this->corrs().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->corrs().data(), this->corrs().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Pro_WIO.Corrs");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      12, this->corrs(), output);
  }

  // string Value = 13;
  if (this->value().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->value().data(), this->value().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Pro_WIO.Value");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      13, this->value(), output);
  }

  // string Comment = 14;
  if (this->comment().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->comment().data(), this->comment().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Pro_WIO.Comment");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      14, this->comment(), output);
  }

  // @@protoc_insertion_point(serialize_end:Pro_WIO)
}

::google::protobuf::uint8* Pro_WIO::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:Pro_WIO)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string Channel = 1;
  if (this->channel().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->channel().data(), this->channel().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Pro_WIO.Channel");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->channel(), target);
  }

  // string GUID = 2;
  if (this->guid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->guid().data(), this->guid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Pro_WIO.GUID");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->guid(), target);
  }

  // string Location = 3;
  if (this->location().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->location().data(), this->location().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Pro_WIO.Location");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->location(), target);
  }

  // string MACAddr = 4;
  if (this->macaddr().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->macaddr().data(), this->macaddr().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Pro_WIO.MACAddr");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->macaddr(), target);
  }

  // string Model = 5;
  if (this->model().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->model().data(), this->model().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Pro_WIO.Model");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->model(), target);
  }

  // string Name = 6;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Pro_WIO.Name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->name(), target);
  }

  // .Pro_Point Position = 7;
  if (this->has_position()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        7, *this->position_, deterministic, target);
  }

  // string Signaling = 8;
  if (this->signaling().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->signaling().data(), this->signaling().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Pro_WIO.Signaling");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        8, this->signaling(), target);
  }

  // string Type = 9;
  if (this->type().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->type().data(), this->type().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Pro_WIO.Type");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        9, this->type(), target);
  }

  // .Pro_Point Scale = 10;
  if (this->has_scale()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        10, *this->scale_, deterministic, target);
  }

  // string WIOType = 11;
  if (this->wiotype().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->wiotype().data(), this->wiotype().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Pro_WIO.WIOType");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        11, this->wiotype(), target);
  }

  // string Corrs = 12;
  if (this->corrs().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->corrs().data(), this->corrs().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Pro_WIO.Corrs");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        12, this->corrs(), target);
  }

  // string Value = 13;
  if (this->value().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->value().data(), this->value().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Pro_WIO.Value");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        13, this->value(), target);
  }

  // string Comment = 14;
  if (this->comment().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->comment().data(), this->comment().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Pro_WIO.Comment");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        14, this->comment(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:Pro_WIO)
  return target;
}

size_t Pro_WIO::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Pro_WIO)
  size_t total_size = 0;

  // string Channel = 1;
  if (this->channel().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->channel());
  }

  // string GUID = 2;
  if (this->guid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->guid());
  }

  // string Location = 3;
  if (this->location().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->location());
  }

  // string MACAddr = 4;
  if (this->macaddr().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->macaddr());
  }

  // string Model = 5;
  if (this->model().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->model());
  }

  // string Name = 6;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // string Signaling = 8;
  if (this->signaling().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->signaling());
  }

  // string Type = 9;
  if (this->type().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->type());
  }

  // string WIOType = 11;
  if (this->wiotype().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->wiotype());
  }

  // string Corrs = 12;
  if (this->corrs().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->corrs());
  }

  // string Value = 13;
  if (this->value().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->value());
  }

  // string Comment = 14;
  if (this->comment().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->comment());
  }

  // .Pro_Point Position = 7;
  if (this->has_position()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->position_);
  }

  // .Pro_Point Scale = 10;
  if (this->has_scale()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->scale_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Pro_WIO::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Pro_WIO)
  GOOGLE_DCHECK_NE(&from, this);
  const Pro_WIO* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Pro_WIO>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Pro_WIO)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Pro_WIO)
    MergeFrom(*source);
  }
}

void Pro_WIO::MergeFrom(const Pro_WIO& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Pro_WIO)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.channel().size() > 0) {

    channel_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.channel_);
  }
  if (from.guid().size() > 0) {

    guid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.guid_);
  }
  if (from.location().size() > 0) {

    location_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.location_);
  }
  if (from.macaddr().size() > 0) {

    macaddr_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.macaddr_);
  }
  if (from.model().size() > 0) {

    model_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.model_);
  }
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.signaling().size() > 0) {

    signaling_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.signaling_);
  }
  if (from.type().size() > 0) {

    type_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.type_);
  }
  if (from.wiotype().size() > 0) {

    wiotype_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.wiotype_);
  }
  if (from.corrs().size() > 0) {

    corrs_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.corrs_);
  }
  if (from.value().size() > 0) {

    value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.value_);
  }
  if (from.comment().size() > 0) {

    comment_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.comment_);
  }
  if (from.has_position()) {
    mutable_position()->::Pro_Point::MergeFrom(from.position());
  }
  if (from.has_scale()) {
    mutable_scale()->::Pro_Point::MergeFrom(from.scale());
  }
}

void Pro_WIO::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Pro_WIO)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Pro_WIO::CopyFrom(const Pro_WIO& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Pro_WIO)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Pro_WIO::IsInitialized() const {
  return true;
}

void Pro_WIO::Swap(Pro_WIO* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Pro_WIO::InternalSwap(Pro_WIO* other) {
  channel_.Swap(&other->channel_);
  guid_.Swap(&other->guid_);
  location_.Swap(&other->location_);
  macaddr_.Swap(&other->macaddr_);
  model_.Swap(&other->model_);
  name_.Swap(&other->name_);
  signaling_.Swap(&other->signaling_);
  type_.Swap(&other->type_);
  wiotype_.Swap(&other->wiotype_);
  corrs_.Swap(&other->corrs_);
  value_.Swap(&other->value_);
  comment_.Swap(&other->comment_);
  std::swap(position_, other->position_);
  std::swap(scale_, other->scale_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Pro_WIO::GetMetadata() const {
  protobuf_fldata_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_fldata_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Pro_WIO

// string Channel = 1;
void Pro_WIO::clear_channel() {
  channel_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& Pro_WIO::channel() const {
  // @@protoc_insertion_point(field_get:Pro_WIO.Channel)
  return channel_.GetNoArena();
}
void Pro_WIO::set_channel(const ::std::string& value) {
  
  channel_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Pro_WIO.Channel)
}
#if LANG_CXX11
void Pro_WIO::set_channel(::std::string&& value) {
  
  channel_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Pro_WIO.Channel)
}
#endif
void Pro_WIO::set_channel(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  channel_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Pro_WIO.Channel)
}
void Pro_WIO::set_channel(const char* value, size_t size) {
  
  channel_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Pro_WIO.Channel)
}
::std::string* Pro_WIO::mutable_channel() {
  
  // @@protoc_insertion_point(field_mutable:Pro_WIO.Channel)
  return channel_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Pro_WIO::release_channel() {
  // @@protoc_insertion_point(field_release:Pro_WIO.Channel)
  
  return channel_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Pro_WIO::set_allocated_channel(::std::string* channel) {
  if (channel != NULL) {
    
  } else {
    
  }
  channel_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), channel);
  // @@protoc_insertion_point(field_set_allocated:Pro_WIO.Channel)
}

// string GUID = 2;
void Pro_WIO::clear_guid() {
  guid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& Pro_WIO::guid() const {
  // @@protoc_insertion_point(field_get:Pro_WIO.GUID)
  return guid_.GetNoArena();
}
void Pro_WIO::set_guid(const ::std::string& value) {
  
  guid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Pro_WIO.GUID)
}
#if LANG_CXX11
void Pro_WIO::set_guid(::std::string&& value) {
  
  guid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Pro_WIO.GUID)
}
#endif
void Pro_WIO::set_guid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  guid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Pro_WIO.GUID)
}
void Pro_WIO::set_guid(const char* value, size_t size) {
  
  guid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Pro_WIO.GUID)
}
::std::string* Pro_WIO::mutable_guid() {
  
  // @@protoc_insertion_point(field_mutable:Pro_WIO.GUID)
  return guid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Pro_WIO::release_guid() {
  // @@protoc_insertion_point(field_release:Pro_WIO.GUID)
  
  return guid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Pro_WIO::set_allocated_guid(::std::string* guid) {
  if (guid != NULL) {
    
  } else {
    
  }
  guid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), guid);
  // @@protoc_insertion_point(field_set_allocated:Pro_WIO.GUID)
}

// string Location = 3;
void Pro_WIO::clear_location() {
  location_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& Pro_WIO::location() const {
  // @@protoc_insertion_point(field_get:Pro_WIO.Location)
  return location_.GetNoArena();
}
void Pro_WIO::set_location(const ::std::string& value) {
  
  location_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Pro_WIO.Location)
}
#if LANG_CXX11
void Pro_WIO::set_location(::std::string&& value) {
  
  location_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Pro_WIO.Location)
}
#endif
void Pro_WIO::set_location(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  location_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Pro_WIO.Location)
}
void Pro_WIO::set_location(const char* value, size_t size) {
  
  location_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Pro_WIO.Location)
}
::std::string* Pro_WIO::mutable_location() {
  
  // @@protoc_insertion_point(field_mutable:Pro_WIO.Location)
  return location_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Pro_WIO::release_location() {
  // @@protoc_insertion_point(field_release:Pro_WIO.Location)
  
  return location_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Pro_WIO::set_allocated_location(::std::string* location) {
  if (location != NULL) {
    
  } else {
    
  }
  location_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), location);
  // @@protoc_insertion_point(field_set_allocated:Pro_WIO.Location)
}

// string MACAddr = 4;
void Pro_WIO::clear_macaddr() {
  macaddr_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& Pro_WIO::macaddr() const {
  // @@protoc_insertion_point(field_get:Pro_WIO.MACAddr)
  return macaddr_.GetNoArena();
}
void Pro_WIO::set_macaddr(const ::std::string& value) {
  
  macaddr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Pro_WIO.MACAddr)
}
#if LANG_CXX11
void Pro_WIO::set_macaddr(::std::string&& value) {
  
  macaddr_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Pro_WIO.MACAddr)
}
#endif
void Pro_WIO::set_macaddr(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  macaddr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Pro_WIO.MACAddr)
}
void Pro_WIO::set_macaddr(const char* value, size_t size) {
  
  macaddr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Pro_WIO.MACAddr)
}
::std::string* Pro_WIO::mutable_macaddr() {
  
  // @@protoc_insertion_point(field_mutable:Pro_WIO.MACAddr)
  return macaddr_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Pro_WIO::release_macaddr() {
  // @@protoc_insertion_point(field_release:Pro_WIO.MACAddr)
  
  return macaddr_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Pro_WIO::set_allocated_macaddr(::std::string* macaddr) {
  if (macaddr != NULL) {
    
  } else {
    
  }
  macaddr_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), macaddr);
  // @@protoc_insertion_point(field_set_allocated:Pro_WIO.MACAddr)
}

// string Model = 5;
void Pro_WIO::clear_model() {
  model_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& Pro_WIO::model() const {
  // @@protoc_insertion_point(field_get:Pro_WIO.Model)
  return model_.GetNoArena();
}
void Pro_WIO::set_model(const ::std::string& value) {
  
  model_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Pro_WIO.Model)
}
#if LANG_CXX11
void Pro_WIO::set_model(::std::string&& value) {
  
  model_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Pro_WIO.Model)
}
#endif
void Pro_WIO::set_model(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  model_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Pro_WIO.Model)
}
void Pro_WIO::set_model(const char* value, size_t size) {
  
  model_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Pro_WIO.Model)
}
::std::string* Pro_WIO::mutable_model() {
  
  // @@protoc_insertion_point(field_mutable:Pro_WIO.Model)
  return model_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Pro_WIO::release_model() {
  // @@protoc_insertion_point(field_release:Pro_WIO.Model)
  
  return model_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Pro_WIO::set_allocated_model(::std::string* model) {
  if (model != NULL) {
    
  } else {
    
  }
  model_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), model);
  // @@protoc_insertion_point(field_set_allocated:Pro_WIO.Model)
}

// string Name = 6;
void Pro_WIO::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& Pro_WIO::name() const {
  // @@protoc_insertion_point(field_get:Pro_WIO.Name)
  return name_.GetNoArena();
}
void Pro_WIO::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Pro_WIO.Name)
}
#if LANG_CXX11
void Pro_WIO::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Pro_WIO.Name)
}
#endif
void Pro_WIO::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Pro_WIO.Name)
}
void Pro_WIO::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Pro_WIO.Name)
}
::std::string* Pro_WIO::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:Pro_WIO.Name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Pro_WIO::release_name() {
  // @@protoc_insertion_point(field_release:Pro_WIO.Name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Pro_WIO::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:Pro_WIO.Name)
}

// .Pro_Point Position = 7;
bool Pro_WIO::has_position() const {
  return this != internal_default_instance() && position_ != NULL;
}
void Pro_WIO::clear_position() {
  if (GetArenaNoVirtual() == NULL && position_ != NULL) delete position_;
  position_ = NULL;
}
const ::Pro_Point& Pro_WIO::position() const {
  // @@protoc_insertion_point(field_get:Pro_WIO.Position)
  return position_ != NULL ? *position_
                         : *::Pro_Point::internal_default_instance();
}
::Pro_Point* Pro_WIO::mutable_position() {
  
  if (position_ == NULL) {
    position_ = new ::Pro_Point;
  }
  // @@protoc_insertion_point(field_mutable:Pro_WIO.Position)
  return position_;
}
::Pro_Point* Pro_WIO::release_position() {
  // @@protoc_insertion_point(field_release:Pro_WIO.Position)
  
  ::Pro_Point* temp = position_;
  position_ = NULL;
  return temp;
}
void Pro_WIO::set_allocated_position(::Pro_Point* position) {
  delete position_;
  position_ = position;
  if (position) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Pro_WIO.Position)
}

// string Signaling = 8;
void Pro_WIO::clear_signaling() {
  signaling_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& Pro_WIO::signaling() const {
  // @@protoc_insertion_point(field_get:Pro_WIO.Signaling)
  return signaling_.GetNoArena();
}
void Pro_WIO::set_signaling(const ::std::string& value) {
  
  signaling_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Pro_WIO.Signaling)
}
#if LANG_CXX11
void Pro_WIO::set_signaling(::std::string&& value) {
  
  signaling_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Pro_WIO.Signaling)
}
#endif
void Pro_WIO::set_signaling(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  signaling_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Pro_WIO.Signaling)
}
void Pro_WIO::set_signaling(const char* value, size_t size) {
  
  signaling_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Pro_WIO.Signaling)
}
::std::string* Pro_WIO::mutable_signaling() {
  
  // @@protoc_insertion_point(field_mutable:Pro_WIO.Signaling)
  return signaling_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Pro_WIO::release_signaling() {
  // @@protoc_insertion_point(field_release:Pro_WIO.Signaling)
  
  return signaling_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Pro_WIO::set_allocated_signaling(::std::string* signaling) {
  if (signaling != NULL) {
    
  } else {
    
  }
  signaling_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), signaling);
  // @@protoc_insertion_point(field_set_allocated:Pro_WIO.Signaling)
}

// string Type = 9;
void Pro_WIO::clear_type() {
  type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& Pro_WIO::type() const {
  // @@protoc_insertion_point(field_get:Pro_WIO.Type)
  return type_.GetNoArena();
}
void Pro_WIO::set_type(const ::std::string& value) {
  
  type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Pro_WIO.Type)
}
#if LANG_CXX11
void Pro_WIO::set_type(::std::string&& value) {
  
  type_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Pro_WIO.Type)
}
#endif
void Pro_WIO::set_type(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Pro_WIO.Type)
}
void Pro_WIO::set_type(const char* value, size_t size) {
  
  type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Pro_WIO.Type)
}
::std::string* Pro_WIO::mutable_type() {
  
  // @@protoc_insertion_point(field_mutable:Pro_WIO.Type)
  return type_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Pro_WIO::release_type() {
  // @@protoc_insertion_point(field_release:Pro_WIO.Type)
  
  return type_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Pro_WIO::set_allocated_type(::std::string* type) {
  if (type != NULL) {
    
  } else {
    
  }
  type_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), type);
  // @@protoc_insertion_point(field_set_allocated:Pro_WIO.Type)
}

// .Pro_Point Scale = 10;
bool Pro_WIO::has_scale() const {
  return this != internal_default_instance() && scale_ != NULL;
}
void Pro_WIO::clear_scale() {
  if (GetArenaNoVirtual() == NULL && scale_ != NULL) delete scale_;
  scale_ = NULL;
}
const ::Pro_Point& Pro_WIO::scale() const {
  // @@protoc_insertion_point(field_get:Pro_WIO.Scale)
  return scale_ != NULL ? *scale_
                         : *::Pro_Point::internal_default_instance();
}
::Pro_Point* Pro_WIO::mutable_scale() {
  
  if (scale_ == NULL) {
    scale_ = new ::Pro_Point;
  }
  // @@protoc_insertion_point(field_mutable:Pro_WIO.Scale)
  return scale_;
}
::Pro_Point* Pro_WIO::release_scale() {
  // @@protoc_insertion_point(field_release:Pro_WIO.Scale)
  
  ::Pro_Point* temp = scale_;
  scale_ = NULL;
  return temp;
}
void Pro_WIO::set_allocated_scale(::Pro_Point* scale) {
  delete scale_;
  scale_ = scale;
  if (scale) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Pro_WIO.Scale)
}

// string WIOType = 11;
void Pro_WIO::clear_wiotype() {
  wiotype_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& Pro_WIO::wiotype() const {
  // @@protoc_insertion_point(field_get:Pro_WIO.WIOType)
  return wiotype_.GetNoArena();
}
void Pro_WIO::set_wiotype(const ::std::string& value) {
  
  wiotype_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Pro_WIO.WIOType)
}
#if LANG_CXX11
void Pro_WIO::set_wiotype(::std::string&& value) {
  
  wiotype_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Pro_WIO.WIOType)
}
#endif
void Pro_WIO::set_wiotype(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  wiotype_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Pro_WIO.WIOType)
}
void Pro_WIO::set_wiotype(const char* value, size_t size) {
  
  wiotype_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Pro_WIO.WIOType)
}
::std::string* Pro_WIO::mutable_wiotype() {
  
  // @@protoc_insertion_point(field_mutable:Pro_WIO.WIOType)
  return wiotype_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Pro_WIO::release_wiotype() {
  // @@protoc_insertion_point(field_release:Pro_WIO.WIOType)
  
  return wiotype_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Pro_WIO::set_allocated_wiotype(::std::string* wiotype) {
  if (wiotype != NULL) {
    
  } else {
    
  }
  wiotype_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), wiotype);
  // @@protoc_insertion_point(field_set_allocated:Pro_WIO.WIOType)
}

// string Corrs = 12;
void Pro_WIO::clear_corrs() {
  corrs_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& Pro_WIO::corrs() const {
  // @@protoc_insertion_point(field_get:Pro_WIO.Corrs)
  return corrs_.GetNoArena();
}
void Pro_WIO::set_corrs(const ::std::string& value) {
  
  corrs_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Pro_WIO.Corrs)
}
#if LANG_CXX11
void Pro_WIO::set_corrs(::std::string&& value) {
  
  corrs_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Pro_WIO.Corrs)
}
#endif
void Pro_WIO::set_corrs(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  corrs_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Pro_WIO.Corrs)
}
void Pro_WIO::set_corrs(const char* value, size_t size) {
  
  corrs_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Pro_WIO.Corrs)
}
::std::string* Pro_WIO::mutable_corrs() {
  
  // @@protoc_insertion_point(field_mutable:Pro_WIO.Corrs)
  return corrs_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Pro_WIO::release_corrs() {
  // @@protoc_insertion_point(field_release:Pro_WIO.Corrs)
  
  return corrs_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Pro_WIO::set_allocated_corrs(::std::string* corrs) {
  if (corrs != NULL) {
    
  } else {
    
  }
  corrs_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), corrs);
  // @@protoc_insertion_point(field_set_allocated:Pro_WIO.Corrs)
}

// string Value = 13;
void Pro_WIO::clear_value() {
  value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& Pro_WIO::value() const {
  // @@protoc_insertion_point(field_get:Pro_WIO.Value)
  return value_.GetNoArena();
}
void Pro_WIO::set_value(const ::std::string& value) {
  
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Pro_WIO.Value)
}
#if LANG_CXX11
void Pro_WIO::set_value(::std::string&& value) {
  
  value_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Pro_WIO.Value)
}
#endif
void Pro_WIO::set_value(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Pro_WIO.Value)
}
void Pro_WIO::set_value(const char* value, size_t size) {
  
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Pro_WIO.Value)
}
::std::string* Pro_WIO::mutable_value() {
  
  // @@protoc_insertion_point(field_mutable:Pro_WIO.Value)
  return value_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Pro_WIO::release_value() {
  // @@protoc_insertion_point(field_release:Pro_WIO.Value)
  
  return value_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Pro_WIO::set_allocated_value(::std::string* value) {
  if (value != NULL) {
    
  } else {
    
  }
  value_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set_allocated:Pro_WIO.Value)
}

// string Comment = 14;
void Pro_WIO::clear_comment() {
  comment_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& Pro_WIO::comment() const {
  // @@protoc_insertion_point(field_get:Pro_WIO.Comment)
  return comment_.GetNoArena();
}
void Pro_WIO::set_comment(const ::std::string& value) {
  
  comment_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Pro_WIO.Comment)
}
#if LANG_CXX11
void Pro_WIO::set_comment(::std::string&& value) {
  
  comment_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Pro_WIO.Comment)
}
#endif
void Pro_WIO::set_comment(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  comment_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Pro_WIO.Comment)
}
void Pro_WIO::set_comment(const char* value, size_t size) {
  
  comment_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Pro_WIO.Comment)
}
::std::string* Pro_WIO::mutable_comment() {
  
  // @@protoc_insertion_point(field_mutable:Pro_WIO.Comment)
  return comment_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Pro_WIO::release_comment() {
  // @@protoc_insertion_point(field_release:Pro_WIO.Comment)
  
  return comment_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Pro_WIO::set_allocated_comment(::std::string* comment) {
  if (comment != NULL) {
    
  } else {
    
  }
  comment_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), comment);
  // @@protoc_insertion_point(field_set_allocated:Pro_WIO.Comment)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Pro_ZCIO::kNameFieldNumber;
const int Pro_ZCIO::kTypeFieldNumber;
const int Pro_ZCIO::kValueFieldNumber;
const int Pro_ZCIO::kCorrsFieldNumber;
const int Pro_ZCIO::kCktProcessTypeFieldNumber;
const int Pro_ZCIO::kTagFieldNumber;
const int Pro_ZCIO::kCommentFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Pro_ZCIO::Pro_ZCIO()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_fldata_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Pro_ZCIO)
}
Pro_ZCIO::Pro_ZCIO(const Pro_ZCIO& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.type().size() > 0) {
    type_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.type_);
  }
  value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.value().size() > 0) {
    value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.value_);
  }
  corrs_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.corrs().size() > 0) {
    corrs_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.corrs_);
  }
  cktprocesstype_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.cktprocesstype().size() > 0) {
    cktprocesstype_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cktprocesstype_);
  }
  tag_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.tag().size() > 0) {
    tag_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.tag_);
  }
  comment_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.comment().size() > 0) {
    comment_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.comment_);
  }
  // @@protoc_insertion_point(copy_constructor:Pro_ZCIO)
}

void Pro_ZCIO::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  corrs_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cktprocesstype_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  tag_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  comment_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

Pro_ZCIO::~Pro_ZCIO() {
  // @@protoc_insertion_point(destructor:Pro_ZCIO)
  SharedDtor();
}

void Pro_ZCIO::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  type_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  corrs_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cktprocesstype_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  tag_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  comment_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Pro_ZCIO::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Pro_ZCIO::descriptor() {
  protobuf_fldata_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_fldata_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Pro_ZCIO& Pro_ZCIO::default_instance() {
  protobuf_fldata_2eproto::InitDefaults();
  return *internal_default_instance();
}

Pro_ZCIO* Pro_ZCIO::New(::google::protobuf::Arena* arena) const {
  Pro_ZCIO* n = new Pro_ZCIO;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Pro_ZCIO::Clear() {
// @@protoc_insertion_point(message_clear_start:Pro_ZCIO)
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  corrs_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cktprocesstype_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  tag_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  comment_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool Pro_ZCIO::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Pro_ZCIO)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string Name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Pro_ZCIO.Name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string Type = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_type()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->type().data(), this->type().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Pro_ZCIO.Type"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string Value = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_value()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->value().data(), this->value().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Pro_ZCIO.Value"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string Corrs = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_corrs()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->corrs().data(), this->corrs().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Pro_ZCIO.Corrs"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string CktProcessType = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_cktprocesstype()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->cktprocesstype().data(), this->cktprocesstype().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Pro_ZCIO.CktProcessType"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string Tag = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_tag()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->tag().data(), this->tag().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Pro_ZCIO.Tag"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string Comment = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_comment()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->comment().data(), this->comment().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Pro_ZCIO.Comment"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Pro_ZCIO)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Pro_ZCIO)
  return false;
#undef DO_
}

void Pro_ZCIO::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Pro_ZCIO)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string Name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Pro_ZCIO.Name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // string Type = 2;
  if (this->type().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->type().data(), this->type().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Pro_ZCIO.Type");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->type(), output);
  }

  // string Value = 3;
  if (this->value().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->value().data(), this->value().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Pro_ZCIO.Value");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->value(), output);
  }

  // string Corrs = 4;
  if (this->corrs().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->corrs().data(), this->corrs().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Pro_ZCIO.Corrs");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->corrs(), output);
  }

  // string CktProcessType = 5;
  if (this->cktprocesstype().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cktprocesstype().data(), this->cktprocesstype().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Pro_ZCIO.CktProcessType");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->cktprocesstype(), output);
  }

  // string Tag = 6;
  if (this->tag().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->tag().data(), this->tag().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Pro_ZCIO.Tag");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->tag(), output);
  }

  // string Comment = 7;
  if (this->comment().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->comment().data(), this->comment().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Pro_ZCIO.Comment");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->comment(), output);
  }

  // @@protoc_insertion_point(serialize_end:Pro_ZCIO)
}

::google::protobuf::uint8* Pro_ZCIO::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:Pro_ZCIO)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string Name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Pro_ZCIO.Name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // string Type = 2;
  if (this->type().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->type().data(), this->type().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Pro_ZCIO.Type");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->type(), target);
  }

  // string Value = 3;
  if (this->value().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->value().data(), this->value().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Pro_ZCIO.Value");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->value(), target);
  }

  // string Corrs = 4;
  if (this->corrs().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->corrs().data(), this->corrs().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Pro_ZCIO.Corrs");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->corrs(), target);
  }

  // string CktProcessType = 5;
  if (this->cktprocesstype().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cktprocesstype().data(), this->cktprocesstype().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Pro_ZCIO.CktProcessType");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->cktprocesstype(), target);
  }

  // string Tag = 6;
  if (this->tag().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->tag().data(), this->tag().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Pro_ZCIO.Tag");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->tag(), target);
  }

  // string Comment = 7;
  if (this->comment().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->comment().data(), this->comment().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Pro_ZCIO.Comment");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->comment(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:Pro_ZCIO)
  return target;
}

size_t Pro_ZCIO::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Pro_ZCIO)
  size_t total_size = 0;

  // string Name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // string Type = 2;
  if (this->type().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->type());
  }

  // string Value = 3;
  if (this->value().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->value());
  }

  // string Corrs = 4;
  if (this->corrs().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->corrs());
  }

  // string CktProcessType = 5;
  if (this->cktprocesstype().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->cktprocesstype());
  }

  // string Tag = 6;
  if (this->tag().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->tag());
  }

  // string Comment = 7;
  if (this->comment().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->comment());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Pro_ZCIO::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Pro_ZCIO)
  GOOGLE_DCHECK_NE(&from, this);
  const Pro_ZCIO* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Pro_ZCIO>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Pro_ZCIO)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Pro_ZCIO)
    MergeFrom(*source);
  }
}

void Pro_ZCIO::MergeFrom(const Pro_ZCIO& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Pro_ZCIO)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.type().size() > 0) {

    type_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.type_);
  }
  if (from.value().size() > 0) {

    value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.value_);
  }
  if (from.corrs().size() > 0) {

    corrs_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.corrs_);
  }
  if (from.cktprocesstype().size() > 0) {

    cktprocesstype_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cktprocesstype_);
  }
  if (from.tag().size() > 0) {

    tag_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.tag_);
  }
  if (from.comment().size() > 0) {

    comment_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.comment_);
  }
}

void Pro_ZCIO::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Pro_ZCIO)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Pro_ZCIO::CopyFrom(const Pro_ZCIO& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Pro_ZCIO)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Pro_ZCIO::IsInitialized() const {
  return true;
}

void Pro_ZCIO::Swap(Pro_ZCIO* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Pro_ZCIO::InternalSwap(Pro_ZCIO* other) {
  name_.Swap(&other->name_);
  type_.Swap(&other->type_);
  value_.Swap(&other->value_);
  corrs_.Swap(&other->corrs_);
  cktprocesstype_.Swap(&other->cktprocesstype_);
  tag_.Swap(&other->tag_);
  comment_.Swap(&other->comment_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Pro_ZCIO::GetMetadata() const {
  protobuf_fldata_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_fldata_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Pro_ZCIO

// string Name = 1;
void Pro_ZCIO::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& Pro_ZCIO::name() const {
  // @@protoc_insertion_point(field_get:Pro_ZCIO.Name)
  return name_.GetNoArena();
}
void Pro_ZCIO::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Pro_ZCIO.Name)
}
#if LANG_CXX11
void Pro_ZCIO::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Pro_ZCIO.Name)
}
#endif
void Pro_ZCIO::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Pro_ZCIO.Name)
}
void Pro_ZCIO::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Pro_ZCIO.Name)
}
::std::string* Pro_ZCIO::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:Pro_ZCIO.Name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Pro_ZCIO::release_name() {
  // @@protoc_insertion_point(field_release:Pro_ZCIO.Name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Pro_ZCIO::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:Pro_ZCIO.Name)
}

// string Type = 2;
void Pro_ZCIO::clear_type() {
  type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& Pro_ZCIO::type() const {
  // @@protoc_insertion_point(field_get:Pro_ZCIO.Type)
  return type_.GetNoArena();
}
void Pro_ZCIO::set_type(const ::std::string& value) {
  
  type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Pro_ZCIO.Type)
}
#if LANG_CXX11
void Pro_ZCIO::set_type(::std::string&& value) {
  
  type_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Pro_ZCIO.Type)
}
#endif
void Pro_ZCIO::set_type(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Pro_ZCIO.Type)
}
void Pro_ZCIO::set_type(const char* value, size_t size) {
  
  type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Pro_ZCIO.Type)
}
::std::string* Pro_ZCIO::mutable_type() {
  
  // @@protoc_insertion_point(field_mutable:Pro_ZCIO.Type)
  return type_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Pro_ZCIO::release_type() {
  // @@protoc_insertion_point(field_release:Pro_ZCIO.Type)
  
  return type_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Pro_ZCIO::set_allocated_type(::std::string* type) {
  if (type != NULL) {
    
  } else {
    
  }
  type_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), type);
  // @@protoc_insertion_point(field_set_allocated:Pro_ZCIO.Type)
}

// string Value = 3;
void Pro_ZCIO::clear_value() {
  value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& Pro_ZCIO::value() const {
  // @@protoc_insertion_point(field_get:Pro_ZCIO.Value)
  return value_.GetNoArena();
}
void Pro_ZCIO::set_value(const ::std::string& value) {
  
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Pro_ZCIO.Value)
}
#if LANG_CXX11
void Pro_ZCIO::set_value(::std::string&& value) {
  
  value_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Pro_ZCIO.Value)
}
#endif
void Pro_ZCIO::set_value(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Pro_ZCIO.Value)
}
void Pro_ZCIO::set_value(const char* value, size_t size) {
  
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Pro_ZCIO.Value)
}
::std::string* Pro_ZCIO::mutable_value() {
  
  // @@protoc_insertion_point(field_mutable:Pro_ZCIO.Value)
  return value_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Pro_ZCIO::release_value() {
  // @@protoc_insertion_point(field_release:Pro_ZCIO.Value)
  
  return value_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Pro_ZCIO::set_allocated_value(::std::string* value) {
  if (value != NULL) {
    
  } else {
    
  }
  value_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set_allocated:Pro_ZCIO.Value)
}

// string Corrs = 4;
void Pro_ZCIO::clear_corrs() {
  corrs_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& Pro_ZCIO::corrs() const {
  // @@protoc_insertion_point(field_get:Pro_ZCIO.Corrs)
  return corrs_.GetNoArena();
}
void Pro_ZCIO::set_corrs(const ::std::string& value) {
  
  corrs_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Pro_ZCIO.Corrs)
}
#if LANG_CXX11
void Pro_ZCIO::set_corrs(::std::string&& value) {
  
  corrs_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Pro_ZCIO.Corrs)
}
#endif
void Pro_ZCIO::set_corrs(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  corrs_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Pro_ZCIO.Corrs)
}
void Pro_ZCIO::set_corrs(const char* value, size_t size) {
  
  corrs_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Pro_ZCIO.Corrs)
}
::std::string* Pro_ZCIO::mutable_corrs() {
  
  // @@protoc_insertion_point(field_mutable:Pro_ZCIO.Corrs)
  return corrs_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Pro_ZCIO::release_corrs() {
  // @@protoc_insertion_point(field_release:Pro_ZCIO.Corrs)
  
  return corrs_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Pro_ZCIO::set_allocated_corrs(::std::string* corrs) {
  if (corrs != NULL) {
    
  } else {
    
  }
  corrs_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), corrs);
  // @@protoc_insertion_point(field_set_allocated:Pro_ZCIO.Corrs)
}

// string CktProcessType = 5;
void Pro_ZCIO::clear_cktprocesstype() {
  cktprocesstype_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& Pro_ZCIO::cktprocesstype() const {
  // @@protoc_insertion_point(field_get:Pro_ZCIO.CktProcessType)
  return cktprocesstype_.GetNoArena();
}
void Pro_ZCIO::set_cktprocesstype(const ::std::string& value) {
  
  cktprocesstype_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Pro_ZCIO.CktProcessType)
}
#if LANG_CXX11
void Pro_ZCIO::set_cktprocesstype(::std::string&& value) {
  
  cktprocesstype_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Pro_ZCIO.CktProcessType)
}
#endif
void Pro_ZCIO::set_cktprocesstype(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  cktprocesstype_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Pro_ZCIO.CktProcessType)
}
void Pro_ZCIO::set_cktprocesstype(const char* value, size_t size) {
  
  cktprocesstype_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Pro_ZCIO.CktProcessType)
}
::std::string* Pro_ZCIO::mutable_cktprocesstype() {
  
  // @@protoc_insertion_point(field_mutable:Pro_ZCIO.CktProcessType)
  return cktprocesstype_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Pro_ZCIO::release_cktprocesstype() {
  // @@protoc_insertion_point(field_release:Pro_ZCIO.CktProcessType)
  
  return cktprocesstype_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Pro_ZCIO::set_allocated_cktprocesstype(::std::string* cktprocesstype) {
  if (cktprocesstype != NULL) {
    
  } else {
    
  }
  cktprocesstype_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), cktprocesstype);
  // @@protoc_insertion_point(field_set_allocated:Pro_ZCIO.CktProcessType)
}

// string Tag = 6;
void Pro_ZCIO::clear_tag() {
  tag_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& Pro_ZCIO::tag() const {
  // @@protoc_insertion_point(field_get:Pro_ZCIO.Tag)
  return tag_.GetNoArena();
}
void Pro_ZCIO::set_tag(const ::std::string& value) {
  
  tag_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Pro_ZCIO.Tag)
}
#if LANG_CXX11
void Pro_ZCIO::set_tag(::std::string&& value) {
  
  tag_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Pro_ZCIO.Tag)
}
#endif
void Pro_ZCIO::set_tag(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  tag_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Pro_ZCIO.Tag)
}
void Pro_ZCIO::set_tag(const char* value, size_t size) {
  
  tag_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Pro_ZCIO.Tag)
}
::std::string* Pro_ZCIO::mutable_tag() {
  
  // @@protoc_insertion_point(field_mutable:Pro_ZCIO.Tag)
  return tag_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Pro_ZCIO::release_tag() {
  // @@protoc_insertion_point(field_release:Pro_ZCIO.Tag)
  
  return tag_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Pro_ZCIO::set_allocated_tag(::std::string* tag) {
  if (tag != NULL) {
    
  } else {
    
  }
  tag_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), tag);
  // @@protoc_insertion_point(field_set_allocated:Pro_ZCIO.Tag)
}

// string Comment = 7;
void Pro_ZCIO::clear_comment() {
  comment_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& Pro_ZCIO::comment() const {
  // @@protoc_insertion_point(field_get:Pro_ZCIO.Comment)
  return comment_.GetNoArena();
}
void Pro_ZCIO::set_comment(const ::std::string& value) {
  
  comment_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Pro_ZCIO.Comment)
}
#if LANG_CXX11
void Pro_ZCIO::set_comment(::std::string&& value) {
  
  comment_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Pro_ZCIO.Comment)
}
#endif
void Pro_ZCIO::set_comment(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  comment_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Pro_ZCIO.Comment)
}
void Pro_ZCIO::set_comment(const char* value, size_t size) {
  
  comment_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Pro_ZCIO.Comment)
}
::std::string* Pro_ZCIO::mutable_comment() {
  
  // @@protoc_insertion_point(field_mutable:Pro_ZCIO.Comment)
  return comment_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Pro_ZCIO::release_comment() {
  // @@protoc_insertion_point(field_release:Pro_ZCIO.Comment)
  
  return comment_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Pro_ZCIO::set_allocated_comment(::std::string* comment) {
  if (comment != NULL) {
    
  } else {
    
  }
  comment_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), comment);
  // @@protoc_insertion_point(field_set_allocated:Pro_ZCIO.Comment)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Pro_ZC::kChannelFieldNumber;
const int Pro_ZC::kGUIDFieldNumber;
const int Pro_ZC::kLocationFieldNumber;
const int Pro_ZC::kMACAddrFieldNumber;
const int Pro_ZC::kNameFieldNumber;
const int Pro_ZC::kPANIDFieldNumber;
const int Pro_ZC::kPositionFieldNumber;
const int Pro_ZC::kTypeFieldNumber;
const int Pro_ZC::kScaleFieldNumber;
const int Pro_ZC::kWIOFieldNumber;
const int Pro_ZC::kInputFieldNumber;
const int Pro_ZC::kRELAYFieldNumber;
const int Pro_ZC::kLOCALTROUBLESFieldNumber;
const int Pro_ZC::kREMOTETROUBLEFieldNumber;
const int Pro_ZC::kSTATSFieldNumber;
const int Pro_ZC::kRangeFieldNumber;
const int Pro_ZC::kPassCodeFieldNumber;
const int Pro_ZC::kTimerFieldNumber;
const int Pro_ZC::kSCUFEATUREFLAGSFieldNumber;
const int Pro_ZC::kCommentFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Pro_ZC::Pro_ZC()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_fldata_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Pro_ZC)
}
Pro_ZC::Pro_ZC(const Pro_ZC& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      wio_(from.wio_),
      input_(from.input_),
      relay_(from.relay_),
      local_troubles_(from.local_troubles_),
      remote_trouble_(from.remote_trouble_),
      stats_(from.stats_),
      passcode_(from.passcode_),
      timer_(from.timer_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  channel_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.channel().size() > 0) {
    channel_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.channel_);
  }
  guid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.guid().size() > 0) {
    guid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.guid_);
  }
  location_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.location().size() > 0) {
    location_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.location_);
  }
  macaddr_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.macaddr().size() > 0) {
    macaddr_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.macaddr_);
  }
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  panid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.panid().size() > 0) {
    panid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.panid_);
  }
  type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.type().size() > 0) {
    type_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.type_);
  }
  comment_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.comment().size() > 0) {
    comment_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.comment_);
  }
  if (from.has_position()) {
    position_ = new ::Pro_Point(*from.position_);
  } else {
    position_ = NULL;
  }
  if (from.has_scale()) {
    scale_ = new ::Pro_Point(*from.scale_);
  } else {
    scale_ = NULL;
  }
  ::memcpy(&range_, &from.range_,
    reinterpret_cast<char*>(&scu_feature_flags_) -
    reinterpret_cast<char*>(&range_) + sizeof(scu_feature_flags_));
  // @@protoc_insertion_point(copy_constructor:Pro_ZC)
}

void Pro_ZC::SharedCtor() {
  channel_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  guid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  location_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  macaddr_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  panid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  comment_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&position_, 0, reinterpret_cast<char*>(&scu_feature_flags_) -
    reinterpret_cast<char*>(&position_) + sizeof(scu_feature_flags_));
  _cached_size_ = 0;
}

Pro_ZC::~Pro_ZC() {
  // @@protoc_insertion_point(destructor:Pro_ZC)
  SharedDtor();
}

void Pro_ZC::SharedDtor() {
  channel_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  guid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  location_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  macaddr_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  panid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  type_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  comment_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) {
    delete position_;
  }
  if (this != internal_default_instance()) {
    delete scale_;
  }
}

void Pro_ZC::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Pro_ZC::descriptor() {
  protobuf_fldata_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_fldata_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Pro_ZC& Pro_ZC::default_instance() {
  protobuf_fldata_2eproto::InitDefaults();
  return *internal_default_instance();
}

Pro_ZC* Pro_ZC::New(::google::protobuf::Arena* arena) const {
  Pro_ZC* n = new Pro_ZC;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Pro_ZC::Clear() {
// @@protoc_insertion_point(message_clear_start:Pro_ZC)
  wio_.Clear();
  input_.Clear();
  relay_.Clear();
  local_troubles_.Clear();
  remote_trouble_.Clear();
  stats_.Clear();
  passcode_.Clear();
  timer_.Clear();
  channel_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  guid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  location_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  macaddr_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  panid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  comment_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && position_ != NULL) {
    delete position_;
  }
  position_ = NULL;
  if (GetArenaNoVirtual() == NULL && scale_ != NULL) {
    delete scale_;
  }
  scale_ = NULL;
  ::memset(&range_, 0, reinterpret_cast<char*>(&scu_feature_flags_) -
    reinterpret_cast<char*>(&range_) + sizeof(scu_feature_flags_));
}

bool Pro_ZC::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Pro_ZC)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string Channel = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_channel()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->channel().data(), this->channel().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Pro_ZC.Channel"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string GUID = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_guid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->guid().data(), this->guid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Pro_ZC.GUID"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string Location = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_location()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->location().data(), this->location().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Pro_ZC.Location"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string MACAddr = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_macaddr()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->macaddr().data(), this->macaddr().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Pro_ZC.MACAddr"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string Name = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Pro_ZC.Name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string PANID = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_panid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->panid().data(), this->panid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Pro_ZC.PANID"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Pro_Point Position = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_position()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string Type = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_type()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->type().data(), this->type().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Pro_ZC.Type"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Pro_Point Scale = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_scale()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .Pro_WIO WIO = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_wio()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .Pro_ZCIO Input = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(90u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_input()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .Pro_ZCIO RELAY = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(98u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_relay()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .Pro_ZCIO LOCAL_TROUBLES = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(106u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_local_troubles()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .Pro_ZCIO REMOTE_TROUBLE = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(114u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_remote_trouble()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .Pro_ZCIO STATS = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(122u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_stats()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 range = 16;
      case 16: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(128u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &range_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string PassCode = 17;
      case 17: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(138u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_passcode()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->passcode(this->passcode_size() - 1).data(),
            this->passcode(this->passcode_size() - 1).length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Pro_ZC.PassCode"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .PRO_TIMER Timer = 18;
      case 18: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(146u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_timer()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 SCU_FEATURE_FLAGS = 19;
      case 19: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(152u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &scu_feature_flags_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string Comment = 20;
      case 20: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(162u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_comment()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->comment().data(), this->comment().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Pro_ZC.Comment"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Pro_ZC)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Pro_ZC)
  return false;
#undef DO_
}

void Pro_ZC::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Pro_ZC)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string Channel = 1;
  if (this->channel().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->channel().data(), this->channel().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Pro_ZC.Channel");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->channel(), output);
  }

  // string GUID = 2;
  if (this->guid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->guid().data(), this->guid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Pro_ZC.GUID");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->guid(), output);
  }

  // string Location = 3;
  if (this->location().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->location().data(), this->location().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Pro_ZC.Location");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->location(), output);
  }

  // string MACAddr = 4;
  if (this->macaddr().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->macaddr().data(), this->macaddr().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Pro_ZC.MACAddr");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->macaddr(), output);
  }

  // string Name = 5;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Pro_ZC.Name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->name(), output);
  }

  // string PANID = 6;
  if (this->panid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->panid().data(), this->panid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Pro_ZC.PANID");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->panid(), output);
  }

  // .Pro_Point Position = 7;
  if (this->has_position()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, *this->position_, output);
  }

  // string Type = 8;
  if (this->type().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->type().data(), this->type().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Pro_ZC.Type");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      8, this->type(), output);
  }

  // .Pro_Point Scale = 9;
  if (this->has_scale()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      9, *this->scale_, output);
  }

  // repeated .Pro_WIO WIO = 10;
  for (unsigned int i = 0, n = this->wio_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      10, this->wio(i), output);
  }

  // repeated .Pro_ZCIO Input = 11;
  for (unsigned int i = 0, n = this->input_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      11, this->input(i), output);
  }

  // repeated .Pro_ZCIO RELAY = 12;
  for (unsigned int i = 0, n = this->relay_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      12, this->relay(i), output);
  }

  // repeated .Pro_ZCIO LOCAL_TROUBLES = 13;
  for (unsigned int i = 0, n = this->local_troubles_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      13, this->local_troubles(i), output);
  }

  // repeated .Pro_ZCIO REMOTE_TROUBLE = 14;
  for (unsigned int i = 0, n = this->remote_trouble_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      14, this->remote_trouble(i), output);
  }

  // repeated .Pro_ZCIO STATS = 15;
  for (unsigned int i = 0, n = this->stats_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      15, this->stats(i), output);
  }

  // uint32 range = 16;
  if (this->range() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(16, this->range(), output);
  }

  // repeated string PassCode = 17;
  for (int i = 0, n = this->passcode_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->passcode(i).data(), this->passcode(i).length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Pro_ZC.PassCode");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      17, this->passcode(i), output);
  }

  // repeated .PRO_TIMER Timer = 18;
  for (unsigned int i = 0, n = this->timer_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      18, this->timer(i), output);
  }

  // int32 SCU_FEATURE_FLAGS = 19;
  if (this->scu_feature_flags() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(19, this->scu_feature_flags(), output);
  }

  // string Comment = 20;
  if (this->comment().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->comment().data(), this->comment().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Pro_ZC.Comment");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      20, this->comment(), output);
  }

  // @@protoc_insertion_point(serialize_end:Pro_ZC)
}

::google::protobuf::uint8* Pro_ZC::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:Pro_ZC)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string Channel = 1;
  if (this->channel().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->channel().data(), this->channel().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Pro_ZC.Channel");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->channel(), target);
  }

  // string GUID = 2;
  if (this->guid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->guid().data(), this->guid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Pro_ZC.GUID");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->guid(), target);
  }

  // string Location = 3;
  if (this->location().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->location().data(), this->location().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Pro_ZC.Location");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->location(), target);
  }

  // string MACAddr = 4;
  if (this->macaddr().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->macaddr().data(), this->macaddr().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Pro_ZC.MACAddr");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->macaddr(), target);
  }

  // string Name = 5;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Pro_ZC.Name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->name(), target);
  }

  // string PANID = 6;
  if (this->panid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->panid().data(), this->panid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Pro_ZC.PANID");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->panid(), target);
  }

  // .Pro_Point Position = 7;
  if (this->has_position()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        7, *this->position_, deterministic, target);
  }

  // string Type = 8;
  if (this->type().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->type().data(), this->type().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Pro_ZC.Type");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        8, this->type(), target);
  }

  // .Pro_Point Scale = 9;
  if (this->has_scale()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        9, *this->scale_, deterministic, target);
  }

  // repeated .Pro_WIO WIO = 10;
  for (unsigned int i = 0, n = this->wio_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        10, this->wio(i), deterministic, target);
  }

  // repeated .Pro_ZCIO Input = 11;
  for (unsigned int i = 0, n = this->input_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        11, this->input(i), deterministic, target);
  }

  // repeated .Pro_ZCIO RELAY = 12;
  for (unsigned int i = 0, n = this->relay_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        12, this->relay(i), deterministic, target);
  }

  // repeated .Pro_ZCIO LOCAL_TROUBLES = 13;
  for (unsigned int i = 0, n = this->local_troubles_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        13, this->local_troubles(i), deterministic, target);
  }

  // repeated .Pro_ZCIO REMOTE_TROUBLE = 14;
  for (unsigned int i = 0, n = this->remote_trouble_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        14, this->remote_trouble(i), deterministic, target);
  }

  // repeated .Pro_ZCIO STATS = 15;
  for (unsigned int i = 0, n = this->stats_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        15, this->stats(i), deterministic, target);
  }

  // uint32 range = 16;
  if (this->range() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(16, this->range(), target);
  }

  // repeated string PassCode = 17;
  for (int i = 0, n = this->passcode_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->passcode(i).data(), this->passcode(i).length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Pro_ZC.PassCode");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(17, this->passcode(i), target);
  }

  // repeated .PRO_TIMER Timer = 18;
  for (unsigned int i = 0, n = this->timer_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        18, this->timer(i), deterministic, target);
  }

  // int32 SCU_FEATURE_FLAGS = 19;
  if (this->scu_feature_flags() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(19, this->scu_feature_flags(), target);
  }

  // string Comment = 20;
  if (this->comment().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->comment().data(), this->comment().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Pro_ZC.Comment");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        20, this->comment(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:Pro_ZC)
  return target;
}

size_t Pro_ZC::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Pro_ZC)
  size_t total_size = 0;

  // repeated .Pro_WIO WIO = 10;
  {
    unsigned int count = this->wio_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->wio(i));
    }
  }

  // repeated .Pro_ZCIO Input = 11;
  {
    unsigned int count = this->input_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->input(i));
    }
  }

  // repeated .Pro_ZCIO RELAY = 12;
  {
    unsigned int count = this->relay_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->relay(i));
    }
  }

  // repeated .Pro_ZCIO LOCAL_TROUBLES = 13;
  {
    unsigned int count = this->local_troubles_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->local_troubles(i));
    }
  }

  // repeated .Pro_ZCIO REMOTE_TROUBLE = 14;
  {
    unsigned int count = this->remote_trouble_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->remote_trouble(i));
    }
  }

  // repeated .Pro_ZCIO STATS = 15;
  {
    unsigned int count = this->stats_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->stats(i));
    }
  }

  // repeated string PassCode = 17;
  total_size += 2 *
      ::google::protobuf::internal::FromIntSize(this->passcode_size());
  for (int i = 0, n = this->passcode_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->passcode(i));
  }

  // repeated .PRO_TIMER Timer = 18;
  {
    unsigned int count = this->timer_size();
    total_size += 2UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->timer(i));
    }
  }

  // string Channel = 1;
  if (this->channel().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->channel());
  }

  // string GUID = 2;
  if (this->guid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->guid());
  }

  // string Location = 3;
  if (this->location().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->location());
  }

  // string MACAddr = 4;
  if (this->macaddr().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->macaddr());
  }

  // string Name = 5;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // string PANID = 6;
  if (this->panid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->panid());
  }

  // string Type = 8;
  if (this->type().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->type());
  }

  // string Comment = 20;
  if (this->comment().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->comment());
  }

  // .Pro_Point Position = 7;
  if (this->has_position()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->position_);
  }

  // .Pro_Point Scale = 9;
  if (this->has_scale()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->scale_);
  }

  // uint32 range = 16;
  if (this->range() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->range());
  }

  // int32 SCU_FEATURE_FLAGS = 19;
  if (this->scu_feature_flags() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->scu_feature_flags());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Pro_ZC::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Pro_ZC)
  GOOGLE_DCHECK_NE(&from, this);
  const Pro_ZC* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Pro_ZC>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Pro_ZC)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Pro_ZC)
    MergeFrom(*source);
  }
}

void Pro_ZC::MergeFrom(const Pro_ZC& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Pro_ZC)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  wio_.MergeFrom(from.wio_);
  input_.MergeFrom(from.input_);
  relay_.MergeFrom(from.relay_);
  local_troubles_.MergeFrom(from.local_troubles_);
  remote_trouble_.MergeFrom(from.remote_trouble_);
  stats_.MergeFrom(from.stats_);
  passcode_.MergeFrom(from.passcode_);
  timer_.MergeFrom(from.timer_);
  if (from.channel().size() > 0) {

    channel_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.channel_);
  }
  if (from.guid().size() > 0) {

    guid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.guid_);
  }
  if (from.location().size() > 0) {

    location_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.location_);
  }
  if (from.macaddr().size() > 0) {

    macaddr_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.macaddr_);
  }
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.panid().size() > 0) {

    panid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.panid_);
  }
  if (from.type().size() > 0) {

    type_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.type_);
  }
  if (from.comment().size() > 0) {

    comment_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.comment_);
  }
  if (from.has_position()) {
    mutable_position()->::Pro_Point::MergeFrom(from.position());
  }
  if (from.has_scale()) {
    mutable_scale()->::Pro_Point::MergeFrom(from.scale());
  }
  if (from.range() != 0) {
    set_range(from.range());
  }
  if (from.scu_feature_flags() != 0) {
    set_scu_feature_flags(from.scu_feature_flags());
  }
}

void Pro_ZC::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Pro_ZC)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Pro_ZC::CopyFrom(const Pro_ZC& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Pro_ZC)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Pro_ZC::IsInitialized() const {
  return true;
}

void Pro_ZC::Swap(Pro_ZC* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Pro_ZC::InternalSwap(Pro_ZC* other) {
  wio_.InternalSwap(&other->wio_);
  input_.InternalSwap(&other->input_);
  relay_.InternalSwap(&other->relay_);
  local_troubles_.InternalSwap(&other->local_troubles_);
  remote_trouble_.InternalSwap(&other->remote_trouble_);
  stats_.InternalSwap(&other->stats_);
  passcode_.InternalSwap(&other->passcode_);
  timer_.InternalSwap(&other->timer_);
  channel_.Swap(&other->channel_);
  guid_.Swap(&other->guid_);
  location_.Swap(&other->location_);
  macaddr_.Swap(&other->macaddr_);
  name_.Swap(&other->name_);
  panid_.Swap(&other->panid_);
  type_.Swap(&other->type_);
  comment_.Swap(&other->comment_);
  std::swap(position_, other->position_);
  std::swap(scale_, other->scale_);
  std::swap(range_, other->range_);
  std::swap(scu_feature_flags_, other->scu_feature_flags_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Pro_ZC::GetMetadata() const {
  protobuf_fldata_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_fldata_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Pro_ZC

// string Channel = 1;
void Pro_ZC::clear_channel() {
  channel_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& Pro_ZC::channel() const {
  // @@protoc_insertion_point(field_get:Pro_ZC.Channel)
  return channel_.GetNoArena();
}
void Pro_ZC::set_channel(const ::std::string& value) {
  
  channel_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Pro_ZC.Channel)
}
#if LANG_CXX11
void Pro_ZC::set_channel(::std::string&& value) {
  
  channel_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Pro_ZC.Channel)
}
#endif
void Pro_ZC::set_channel(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  channel_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Pro_ZC.Channel)
}
void Pro_ZC::set_channel(const char* value, size_t size) {
  
  channel_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Pro_ZC.Channel)
}
::std::string* Pro_ZC::mutable_channel() {
  
  // @@protoc_insertion_point(field_mutable:Pro_ZC.Channel)
  return channel_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Pro_ZC::release_channel() {
  // @@protoc_insertion_point(field_release:Pro_ZC.Channel)
  
  return channel_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Pro_ZC::set_allocated_channel(::std::string* channel) {
  if (channel != NULL) {
    
  } else {
    
  }
  channel_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), channel);
  // @@protoc_insertion_point(field_set_allocated:Pro_ZC.Channel)
}

// string GUID = 2;
void Pro_ZC::clear_guid() {
  guid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& Pro_ZC::guid() const {
  // @@protoc_insertion_point(field_get:Pro_ZC.GUID)
  return guid_.GetNoArena();
}
void Pro_ZC::set_guid(const ::std::string& value) {
  
  guid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Pro_ZC.GUID)
}
#if LANG_CXX11
void Pro_ZC::set_guid(::std::string&& value) {
  
  guid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Pro_ZC.GUID)
}
#endif
void Pro_ZC::set_guid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  guid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Pro_ZC.GUID)
}
void Pro_ZC::set_guid(const char* value, size_t size) {
  
  guid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Pro_ZC.GUID)
}
::std::string* Pro_ZC::mutable_guid() {
  
  // @@protoc_insertion_point(field_mutable:Pro_ZC.GUID)
  return guid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Pro_ZC::release_guid() {
  // @@protoc_insertion_point(field_release:Pro_ZC.GUID)
  
  return guid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Pro_ZC::set_allocated_guid(::std::string* guid) {
  if (guid != NULL) {
    
  } else {
    
  }
  guid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), guid);
  // @@protoc_insertion_point(field_set_allocated:Pro_ZC.GUID)
}

// string Location = 3;
void Pro_ZC::clear_location() {
  location_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& Pro_ZC::location() const {
  // @@protoc_insertion_point(field_get:Pro_ZC.Location)
  return location_.GetNoArena();
}
void Pro_ZC::set_location(const ::std::string& value) {
  
  location_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Pro_ZC.Location)
}
#if LANG_CXX11
void Pro_ZC::set_location(::std::string&& value) {
  
  location_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Pro_ZC.Location)
}
#endif
void Pro_ZC::set_location(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  location_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Pro_ZC.Location)
}
void Pro_ZC::set_location(const char* value, size_t size) {
  
  location_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Pro_ZC.Location)
}
::std::string* Pro_ZC::mutable_location() {
  
  // @@protoc_insertion_point(field_mutable:Pro_ZC.Location)
  return location_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Pro_ZC::release_location() {
  // @@protoc_insertion_point(field_release:Pro_ZC.Location)
  
  return location_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Pro_ZC::set_allocated_location(::std::string* location) {
  if (location != NULL) {
    
  } else {
    
  }
  location_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), location);
  // @@protoc_insertion_point(field_set_allocated:Pro_ZC.Location)
}

// string MACAddr = 4;
void Pro_ZC::clear_macaddr() {
  macaddr_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& Pro_ZC::macaddr() const {
  // @@protoc_insertion_point(field_get:Pro_ZC.MACAddr)
  return macaddr_.GetNoArena();
}
void Pro_ZC::set_macaddr(const ::std::string& value) {
  
  macaddr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Pro_ZC.MACAddr)
}
#if LANG_CXX11
void Pro_ZC::set_macaddr(::std::string&& value) {
  
  macaddr_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Pro_ZC.MACAddr)
}
#endif
void Pro_ZC::set_macaddr(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  macaddr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Pro_ZC.MACAddr)
}
void Pro_ZC::set_macaddr(const char* value, size_t size) {
  
  macaddr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Pro_ZC.MACAddr)
}
::std::string* Pro_ZC::mutable_macaddr() {
  
  // @@protoc_insertion_point(field_mutable:Pro_ZC.MACAddr)
  return macaddr_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Pro_ZC::release_macaddr() {
  // @@protoc_insertion_point(field_release:Pro_ZC.MACAddr)
  
  return macaddr_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Pro_ZC::set_allocated_macaddr(::std::string* macaddr) {
  if (macaddr != NULL) {
    
  } else {
    
  }
  macaddr_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), macaddr);
  // @@protoc_insertion_point(field_set_allocated:Pro_ZC.MACAddr)
}

// string Name = 5;
void Pro_ZC::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& Pro_ZC::name() const {
  // @@protoc_insertion_point(field_get:Pro_ZC.Name)
  return name_.GetNoArena();
}
void Pro_ZC::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Pro_ZC.Name)
}
#if LANG_CXX11
void Pro_ZC::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Pro_ZC.Name)
}
#endif
void Pro_ZC::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Pro_ZC.Name)
}
void Pro_ZC::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Pro_ZC.Name)
}
::std::string* Pro_ZC::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:Pro_ZC.Name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Pro_ZC::release_name() {
  // @@protoc_insertion_point(field_release:Pro_ZC.Name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Pro_ZC::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:Pro_ZC.Name)
}

// string PANID = 6;
void Pro_ZC::clear_panid() {
  panid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& Pro_ZC::panid() const {
  // @@protoc_insertion_point(field_get:Pro_ZC.PANID)
  return panid_.GetNoArena();
}
void Pro_ZC::set_panid(const ::std::string& value) {
  
  panid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Pro_ZC.PANID)
}
#if LANG_CXX11
void Pro_ZC::set_panid(::std::string&& value) {
  
  panid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Pro_ZC.PANID)
}
#endif
void Pro_ZC::set_panid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  panid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Pro_ZC.PANID)
}
void Pro_ZC::set_panid(const char* value, size_t size) {
  
  panid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Pro_ZC.PANID)
}
::std::string* Pro_ZC::mutable_panid() {
  
  // @@protoc_insertion_point(field_mutable:Pro_ZC.PANID)
  return panid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Pro_ZC::release_panid() {
  // @@protoc_insertion_point(field_release:Pro_ZC.PANID)
  
  return panid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Pro_ZC::set_allocated_panid(::std::string* panid) {
  if (panid != NULL) {
    
  } else {
    
  }
  panid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), panid);
  // @@protoc_insertion_point(field_set_allocated:Pro_ZC.PANID)
}

// .Pro_Point Position = 7;
bool Pro_ZC::has_position() const {
  return this != internal_default_instance() && position_ != NULL;
}
void Pro_ZC::clear_position() {
  if (GetArenaNoVirtual() == NULL && position_ != NULL) delete position_;
  position_ = NULL;
}
const ::Pro_Point& Pro_ZC::position() const {
  // @@protoc_insertion_point(field_get:Pro_ZC.Position)
  return position_ != NULL ? *position_
                         : *::Pro_Point::internal_default_instance();
}
::Pro_Point* Pro_ZC::mutable_position() {
  
  if (position_ == NULL) {
    position_ = new ::Pro_Point;
  }
  // @@protoc_insertion_point(field_mutable:Pro_ZC.Position)
  return position_;
}
::Pro_Point* Pro_ZC::release_position() {
  // @@protoc_insertion_point(field_release:Pro_ZC.Position)
  
  ::Pro_Point* temp = position_;
  position_ = NULL;
  return temp;
}
void Pro_ZC::set_allocated_position(::Pro_Point* position) {
  delete position_;
  position_ = position;
  if (position) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Pro_ZC.Position)
}

// string Type = 8;
void Pro_ZC::clear_type() {
  type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& Pro_ZC::type() const {
  // @@protoc_insertion_point(field_get:Pro_ZC.Type)
  return type_.GetNoArena();
}
void Pro_ZC::set_type(const ::std::string& value) {
  
  type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Pro_ZC.Type)
}
#if LANG_CXX11
void Pro_ZC::set_type(::std::string&& value) {
  
  type_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Pro_ZC.Type)
}
#endif
void Pro_ZC::set_type(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Pro_ZC.Type)
}
void Pro_ZC::set_type(const char* value, size_t size) {
  
  type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Pro_ZC.Type)
}
::std::string* Pro_ZC::mutable_type() {
  
  // @@protoc_insertion_point(field_mutable:Pro_ZC.Type)
  return type_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Pro_ZC::release_type() {
  // @@protoc_insertion_point(field_release:Pro_ZC.Type)
  
  return type_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Pro_ZC::set_allocated_type(::std::string* type) {
  if (type != NULL) {
    
  } else {
    
  }
  type_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), type);
  // @@protoc_insertion_point(field_set_allocated:Pro_ZC.Type)
}

// .Pro_Point Scale = 9;
bool Pro_ZC::has_scale() const {
  return this != internal_default_instance() && scale_ != NULL;
}
void Pro_ZC::clear_scale() {
  if (GetArenaNoVirtual() == NULL && scale_ != NULL) delete scale_;
  scale_ = NULL;
}
const ::Pro_Point& Pro_ZC::scale() const {
  // @@protoc_insertion_point(field_get:Pro_ZC.Scale)
  return scale_ != NULL ? *scale_
                         : *::Pro_Point::internal_default_instance();
}
::Pro_Point* Pro_ZC::mutable_scale() {
  
  if (scale_ == NULL) {
    scale_ = new ::Pro_Point;
  }
  // @@protoc_insertion_point(field_mutable:Pro_ZC.Scale)
  return scale_;
}
::Pro_Point* Pro_ZC::release_scale() {
  // @@protoc_insertion_point(field_release:Pro_ZC.Scale)
  
  ::Pro_Point* temp = scale_;
  scale_ = NULL;
  return temp;
}
void Pro_ZC::set_allocated_scale(::Pro_Point* scale) {
  delete scale_;
  scale_ = scale;
  if (scale) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Pro_ZC.Scale)
}

// repeated .Pro_WIO WIO = 10;
int Pro_ZC::wio_size() const {
  return wio_.size();
}
void Pro_ZC::clear_wio() {
  wio_.Clear();
}
const ::Pro_WIO& Pro_ZC::wio(int index) const {
  // @@protoc_insertion_point(field_get:Pro_ZC.WIO)
  return wio_.Get(index);
}
::Pro_WIO* Pro_ZC::mutable_wio(int index) {
  // @@protoc_insertion_point(field_mutable:Pro_ZC.WIO)
  return wio_.Mutable(index);
}
::Pro_WIO* Pro_ZC::add_wio() {
  // @@protoc_insertion_point(field_add:Pro_ZC.WIO)
  return wio_.Add();
}
::google::protobuf::RepeatedPtrField< ::Pro_WIO >*
Pro_ZC::mutable_wio() {
  // @@protoc_insertion_point(field_mutable_list:Pro_ZC.WIO)
  return &wio_;
}
const ::google::protobuf::RepeatedPtrField< ::Pro_WIO >&
Pro_ZC::wio() const {
  // @@protoc_insertion_point(field_list:Pro_ZC.WIO)
  return wio_;
}

// repeated .Pro_ZCIO Input = 11;
int Pro_ZC::input_size() const {
  return input_.size();
}
void Pro_ZC::clear_input() {
  input_.Clear();
}
const ::Pro_ZCIO& Pro_ZC::input(int index) const {
  // @@protoc_insertion_point(field_get:Pro_ZC.Input)
  return input_.Get(index);
}
::Pro_ZCIO* Pro_ZC::mutable_input(int index) {
  // @@protoc_insertion_point(field_mutable:Pro_ZC.Input)
  return input_.Mutable(index);
}
::Pro_ZCIO* Pro_ZC::add_input() {
  // @@protoc_insertion_point(field_add:Pro_ZC.Input)
  return input_.Add();
}
::google::protobuf::RepeatedPtrField< ::Pro_ZCIO >*
Pro_ZC::mutable_input() {
  // @@protoc_insertion_point(field_mutable_list:Pro_ZC.Input)
  return &input_;
}
const ::google::protobuf::RepeatedPtrField< ::Pro_ZCIO >&
Pro_ZC::input() const {
  // @@protoc_insertion_point(field_list:Pro_ZC.Input)
  return input_;
}

// repeated .Pro_ZCIO RELAY = 12;
int Pro_ZC::relay_size() const {
  return relay_.size();
}
void Pro_ZC::clear_relay() {
  relay_.Clear();
}
const ::Pro_ZCIO& Pro_ZC::relay(int index) const {
  // @@protoc_insertion_point(field_get:Pro_ZC.RELAY)
  return relay_.Get(index);
}
::Pro_ZCIO* Pro_ZC::mutable_relay(int index) {
  // @@protoc_insertion_point(field_mutable:Pro_ZC.RELAY)
  return relay_.Mutable(index);
}
::Pro_ZCIO* Pro_ZC::add_relay() {
  // @@protoc_insertion_point(field_add:Pro_ZC.RELAY)
  return relay_.Add();
}
::google::protobuf::RepeatedPtrField< ::Pro_ZCIO >*
Pro_ZC::mutable_relay() {
  // @@protoc_insertion_point(field_mutable_list:Pro_ZC.RELAY)
  return &relay_;
}
const ::google::protobuf::RepeatedPtrField< ::Pro_ZCIO >&
Pro_ZC::relay() const {
  // @@protoc_insertion_point(field_list:Pro_ZC.RELAY)
  return relay_;
}

// repeated .Pro_ZCIO LOCAL_TROUBLES = 13;
int Pro_ZC::local_troubles_size() const {
  return local_troubles_.size();
}
void Pro_ZC::clear_local_troubles() {
  local_troubles_.Clear();
}
const ::Pro_ZCIO& Pro_ZC::local_troubles(int index) const {
  // @@protoc_insertion_point(field_get:Pro_ZC.LOCAL_TROUBLES)
  return local_troubles_.Get(index);
}
::Pro_ZCIO* Pro_ZC::mutable_local_troubles(int index) {
  // @@protoc_insertion_point(field_mutable:Pro_ZC.LOCAL_TROUBLES)
  return local_troubles_.Mutable(index);
}
::Pro_ZCIO* Pro_ZC::add_local_troubles() {
  // @@protoc_insertion_point(field_add:Pro_ZC.LOCAL_TROUBLES)
  return local_troubles_.Add();
}
::google::protobuf::RepeatedPtrField< ::Pro_ZCIO >*
Pro_ZC::mutable_local_troubles() {
  // @@protoc_insertion_point(field_mutable_list:Pro_ZC.LOCAL_TROUBLES)
  return &local_troubles_;
}
const ::google::protobuf::RepeatedPtrField< ::Pro_ZCIO >&
Pro_ZC::local_troubles() const {
  // @@protoc_insertion_point(field_list:Pro_ZC.LOCAL_TROUBLES)
  return local_troubles_;
}

// repeated .Pro_ZCIO REMOTE_TROUBLE = 14;
int Pro_ZC::remote_trouble_size() const {
  return remote_trouble_.size();
}
void Pro_ZC::clear_remote_trouble() {
  remote_trouble_.Clear();
}
const ::Pro_ZCIO& Pro_ZC::remote_trouble(int index) const {
  // @@protoc_insertion_point(field_get:Pro_ZC.REMOTE_TROUBLE)
  return remote_trouble_.Get(index);
}
::Pro_ZCIO* Pro_ZC::mutable_remote_trouble(int index) {
  // @@protoc_insertion_point(field_mutable:Pro_ZC.REMOTE_TROUBLE)
  return remote_trouble_.Mutable(index);
}
::Pro_ZCIO* Pro_ZC::add_remote_trouble() {
  // @@protoc_insertion_point(field_add:Pro_ZC.REMOTE_TROUBLE)
  return remote_trouble_.Add();
}
::google::protobuf::RepeatedPtrField< ::Pro_ZCIO >*
Pro_ZC::mutable_remote_trouble() {
  // @@protoc_insertion_point(field_mutable_list:Pro_ZC.REMOTE_TROUBLE)
  return &remote_trouble_;
}
const ::google::protobuf::RepeatedPtrField< ::Pro_ZCIO >&
Pro_ZC::remote_trouble() const {
  // @@protoc_insertion_point(field_list:Pro_ZC.REMOTE_TROUBLE)
  return remote_trouble_;
}

// repeated .Pro_ZCIO STATS = 15;
int Pro_ZC::stats_size() const {
  return stats_.size();
}
void Pro_ZC::clear_stats() {
  stats_.Clear();
}
const ::Pro_ZCIO& Pro_ZC::stats(int index) const {
  // @@protoc_insertion_point(field_get:Pro_ZC.STATS)
  return stats_.Get(index);
}
::Pro_ZCIO* Pro_ZC::mutable_stats(int index) {
  // @@protoc_insertion_point(field_mutable:Pro_ZC.STATS)
  return stats_.Mutable(index);
}
::Pro_ZCIO* Pro_ZC::add_stats() {
  // @@protoc_insertion_point(field_add:Pro_ZC.STATS)
  return stats_.Add();
}
::google::protobuf::RepeatedPtrField< ::Pro_ZCIO >*
Pro_ZC::mutable_stats() {
  // @@protoc_insertion_point(field_mutable_list:Pro_ZC.STATS)
  return &stats_;
}
const ::google::protobuf::RepeatedPtrField< ::Pro_ZCIO >&
Pro_ZC::stats() const {
  // @@protoc_insertion_point(field_list:Pro_ZC.STATS)
  return stats_;
}

// uint32 range = 16;
void Pro_ZC::clear_range() {
  range_ = 0u;
}
::google::protobuf::uint32 Pro_ZC::range() const {
  // @@protoc_insertion_point(field_get:Pro_ZC.range)
  return range_;
}
void Pro_ZC::set_range(::google::protobuf::uint32 value) {
  
  range_ = value;
  // @@protoc_insertion_point(field_set:Pro_ZC.range)
}

// repeated string PassCode = 17;
int Pro_ZC::passcode_size() const {
  return passcode_.size();
}
void Pro_ZC::clear_passcode() {
  passcode_.Clear();
}
const ::std::string& Pro_ZC::passcode(int index) const {
  // @@protoc_insertion_point(field_get:Pro_ZC.PassCode)
  return passcode_.Get(index);
}
::std::string* Pro_ZC::mutable_passcode(int index) {
  // @@protoc_insertion_point(field_mutable:Pro_ZC.PassCode)
  return passcode_.Mutable(index);
}
void Pro_ZC::set_passcode(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:Pro_ZC.PassCode)
  passcode_.Mutable(index)->assign(value);
}
#if LANG_CXX11
void Pro_ZC::set_passcode(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:Pro_ZC.PassCode)
  passcode_.Mutable(index)->assign(std::move(value));
}
#endif
void Pro_ZC::set_passcode(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  passcode_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:Pro_ZC.PassCode)
}
void Pro_ZC::set_passcode(int index, const char* value, size_t size) {
  passcode_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Pro_ZC.PassCode)
}
::std::string* Pro_ZC::add_passcode() {
  // @@protoc_insertion_point(field_add_mutable:Pro_ZC.PassCode)
  return passcode_.Add();
}
void Pro_ZC::add_passcode(const ::std::string& value) {
  passcode_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:Pro_ZC.PassCode)
}
#if LANG_CXX11
void Pro_ZC::add_passcode(::std::string&& value) {
  passcode_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:Pro_ZC.PassCode)
}
#endif
void Pro_ZC::add_passcode(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  passcode_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:Pro_ZC.PassCode)
}
void Pro_ZC::add_passcode(const char* value, size_t size) {
  passcode_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:Pro_ZC.PassCode)
}
const ::google::protobuf::RepeatedPtrField< ::std::string>&
Pro_ZC::passcode() const {
  // @@protoc_insertion_point(field_list:Pro_ZC.PassCode)
  return passcode_;
}
::google::protobuf::RepeatedPtrField< ::std::string>*
Pro_ZC::mutable_passcode() {
  // @@protoc_insertion_point(field_mutable_list:Pro_ZC.PassCode)
  return &passcode_;
}

// repeated .PRO_TIMER Timer = 18;
int Pro_ZC::timer_size() const {
  return timer_.size();
}
void Pro_ZC::clear_timer() {
  timer_.Clear();
}
const ::PRO_TIMER& Pro_ZC::timer(int index) const {
  // @@protoc_insertion_point(field_get:Pro_ZC.Timer)
  return timer_.Get(index);
}
::PRO_TIMER* Pro_ZC::mutable_timer(int index) {
  // @@protoc_insertion_point(field_mutable:Pro_ZC.Timer)
  return timer_.Mutable(index);
}
::PRO_TIMER* Pro_ZC::add_timer() {
  // @@protoc_insertion_point(field_add:Pro_ZC.Timer)
  return timer_.Add();
}
::google::protobuf::RepeatedPtrField< ::PRO_TIMER >*
Pro_ZC::mutable_timer() {
  // @@protoc_insertion_point(field_mutable_list:Pro_ZC.Timer)
  return &timer_;
}
const ::google::protobuf::RepeatedPtrField< ::PRO_TIMER >&
Pro_ZC::timer() const {
  // @@protoc_insertion_point(field_list:Pro_ZC.Timer)
  return timer_;
}

// int32 SCU_FEATURE_FLAGS = 19;
void Pro_ZC::clear_scu_feature_flags() {
  scu_feature_flags_ = 0;
}
::google::protobuf::int32 Pro_ZC::scu_feature_flags() const {
  // @@protoc_insertion_point(field_get:Pro_ZC.SCU_FEATURE_FLAGS)
  return scu_feature_flags_;
}
void Pro_ZC::set_scu_feature_flags(::google::protobuf::int32 value) {
  
  scu_feature_flags_ = value;
  // @@protoc_insertion_point(field_set:Pro_ZC.SCU_FEATURE_FLAGS)
}

// string Comment = 20;
void Pro_ZC::clear_comment() {
  comment_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& Pro_ZC::comment() const {
  // @@protoc_insertion_point(field_get:Pro_ZC.Comment)
  return comment_.GetNoArena();
}
void Pro_ZC::set_comment(const ::std::string& value) {
  
  comment_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Pro_ZC.Comment)
}
#if LANG_CXX11
void Pro_ZC::set_comment(::std::string&& value) {
  
  comment_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Pro_ZC.Comment)
}
#endif
void Pro_ZC::set_comment(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  comment_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Pro_ZC.Comment)
}
void Pro_ZC::set_comment(const char* value, size_t size) {
  
  comment_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Pro_ZC.Comment)
}
::std::string* Pro_ZC::mutable_comment() {
  
  // @@protoc_insertion_point(field_mutable:Pro_ZC.Comment)
  return comment_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Pro_ZC::release_comment() {
  // @@protoc_insertion_point(field_release:Pro_ZC.Comment)
  
  return comment_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Pro_ZC::set_allocated_comment(::std::string* comment) {
  if (comment != NULL) {
    
  } else {
    
  }
  comment_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), comment);
  // @@protoc_insertion_point(field_set_allocated:Pro_ZC.Comment)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Pro_Floor::kCommentFieldNumber;
const int Pro_Floor::kFloorGraphFieldNumber;
const int Pro_Floor::kGUIDFieldNumber;
const int Pro_Floor::kNameFieldNumber;
const int Pro_Floor::kPositionFieldNumber;
const int Pro_Floor::kTypeFieldNumber;
const int Pro_Floor::kScaleFieldNumber;
const int Pro_Floor::kUnitOfMeasureFieldNumber;
const int Pro_Floor::kZCFieldNumber;
const int Pro_Floor::kPlottingScaleFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Pro_Floor::Pro_Floor()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_fldata_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Pro_Floor)
}
Pro_Floor::Pro_Floor(const Pro_Floor& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      zc_(from.zc_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  comment_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.comment().size() > 0) {
    comment_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.comment_);
  }
  floorgraph_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.floorgraph().size() > 0) {
    floorgraph_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.floorgraph_);
  }
  guid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.guid().size() > 0) {
    guid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.guid_);
  }
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.type().size() > 0) {
    type_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.type_);
  }
  unit_of_measure_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.unit_of_measure().size() > 0) {
    unit_of_measure_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.unit_of_measure_);
  }
  plotting_scale_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.plotting_scale().size() > 0) {
    plotting_scale_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.plotting_scale_);
  }
  if (from.has_position()) {
    position_ = new ::Pro_Point(*from.position_);
  } else {
    position_ = NULL;
  }
  if (from.has_scale()) {
    scale_ = new ::Pro_Point(*from.scale_);
  } else {
    scale_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:Pro_Floor)
}

void Pro_Floor::SharedCtor() {
  comment_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  floorgraph_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  guid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  unit_of_measure_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  plotting_scale_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&position_, 0, reinterpret_cast<char*>(&scale_) -
    reinterpret_cast<char*>(&position_) + sizeof(scale_));
  _cached_size_ = 0;
}

Pro_Floor::~Pro_Floor() {
  // @@protoc_insertion_point(destructor:Pro_Floor)
  SharedDtor();
}

void Pro_Floor::SharedDtor() {
  comment_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  floorgraph_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  guid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  type_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  unit_of_measure_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  plotting_scale_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) {
    delete position_;
  }
  if (this != internal_default_instance()) {
    delete scale_;
  }
}

void Pro_Floor::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Pro_Floor::descriptor() {
  protobuf_fldata_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_fldata_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Pro_Floor& Pro_Floor::default_instance() {
  protobuf_fldata_2eproto::InitDefaults();
  return *internal_default_instance();
}

Pro_Floor* Pro_Floor::New(::google::protobuf::Arena* arena) const {
  Pro_Floor* n = new Pro_Floor;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Pro_Floor::Clear() {
// @@protoc_insertion_point(message_clear_start:Pro_Floor)
  zc_.Clear();
  comment_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  floorgraph_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  guid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  unit_of_measure_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  plotting_scale_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && position_ != NULL) {
    delete position_;
  }
  position_ = NULL;
  if (GetArenaNoVirtual() == NULL && scale_ != NULL) {
    delete scale_;
  }
  scale_ = NULL;
}

bool Pro_Floor::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Pro_Floor)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string Comment = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_comment()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->comment().data(), this->comment().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Pro_Floor.Comment"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string FloorGraph = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_floorgraph()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->floorgraph().data(), this->floorgraph().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Pro_Floor.FloorGraph"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string GUID = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_guid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->guid().data(), this->guid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Pro_Floor.GUID"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string Name = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Pro_Floor.Name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Pro_Point Position = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_position()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string Type = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_type()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->type().data(), this->type().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Pro_Floor.Type"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Pro_Point Scale = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_scale()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string unit_of_measure = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_unit_of_measure()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->unit_of_measure().data(), this->unit_of_measure().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Pro_Floor.unit_of_measure"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .Pro_ZC ZC = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_zc()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string plotting_scale = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_plotting_scale()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->plotting_scale().data(), this->plotting_scale().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Pro_Floor.plotting_scale"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Pro_Floor)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Pro_Floor)
  return false;
#undef DO_
}

void Pro_Floor::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Pro_Floor)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string Comment = 1;
  if (this->comment().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->comment().data(), this->comment().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Pro_Floor.Comment");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->comment(), output);
  }

  // string FloorGraph = 2;
  if (this->floorgraph().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->floorgraph().data(), this->floorgraph().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Pro_Floor.FloorGraph");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->floorgraph(), output);
  }

  // string GUID = 3;
  if (this->guid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->guid().data(), this->guid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Pro_Floor.GUID");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->guid(), output);
  }

  // string Name = 4;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Pro_Floor.Name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->name(), output);
  }

  // .Pro_Point Position = 5;
  if (this->has_position()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, *this->position_, output);
  }

  // string Type = 6;
  if (this->type().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->type().data(), this->type().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Pro_Floor.Type");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->type(), output);
  }

  // .Pro_Point Scale = 7;
  if (this->has_scale()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, *this->scale_, output);
  }

  // string unit_of_measure = 8;
  if (this->unit_of_measure().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->unit_of_measure().data(), this->unit_of_measure().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Pro_Floor.unit_of_measure");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      8, this->unit_of_measure(), output);
  }

  // repeated .Pro_ZC ZC = 9;
  for (unsigned int i = 0, n = this->zc_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      9, this->zc(i), output);
  }

  // string plotting_scale = 10;
  if (this->plotting_scale().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->plotting_scale().data(), this->plotting_scale().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Pro_Floor.plotting_scale");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      10, this->plotting_scale(), output);
  }

  // @@protoc_insertion_point(serialize_end:Pro_Floor)
}

::google::protobuf::uint8* Pro_Floor::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:Pro_Floor)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string Comment = 1;
  if (this->comment().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->comment().data(), this->comment().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Pro_Floor.Comment");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->comment(), target);
  }

  // string FloorGraph = 2;
  if (this->floorgraph().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->floorgraph().data(), this->floorgraph().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Pro_Floor.FloorGraph");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->floorgraph(), target);
  }

  // string GUID = 3;
  if (this->guid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->guid().data(), this->guid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Pro_Floor.GUID");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->guid(), target);
  }

  // string Name = 4;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Pro_Floor.Name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->name(), target);
  }

  // .Pro_Point Position = 5;
  if (this->has_position()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        5, *this->position_, deterministic, target);
  }

  // string Type = 6;
  if (this->type().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->type().data(), this->type().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Pro_Floor.Type");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->type(), target);
  }

  // .Pro_Point Scale = 7;
  if (this->has_scale()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        7, *this->scale_, deterministic, target);
  }

  // string unit_of_measure = 8;
  if (this->unit_of_measure().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->unit_of_measure().data(), this->unit_of_measure().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Pro_Floor.unit_of_measure");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        8, this->unit_of_measure(), target);
  }

  // repeated .Pro_ZC ZC = 9;
  for (unsigned int i = 0, n = this->zc_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        9, this->zc(i), deterministic, target);
  }

  // string plotting_scale = 10;
  if (this->plotting_scale().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->plotting_scale().data(), this->plotting_scale().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Pro_Floor.plotting_scale");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        10, this->plotting_scale(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:Pro_Floor)
  return target;
}

size_t Pro_Floor::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Pro_Floor)
  size_t total_size = 0;

  // repeated .Pro_ZC ZC = 9;
  {
    unsigned int count = this->zc_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->zc(i));
    }
  }

  // string Comment = 1;
  if (this->comment().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->comment());
  }

  // string FloorGraph = 2;
  if (this->floorgraph().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->floorgraph());
  }

  // string GUID = 3;
  if (this->guid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->guid());
  }

  // string Name = 4;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // string Type = 6;
  if (this->type().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->type());
  }

  // string unit_of_measure = 8;
  if (this->unit_of_measure().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->unit_of_measure());
  }

  // string plotting_scale = 10;
  if (this->plotting_scale().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->plotting_scale());
  }

  // .Pro_Point Position = 5;
  if (this->has_position()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->position_);
  }

  // .Pro_Point Scale = 7;
  if (this->has_scale()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->scale_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Pro_Floor::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Pro_Floor)
  GOOGLE_DCHECK_NE(&from, this);
  const Pro_Floor* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Pro_Floor>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Pro_Floor)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Pro_Floor)
    MergeFrom(*source);
  }
}

void Pro_Floor::MergeFrom(const Pro_Floor& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Pro_Floor)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  zc_.MergeFrom(from.zc_);
  if (from.comment().size() > 0) {

    comment_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.comment_);
  }
  if (from.floorgraph().size() > 0) {

    floorgraph_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.floorgraph_);
  }
  if (from.guid().size() > 0) {

    guid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.guid_);
  }
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.type().size() > 0) {

    type_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.type_);
  }
  if (from.unit_of_measure().size() > 0) {

    unit_of_measure_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.unit_of_measure_);
  }
  if (from.plotting_scale().size() > 0) {

    plotting_scale_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.plotting_scale_);
  }
  if (from.has_position()) {
    mutable_position()->::Pro_Point::MergeFrom(from.position());
  }
  if (from.has_scale()) {
    mutable_scale()->::Pro_Point::MergeFrom(from.scale());
  }
}

void Pro_Floor::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Pro_Floor)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Pro_Floor::CopyFrom(const Pro_Floor& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Pro_Floor)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Pro_Floor::IsInitialized() const {
  return true;
}

void Pro_Floor::Swap(Pro_Floor* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Pro_Floor::InternalSwap(Pro_Floor* other) {
  zc_.InternalSwap(&other->zc_);
  comment_.Swap(&other->comment_);
  floorgraph_.Swap(&other->floorgraph_);
  guid_.Swap(&other->guid_);
  name_.Swap(&other->name_);
  type_.Swap(&other->type_);
  unit_of_measure_.Swap(&other->unit_of_measure_);
  plotting_scale_.Swap(&other->plotting_scale_);
  std::swap(position_, other->position_);
  std::swap(scale_, other->scale_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Pro_Floor::GetMetadata() const {
  protobuf_fldata_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_fldata_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Pro_Floor

// string Comment = 1;
void Pro_Floor::clear_comment() {
  comment_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& Pro_Floor::comment() const {
  // @@protoc_insertion_point(field_get:Pro_Floor.Comment)
  return comment_.GetNoArena();
}
void Pro_Floor::set_comment(const ::std::string& value) {
  
  comment_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Pro_Floor.Comment)
}
#if LANG_CXX11
void Pro_Floor::set_comment(::std::string&& value) {
  
  comment_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Pro_Floor.Comment)
}
#endif
void Pro_Floor::set_comment(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  comment_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Pro_Floor.Comment)
}
void Pro_Floor::set_comment(const char* value, size_t size) {
  
  comment_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Pro_Floor.Comment)
}
::std::string* Pro_Floor::mutable_comment() {
  
  // @@protoc_insertion_point(field_mutable:Pro_Floor.Comment)
  return comment_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Pro_Floor::release_comment() {
  // @@protoc_insertion_point(field_release:Pro_Floor.Comment)
  
  return comment_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Pro_Floor::set_allocated_comment(::std::string* comment) {
  if (comment != NULL) {
    
  } else {
    
  }
  comment_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), comment);
  // @@protoc_insertion_point(field_set_allocated:Pro_Floor.Comment)
}

// string FloorGraph = 2;
void Pro_Floor::clear_floorgraph() {
  floorgraph_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& Pro_Floor::floorgraph() const {
  // @@protoc_insertion_point(field_get:Pro_Floor.FloorGraph)
  return floorgraph_.GetNoArena();
}
void Pro_Floor::set_floorgraph(const ::std::string& value) {
  
  floorgraph_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Pro_Floor.FloorGraph)
}
#if LANG_CXX11
void Pro_Floor::set_floorgraph(::std::string&& value) {
  
  floorgraph_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Pro_Floor.FloorGraph)
}
#endif
void Pro_Floor::set_floorgraph(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  floorgraph_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Pro_Floor.FloorGraph)
}
void Pro_Floor::set_floorgraph(const char* value, size_t size) {
  
  floorgraph_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Pro_Floor.FloorGraph)
}
::std::string* Pro_Floor::mutable_floorgraph() {
  
  // @@protoc_insertion_point(field_mutable:Pro_Floor.FloorGraph)
  return floorgraph_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Pro_Floor::release_floorgraph() {
  // @@protoc_insertion_point(field_release:Pro_Floor.FloorGraph)
  
  return floorgraph_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Pro_Floor::set_allocated_floorgraph(::std::string* floorgraph) {
  if (floorgraph != NULL) {
    
  } else {
    
  }
  floorgraph_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), floorgraph);
  // @@protoc_insertion_point(field_set_allocated:Pro_Floor.FloorGraph)
}

// string GUID = 3;
void Pro_Floor::clear_guid() {
  guid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& Pro_Floor::guid() const {
  // @@protoc_insertion_point(field_get:Pro_Floor.GUID)
  return guid_.GetNoArena();
}
void Pro_Floor::set_guid(const ::std::string& value) {
  
  guid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Pro_Floor.GUID)
}
#if LANG_CXX11
void Pro_Floor::set_guid(::std::string&& value) {
  
  guid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Pro_Floor.GUID)
}
#endif
void Pro_Floor::set_guid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  guid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Pro_Floor.GUID)
}
void Pro_Floor::set_guid(const char* value, size_t size) {
  
  guid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Pro_Floor.GUID)
}
::std::string* Pro_Floor::mutable_guid() {
  
  // @@protoc_insertion_point(field_mutable:Pro_Floor.GUID)
  return guid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Pro_Floor::release_guid() {
  // @@protoc_insertion_point(field_release:Pro_Floor.GUID)
  
  return guid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Pro_Floor::set_allocated_guid(::std::string* guid) {
  if (guid != NULL) {
    
  } else {
    
  }
  guid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), guid);
  // @@protoc_insertion_point(field_set_allocated:Pro_Floor.GUID)
}

// string Name = 4;
void Pro_Floor::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& Pro_Floor::name() const {
  // @@protoc_insertion_point(field_get:Pro_Floor.Name)
  return name_.GetNoArena();
}
void Pro_Floor::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Pro_Floor.Name)
}
#if LANG_CXX11
void Pro_Floor::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Pro_Floor.Name)
}
#endif
void Pro_Floor::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Pro_Floor.Name)
}
void Pro_Floor::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Pro_Floor.Name)
}
::std::string* Pro_Floor::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:Pro_Floor.Name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Pro_Floor::release_name() {
  // @@protoc_insertion_point(field_release:Pro_Floor.Name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Pro_Floor::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:Pro_Floor.Name)
}

// .Pro_Point Position = 5;
bool Pro_Floor::has_position() const {
  return this != internal_default_instance() && position_ != NULL;
}
void Pro_Floor::clear_position() {
  if (GetArenaNoVirtual() == NULL && position_ != NULL) delete position_;
  position_ = NULL;
}
const ::Pro_Point& Pro_Floor::position() const {
  // @@protoc_insertion_point(field_get:Pro_Floor.Position)
  return position_ != NULL ? *position_
                         : *::Pro_Point::internal_default_instance();
}
::Pro_Point* Pro_Floor::mutable_position() {
  
  if (position_ == NULL) {
    position_ = new ::Pro_Point;
  }
  // @@protoc_insertion_point(field_mutable:Pro_Floor.Position)
  return position_;
}
::Pro_Point* Pro_Floor::release_position() {
  // @@protoc_insertion_point(field_release:Pro_Floor.Position)
  
  ::Pro_Point* temp = position_;
  position_ = NULL;
  return temp;
}
void Pro_Floor::set_allocated_position(::Pro_Point* position) {
  delete position_;
  position_ = position;
  if (position) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Pro_Floor.Position)
}

// string Type = 6;
void Pro_Floor::clear_type() {
  type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& Pro_Floor::type() const {
  // @@protoc_insertion_point(field_get:Pro_Floor.Type)
  return type_.GetNoArena();
}
void Pro_Floor::set_type(const ::std::string& value) {
  
  type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Pro_Floor.Type)
}
#if LANG_CXX11
void Pro_Floor::set_type(::std::string&& value) {
  
  type_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Pro_Floor.Type)
}
#endif
void Pro_Floor::set_type(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Pro_Floor.Type)
}
void Pro_Floor::set_type(const char* value, size_t size) {
  
  type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Pro_Floor.Type)
}
::std::string* Pro_Floor::mutable_type() {
  
  // @@protoc_insertion_point(field_mutable:Pro_Floor.Type)
  return type_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Pro_Floor::release_type() {
  // @@protoc_insertion_point(field_release:Pro_Floor.Type)
  
  return type_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Pro_Floor::set_allocated_type(::std::string* type) {
  if (type != NULL) {
    
  } else {
    
  }
  type_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), type);
  // @@protoc_insertion_point(field_set_allocated:Pro_Floor.Type)
}

// .Pro_Point Scale = 7;
bool Pro_Floor::has_scale() const {
  return this != internal_default_instance() && scale_ != NULL;
}
void Pro_Floor::clear_scale() {
  if (GetArenaNoVirtual() == NULL && scale_ != NULL) delete scale_;
  scale_ = NULL;
}
const ::Pro_Point& Pro_Floor::scale() const {
  // @@protoc_insertion_point(field_get:Pro_Floor.Scale)
  return scale_ != NULL ? *scale_
                         : *::Pro_Point::internal_default_instance();
}
::Pro_Point* Pro_Floor::mutable_scale() {
  
  if (scale_ == NULL) {
    scale_ = new ::Pro_Point;
  }
  // @@protoc_insertion_point(field_mutable:Pro_Floor.Scale)
  return scale_;
}
::Pro_Point* Pro_Floor::release_scale() {
  // @@protoc_insertion_point(field_release:Pro_Floor.Scale)
  
  ::Pro_Point* temp = scale_;
  scale_ = NULL;
  return temp;
}
void Pro_Floor::set_allocated_scale(::Pro_Point* scale) {
  delete scale_;
  scale_ = scale;
  if (scale) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Pro_Floor.Scale)
}

// string unit_of_measure = 8;
void Pro_Floor::clear_unit_of_measure() {
  unit_of_measure_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& Pro_Floor::unit_of_measure() const {
  // @@protoc_insertion_point(field_get:Pro_Floor.unit_of_measure)
  return unit_of_measure_.GetNoArena();
}
void Pro_Floor::set_unit_of_measure(const ::std::string& value) {
  
  unit_of_measure_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Pro_Floor.unit_of_measure)
}
#if LANG_CXX11
void Pro_Floor::set_unit_of_measure(::std::string&& value) {
  
  unit_of_measure_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Pro_Floor.unit_of_measure)
}
#endif
void Pro_Floor::set_unit_of_measure(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  unit_of_measure_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Pro_Floor.unit_of_measure)
}
void Pro_Floor::set_unit_of_measure(const char* value, size_t size) {
  
  unit_of_measure_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Pro_Floor.unit_of_measure)
}
::std::string* Pro_Floor::mutable_unit_of_measure() {
  
  // @@protoc_insertion_point(field_mutable:Pro_Floor.unit_of_measure)
  return unit_of_measure_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Pro_Floor::release_unit_of_measure() {
  // @@protoc_insertion_point(field_release:Pro_Floor.unit_of_measure)
  
  return unit_of_measure_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Pro_Floor::set_allocated_unit_of_measure(::std::string* unit_of_measure) {
  if (unit_of_measure != NULL) {
    
  } else {
    
  }
  unit_of_measure_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), unit_of_measure);
  // @@protoc_insertion_point(field_set_allocated:Pro_Floor.unit_of_measure)
}

// repeated .Pro_ZC ZC = 9;
int Pro_Floor::zc_size() const {
  return zc_.size();
}
void Pro_Floor::clear_zc() {
  zc_.Clear();
}
const ::Pro_ZC& Pro_Floor::zc(int index) const {
  // @@protoc_insertion_point(field_get:Pro_Floor.ZC)
  return zc_.Get(index);
}
::Pro_ZC* Pro_Floor::mutable_zc(int index) {
  // @@protoc_insertion_point(field_mutable:Pro_Floor.ZC)
  return zc_.Mutable(index);
}
::Pro_ZC* Pro_Floor::add_zc() {
  // @@protoc_insertion_point(field_add:Pro_Floor.ZC)
  return zc_.Add();
}
::google::protobuf::RepeatedPtrField< ::Pro_ZC >*
Pro_Floor::mutable_zc() {
  // @@protoc_insertion_point(field_mutable_list:Pro_Floor.ZC)
  return &zc_;
}
const ::google::protobuf::RepeatedPtrField< ::Pro_ZC >&
Pro_Floor::zc() const {
  // @@protoc_insertion_point(field_list:Pro_Floor.ZC)
  return zc_;
}

// string plotting_scale = 10;
void Pro_Floor::clear_plotting_scale() {
  plotting_scale_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& Pro_Floor::plotting_scale() const {
  // @@protoc_insertion_point(field_get:Pro_Floor.plotting_scale)
  return plotting_scale_.GetNoArena();
}
void Pro_Floor::set_plotting_scale(const ::std::string& value) {
  
  plotting_scale_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Pro_Floor.plotting_scale)
}
#if LANG_CXX11
void Pro_Floor::set_plotting_scale(::std::string&& value) {
  
  plotting_scale_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Pro_Floor.plotting_scale)
}
#endif
void Pro_Floor::set_plotting_scale(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  plotting_scale_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Pro_Floor.plotting_scale)
}
void Pro_Floor::set_plotting_scale(const char* value, size_t size) {
  
  plotting_scale_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Pro_Floor.plotting_scale)
}
::std::string* Pro_Floor::mutable_plotting_scale() {
  
  // @@protoc_insertion_point(field_mutable:Pro_Floor.plotting_scale)
  return plotting_scale_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Pro_Floor::release_plotting_scale() {
  // @@protoc_insertion_point(field_release:Pro_Floor.plotting_scale)
  
  return plotting_scale_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Pro_Floor::set_allocated_plotting_scale(::std::string* plotting_scale) {
  if (plotting_scale != NULL) {
    
  } else {
    
  }
  plotting_scale_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), plotting_scale);
  // @@protoc_insertion_point(field_set_allocated:Pro_Floor.plotting_scale)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Pro_Job::kCommentFieldNumber;
const int Pro_Job::kGUIDFieldNumber;
const int Pro_Job::kJobPathFieldNumber;
const int Pro_Job::kNameFieldNumber;
const int Pro_Job::kStandardFieldNumber;
const int Pro_Job::kTypeFieldNumber;
const int Pro_Job::kFloorFieldNumber;
const int Pro_Job::kDayLightFieldNumber;
const int Pro_Job::kDailyAdjustFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Pro_Job::Pro_Job()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_fldata_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Pro_Job)
}
Pro_Job::Pro_Job(const Pro_Job& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      floor_(from.floor_),
      daylight_(from.daylight_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  comment_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.comment().size() > 0) {
    comment_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.comment_);
  }
  guid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.guid().size() > 0) {
    guid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.guid_);
  }
  jobpath_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.jobpath().size() > 0) {
    jobpath_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.jobpath_);
  }
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  standard_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.standard().size() > 0) {
    standard_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.standard_);
  }
  type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.type().size() > 0) {
    type_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.type_);
  }
  dailyadjust_ = from.dailyadjust_;
  // @@protoc_insertion_point(copy_constructor:Pro_Job)
}

void Pro_Job::SharedCtor() {
  comment_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  guid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  jobpath_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  standard_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  dailyadjust_ = 0;
  _cached_size_ = 0;
}

Pro_Job::~Pro_Job() {
  // @@protoc_insertion_point(destructor:Pro_Job)
  SharedDtor();
}

void Pro_Job::SharedDtor() {
  comment_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  guid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  jobpath_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  standard_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  type_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Pro_Job::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Pro_Job::descriptor() {
  protobuf_fldata_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_fldata_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Pro_Job& Pro_Job::default_instance() {
  protobuf_fldata_2eproto::InitDefaults();
  return *internal_default_instance();
}

Pro_Job* Pro_Job::New(::google::protobuf::Arena* arena) const {
  Pro_Job* n = new Pro_Job;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Pro_Job::Clear() {
// @@protoc_insertion_point(message_clear_start:Pro_Job)
  floor_.Clear();
  daylight_.Clear();
  comment_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  guid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  jobpath_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  standard_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  dailyadjust_ = 0;
}

bool Pro_Job::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Pro_Job)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string Comment = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_comment()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->comment().data(), this->comment().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Pro_Job.Comment"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string GUID = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_guid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->guid().data(), this->guid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Pro_Job.GUID"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string JobPath = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_jobpath()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->jobpath().data(), this->jobpath().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Pro_Job.JobPath"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string Name = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Pro_Job.Name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string Standard = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_standard()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->standard().data(), this->standard().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Pro_Job.Standard"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string Type = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_type()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->type().data(), this->type().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Pro_Job.Type"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .Pro_Floor Floor = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_floor()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .PRO_DayLightSaving DayLight = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_daylight()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 DailyAdjust = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &dailyadjust_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Pro_Job)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Pro_Job)
  return false;
#undef DO_
}

void Pro_Job::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Pro_Job)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string Comment = 1;
  if (this->comment().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->comment().data(), this->comment().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Pro_Job.Comment");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->comment(), output);
  }

  // string GUID = 2;
  if (this->guid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->guid().data(), this->guid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Pro_Job.GUID");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->guid(), output);
  }

  // string JobPath = 3;
  if (this->jobpath().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->jobpath().data(), this->jobpath().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Pro_Job.JobPath");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->jobpath(), output);
  }

  // string Name = 4;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Pro_Job.Name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->name(), output);
  }

  // string Standard = 5;
  if (this->standard().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->standard().data(), this->standard().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Pro_Job.Standard");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->standard(), output);
  }

  // string Type = 6;
  if (this->type().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->type().data(), this->type().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Pro_Job.Type");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->type(), output);
  }

  // repeated .Pro_Floor Floor = 7;
  for (unsigned int i = 0, n = this->floor_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, this->floor(i), output);
  }

  // repeated .PRO_DayLightSaving DayLight = 8;
  for (unsigned int i = 0, n = this->daylight_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8, this->daylight(i), output);
  }

  // int32 DailyAdjust = 9;
  if (this->dailyadjust() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(9, this->dailyadjust(), output);
  }

  // @@protoc_insertion_point(serialize_end:Pro_Job)
}

::google::protobuf::uint8* Pro_Job::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:Pro_Job)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string Comment = 1;
  if (this->comment().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->comment().data(), this->comment().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Pro_Job.Comment");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->comment(), target);
  }

  // string GUID = 2;
  if (this->guid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->guid().data(), this->guid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Pro_Job.GUID");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->guid(), target);
  }

  // string JobPath = 3;
  if (this->jobpath().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->jobpath().data(), this->jobpath().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Pro_Job.JobPath");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->jobpath(), target);
  }

  // string Name = 4;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Pro_Job.Name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->name(), target);
  }

  // string Standard = 5;
  if (this->standard().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->standard().data(), this->standard().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Pro_Job.Standard");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->standard(), target);
  }

  // string Type = 6;
  if (this->type().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->type().data(), this->type().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Pro_Job.Type");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->type(), target);
  }

  // repeated .Pro_Floor Floor = 7;
  for (unsigned int i = 0, n = this->floor_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        7, this->floor(i), deterministic, target);
  }

  // repeated .PRO_DayLightSaving DayLight = 8;
  for (unsigned int i = 0, n = this->daylight_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        8, this->daylight(i), deterministic, target);
  }

  // int32 DailyAdjust = 9;
  if (this->dailyadjust() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(9, this->dailyadjust(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:Pro_Job)
  return target;
}

size_t Pro_Job::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Pro_Job)
  size_t total_size = 0;

  // repeated .Pro_Floor Floor = 7;
  {
    unsigned int count = this->floor_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->floor(i));
    }
  }

  // repeated .PRO_DayLightSaving DayLight = 8;
  {
    unsigned int count = this->daylight_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->daylight(i));
    }
  }

  // string Comment = 1;
  if (this->comment().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->comment());
  }

  // string GUID = 2;
  if (this->guid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->guid());
  }

  // string JobPath = 3;
  if (this->jobpath().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->jobpath());
  }

  // string Name = 4;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // string Standard = 5;
  if (this->standard().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->standard());
  }

  // string Type = 6;
  if (this->type().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->type());
  }

  // int32 DailyAdjust = 9;
  if (this->dailyadjust() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->dailyadjust());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Pro_Job::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Pro_Job)
  GOOGLE_DCHECK_NE(&from, this);
  const Pro_Job* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Pro_Job>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Pro_Job)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Pro_Job)
    MergeFrom(*source);
  }
}

void Pro_Job::MergeFrom(const Pro_Job& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Pro_Job)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  floor_.MergeFrom(from.floor_);
  daylight_.MergeFrom(from.daylight_);
  if (from.comment().size() > 0) {

    comment_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.comment_);
  }
  if (from.guid().size() > 0) {

    guid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.guid_);
  }
  if (from.jobpath().size() > 0) {

    jobpath_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.jobpath_);
  }
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.standard().size() > 0) {

    standard_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.standard_);
  }
  if (from.type().size() > 0) {

    type_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.type_);
  }
  if (from.dailyadjust() != 0) {
    set_dailyadjust(from.dailyadjust());
  }
}

void Pro_Job::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Pro_Job)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Pro_Job::CopyFrom(const Pro_Job& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Pro_Job)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Pro_Job::IsInitialized() const {
  return true;
}

void Pro_Job::Swap(Pro_Job* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Pro_Job::InternalSwap(Pro_Job* other) {
  floor_.InternalSwap(&other->floor_);
  daylight_.InternalSwap(&other->daylight_);
  comment_.Swap(&other->comment_);
  guid_.Swap(&other->guid_);
  jobpath_.Swap(&other->jobpath_);
  name_.Swap(&other->name_);
  standard_.Swap(&other->standard_);
  type_.Swap(&other->type_);
  std::swap(dailyadjust_, other->dailyadjust_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Pro_Job::GetMetadata() const {
  protobuf_fldata_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_fldata_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Pro_Job

// string Comment = 1;
void Pro_Job::clear_comment() {
  comment_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& Pro_Job::comment() const {
  // @@protoc_insertion_point(field_get:Pro_Job.Comment)
  return comment_.GetNoArena();
}
void Pro_Job::set_comment(const ::std::string& value) {
  
  comment_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Pro_Job.Comment)
}
#if LANG_CXX11
void Pro_Job::set_comment(::std::string&& value) {
  
  comment_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Pro_Job.Comment)
}
#endif
void Pro_Job::set_comment(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  comment_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Pro_Job.Comment)
}
void Pro_Job::set_comment(const char* value, size_t size) {
  
  comment_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Pro_Job.Comment)
}
::std::string* Pro_Job::mutable_comment() {
  
  // @@protoc_insertion_point(field_mutable:Pro_Job.Comment)
  return comment_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Pro_Job::release_comment() {
  // @@protoc_insertion_point(field_release:Pro_Job.Comment)
  
  return comment_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Pro_Job::set_allocated_comment(::std::string* comment) {
  if (comment != NULL) {
    
  } else {
    
  }
  comment_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), comment);
  // @@protoc_insertion_point(field_set_allocated:Pro_Job.Comment)
}

// string GUID = 2;
void Pro_Job::clear_guid() {
  guid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& Pro_Job::guid() const {
  // @@protoc_insertion_point(field_get:Pro_Job.GUID)
  return guid_.GetNoArena();
}
void Pro_Job::set_guid(const ::std::string& value) {
  
  guid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Pro_Job.GUID)
}
#if LANG_CXX11
void Pro_Job::set_guid(::std::string&& value) {
  
  guid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Pro_Job.GUID)
}
#endif
void Pro_Job::set_guid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  guid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Pro_Job.GUID)
}
void Pro_Job::set_guid(const char* value, size_t size) {
  
  guid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Pro_Job.GUID)
}
::std::string* Pro_Job::mutable_guid() {
  
  // @@protoc_insertion_point(field_mutable:Pro_Job.GUID)
  return guid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Pro_Job::release_guid() {
  // @@protoc_insertion_point(field_release:Pro_Job.GUID)
  
  return guid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Pro_Job::set_allocated_guid(::std::string* guid) {
  if (guid != NULL) {
    
  } else {
    
  }
  guid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), guid);
  // @@protoc_insertion_point(field_set_allocated:Pro_Job.GUID)
}

// string JobPath = 3;
void Pro_Job::clear_jobpath() {
  jobpath_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& Pro_Job::jobpath() const {
  // @@protoc_insertion_point(field_get:Pro_Job.JobPath)
  return jobpath_.GetNoArena();
}
void Pro_Job::set_jobpath(const ::std::string& value) {
  
  jobpath_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Pro_Job.JobPath)
}
#if LANG_CXX11
void Pro_Job::set_jobpath(::std::string&& value) {
  
  jobpath_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Pro_Job.JobPath)
}
#endif
void Pro_Job::set_jobpath(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  jobpath_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Pro_Job.JobPath)
}
void Pro_Job::set_jobpath(const char* value, size_t size) {
  
  jobpath_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Pro_Job.JobPath)
}
::std::string* Pro_Job::mutable_jobpath() {
  
  // @@protoc_insertion_point(field_mutable:Pro_Job.JobPath)
  return jobpath_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Pro_Job::release_jobpath() {
  // @@protoc_insertion_point(field_release:Pro_Job.JobPath)
  
  return jobpath_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Pro_Job::set_allocated_jobpath(::std::string* jobpath) {
  if (jobpath != NULL) {
    
  } else {
    
  }
  jobpath_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), jobpath);
  // @@protoc_insertion_point(field_set_allocated:Pro_Job.JobPath)
}

// string Name = 4;
void Pro_Job::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& Pro_Job::name() const {
  // @@protoc_insertion_point(field_get:Pro_Job.Name)
  return name_.GetNoArena();
}
void Pro_Job::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Pro_Job.Name)
}
#if LANG_CXX11
void Pro_Job::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Pro_Job.Name)
}
#endif
void Pro_Job::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Pro_Job.Name)
}
void Pro_Job::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Pro_Job.Name)
}
::std::string* Pro_Job::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:Pro_Job.Name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Pro_Job::release_name() {
  // @@protoc_insertion_point(field_release:Pro_Job.Name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Pro_Job::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:Pro_Job.Name)
}

// string Standard = 5;
void Pro_Job::clear_standard() {
  standard_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& Pro_Job::standard() const {
  // @@protoc_insertion_point(field_get:Pro_Job.Standard)
  return standard_.GetNoArena();
}
void Pro_Job::set_standard(const ::std::string& value) {
  
  standard_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Pro_Job.Standard)
}
#if LANG_CXX11
void Pro_Job::set_standard(::std::string&& value) {
  
  standard_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Pro_Job.Standard)
}
#endif
void Pro_Job::set_standard(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  standard_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Pro_Job.Standard)
}
void Pro_Job::set_standard(const char* value, size_t size) {
  
  standard_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Pro_Job.Standard)
}
::std::string* Pro_Job::mutable_standard() {
  
  // @@protoc_insertion_point(field_mutable:Pro_Job.Standard)
  return standard_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Pro_Job::release_standard() {
  // @@protoc_insertion_point(field_release:Pro_Job.Standard)
  
  return standard_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Pro_Job::set_allocated_standard(::std::string* standard) {
  if (standard != NULL) {
    
  } else {
    
  }
  standard_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), standard);
  // @@protoc_insertion_point(field_set_allocated:Pro_Job.Standard)
}

// string Type = 6;
void Pro_Job::clear_type() {
  type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& Pro_Job::type() const {
  // @@protoc_insertion_point(field_get:Pro_Job.Type)
  return type_.GetNoArena();
}
void Pro_Job::set_type(const ::std::string& value) {
  
  type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Pro_Job.Type)
}
#if LANG_CXX11
void Pro_Job::set_type(::std::string&& value) {
  
  type_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Pro_Job.Type)
}
#endif
void Pro_Job::set_type(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Pro_Job.Type)
}
void Pro_Job::set_type(const char* value, size_t size) {
  
  type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Pro_Job.Type)
}
::std::string* Pro_Job::mutable_type() {
  
  // @@protoc_insertion_point(field_mutable:Pro_Job.Type)
  return type_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Pro_Job::release_type() {
  // @@protoc_insertion_point(field_release:Pro_Job.Type)
  
  return type_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Pro_Job::set_allocated_type(::std::string* type) {
  if (type != NULL) {
    
  } else {
    
  }
  type_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), type);
  // @@protoc_insertion_point(field_set_allocated:Pro_Job.Type)
}

// repeated .Pro_Floor Floor = 7;
int Pro_Job::floor_size() const {
  return floor_.size();
}
void Pro_Job::clear_floor() {
  floor_.Clear();
}
const ::Pro_Floor& Pro_Job::floor(int index) const {
  // @@protoc_insertion_point(field_get:Pro_Job.Floor)
  return floor_.Get(index);
}
::Pro_Floor* Pro_Job::mutable_floor(int index) {
  // @@protoc_insertion_point(field_mutable:Pro_Job.Floor)
  return floor_.Mutable(index);
}
::Pro_Floor* Pro_Job::add_floor() {
  // @@protoc_insertion_point(field_add:Pro_Job.Floor)
  return floor_.Add();
}
::google::protobuf::RepeatedPtrField< ::Pro_Floor >*
Pro_Job::mutable_floor() {
  // @@protoc_insertion_point(field_mutable_list:Pro_Job.Floor)
  return &floor_;
}
const ::google::protobuf::RepeatedPtrField< ::Pro_Floor >&
Pro_Job::floor() const {
  // @@protoc_insertion_point(field_list:Pro_Job.Floor)
  return floor_;
}

// repeated .PRO_DayLightSaving DayLight = 8;
int Pro_Job::daylight_size() const {
  return daylight_.size();
}
void Pro_Job::clear_daylight() {
  daylight_.Clear();
}
const ::PRO_DayLightSaving& Pro_Job::daylight(int index) const {
  // @@protoc_insertion_point(field_get:Pro_Job.DayLight)
  return daylight_.Get(index);
}
::PRO_DayLightSaving* Pro_Job::mutable_daylight(int index) {
  // @@protoc_insertion_point(field_mutable:Pro_Job.DayLight)
  return daylight_.Mutable(index);
}
::PRO_DayLightSaving* Pro_Job::add_daylight() {
  // @@protoc_insertion_point(field_add:Pro_Job.DayLight)
  return daylight_.Add();
}
::google::protobuf::RepeatedPtrField< ::PRO_DayLightSaving >*
Pro_Job::mutable_daylight() {
  // @@protoc_insertion_point(field_mutable_list:Pro_Job.DayLight)
  return &daylight_;
}
const ::google::protobuf::RepeatedPtrField< ::PRO_DayLightSaving >&
Pro_Job::daylight() const {
  // @@protoc_insertion_point(field_list:Pro_Job.DayLight)
  return daylight_;
}

// int32 DailyAdjust = 9;
void Pro_Job::clear_dailyadjust() {
  dailyadjust_ = 0;
}
::google::protobuf::int32 Pro_Job::dailyadjust() const {
  // @@protoc_insertion_point(field_get:Pro_Job.DailyAdjust)
  return dailyadjust_;
}
void Pro_Job::set_dailyadjust(::google::protobuf::int32 value) {
  
  dailyadjust_ = value;
  // @@protoc_insertion_point(field_set:Pro_Job.DailyAdjust)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)
