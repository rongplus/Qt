// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: zc.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "zc.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
class WIO_INFODefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<WIO_INFO> {
} _WIO_INFO_default_instance_;
class TIMERDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<TIMER> {
} _TIMER_default_instance_;
class LOCAL_OUTPUT_CORRDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<LOCAL_OUTPUT_CORR> {
} _LOCAL_OUTPUT_CORR_default_instance_;
class REMOTE_OUTPUT_CORRDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<REMOTE_OUTPUT_CORR> {
} _REMOTE_OUTPUT_CORR_default_instance_;
class PASSWORDDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<PASSWORD> {
} _PASSWORD_default_instance_;
class CFG_DSTDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CFG_DST> {
} _CFG_DST_default_instance_;
class ZCDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<ZC> {
} _ZC_default_instance_;
class PASSWORDSDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<PASSWORDS> {
} _PASSWORDS_default_instance_;
class CFG_RTCDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CFG_RTC> {
} _CFG_RTC_default_instance_;

namespace protobuf_zc_2eproto {


namespace {

::google::protobuf::Metadata file_level_metadata[9];

}  // namespace

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTableField
    const TableStruct::entries[] = {
  {0, 0, 0, ::google::protobuf::internal::kInvalidMask, 0, 0},
};

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::AuxillaryParseTableField
    const TableStruct::aux[] = {
  ::google::protobuf::internal::AuxillaryParseTableField(),
};
PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTable const
    TableStruct::schema[] = {
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
};

const ::google::protobuf::uint32 TableStruct::offsets[] = {
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WIO_INFO, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WIO_INFO, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WIO_INFO, macaddr_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WIO_INFO, label_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WIO_INFO, ckttype_),
  0,
  1,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TIMER, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TIMER, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TIMER, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TIMER, duration_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LOCAL_OUTPUT_CORR, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LOCAL_OUTPUT_CORR, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LOCAL_OUTPUT_CORR, iptcorrs_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LOCAL_OUTPUT_CORR, statcorrs_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LOCAL_OUTPUT_CORR, trbcorrs_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LOCAL_OUTPUT_CORR, remtrbcorrs_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LOCAL_OUTPUT_CORR, remiptcorrs_),
  0,
  1,
  2,
  3,
  4,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(REMOTE_OUTPUT_CORR, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(REMOTE_OUTPUT_CORR, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(REMOTE_OUTPUT_CORR, iptcorrs_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(REMOTE_OUTPUT_CORR, statcorrs_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(REMOTE_OUTPUT_CORR, remiptcorrs_),
  0,
  1,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PASSWORD, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PASSWORD, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PASSWORD, len_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PASSWORD, data_),
  1,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CFG_DST, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CFG_DST, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CFG_DST, startmonth_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CFG_DST, startordinalweek_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CFG_DST, startdayofweek_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CFG_DST, starthour_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CFG_DST, startmin_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CFG_DST, endmonth_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CFG_DST, endordinalweek_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CFG_DST, enddayofweek_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CFG_DST, endhour_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CFG_DST, endmin_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CFG_DST, dailyadjust_),
  0,
  1,
  2,
  3,
  4,
  5,
  6,
  7,
  8,
  9,
  10,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ZC, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ZC, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ZC, label_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ZC, guid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ZC, configver_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ZC, gscufeatureflags_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ZC, ghwustrobestype_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ZC, iptcktprocesstype_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ZC, localcorr_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ZC, dst_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ZC, dataintcheck_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ZC, remotecorr_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ZC, timers_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ZC, wioinfo_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ZC, password_),
  0,
  1,
  2,
  6,
  7,
  3,
  4,
  5,
  8,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PASSWORDS, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PASSWORDS, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PASSWORDS, password_),
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CFG_RTC, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CFG_RTC, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CFG_RTC, seconds_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CFG_RTC, minutes_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CFG_RTC, hours_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CFG_RTC, date_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CFG_RTC, month_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CFG_RTC, year_),
  0,
  1,
  2,
  3,
  4,
  5,
};

static const ::google::protobuf::internal::MigrationSchema schemas[] = {
  { 0, 8, sizeof(WIO_INFO)},
  { 11, 18, sizeof(TIMER)},
  { 20, 30, sizeof(LOCAL_OUTPUT_CORR)},
  { 35, 43, sizeof(REMOTE_OUTPUT_CORR)},
  { 46, 53, sizeof(PASSWORD)},
  { 55, 71, sizeof(CFG_DST)},
  { 82, 100, sizeof(ZC)},
  { 113, 119, sizeof(PASSWORDS)},
  { 120, 131, sizeof(CFG_RTC)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&_WIO_INFO_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_TIMER_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_LOCAL_OUTPUT_CORR_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_REMOTE_OUTPUT_CORR_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_PASSWORD_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CFG_DST_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ZC_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_PASSWORDS_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CFG_RTC_default_instance_),
};

namespace {

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "zc.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 9);
}

}  // namespace

void TableStruct::Shutdown() {
  _WIO_INFO_default_instance_.Shutdown();
  delete file_level_metadata[0].reflection;
  _TIMER_default_instance_.Shutdown();
  delete file_level_metadata[1].reflection;
  _LOCAL_OUTPUT_CORR_default_instance_.Shutdown();
  delete file_level_metadata[2].reflection;
  _REMOTE_OUTPUT_CORR_default_instance_.Shutdown();
  delete file_level_metadata[3].reflection;
  _PASSWORD_default_instance_.Shutdown();
  delete file_level_metadata[4].reflection;
  _CFG_DST_default_instance_.Shutdown();
  delete file_level_metadata[5].reflection;
  _ZC_default_instance_.Shutdown();
  delete file_level_metadata[6].reflection;
  _PASSWORDS_default_instance_.Shutdown();
  delete file_level_metadata[7].reflection;
  _CFG_RTC_default_instance_.Shutdown();
  delete file_level_metadata[8].reflection;
}

void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  _WIO_INFO_default_instance_.DefaultConstruct();
  _TIMER_default_instance_.DefaultConstruct();
  _LOCAL_OUTPUT_CORR_default_instance_.DefaultConstruct();
  _REMOTE_OUTPUT_CORR_default_instance_.DefaultConstruct();
  _PASSWORD_default_instance_.DefaultConstruct();
  _CFG_DST_default_instance_.DefaultConstruct();
  _ZC_default_instance_.DefaultConstruct();
  _PASSWORDS_default_instance_.DefaultConstruct();
  _CFG_RTC_default_instance_.DefaultConstruct();
  _ZC_default_instance_.get_mutable()->localcorr_ = const_cast< ::LOCAL_OUTPUT_CORR*>(
      ::LOCAL_OUTPUT_CORR::internal_default_instance());
  _ZC_default_instance_.get_mutable()->dst_ = const_cast< ::CFG_DST*>(
      ::CFG_DST::internal_default_instance());
}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] = {
      "\n\010zc.proto\";\n\010WIO_INFO\022\017\n\007MacAddr\030\001 \002(\t\022"
      "\r\n\005Label\030\002 \002(\t\022\017\n\007CktType\030\003 \002(\005\"%\n\005TIMER"
      "\022\n\n\002ID\030\001 \002(\005\022\020\n\010Duration\030\002 \002(\005\"t\n\021LOCAL_"
      "OUTPUT_CORR\022\020\n\010IptCorrs\030\001 \002(\t\022\021\n\tStatCor"
      "rs\030\002 \002(\t\022\020\n\010TrbCorrs\030\003 \002(\t\022\023\n\013RemTrbCorr"
      "s\030\004 \002(\t\022\023\n\013RemIptCorrs\030\005 \002(\t\"N\n\022REMOTE_O"
      "UTPUT_CORR\022\020\n\010IptCorrs\030\001 \002(\t\022\021\n\tStatCorr"
      "s\030\002 \002(\t\022\023\n\013RemIptCorrs\030\003 \002(\t\"%\n\010PASSWORD"
      "\022\013\n\003Len\030\001 \002(\005\022\014\n\004Data\030\002 \002(\t\"\352\001\n\007CFG_DST\022"
      "\022\n\nStartMonth\030\001 \002(\005\022\030\n\020StartOrdinalWeek\030"
      "\002 \002(\005\022\026\n\016StartDayOfWeek\030\003 \002(\005\022\021\n\tStartHo"
      "ur\030\004 \002(\005\022\020\n\010StartMin\030\005 \002(\005\022\020\n\010EndMonth\030\006"
      " \002(\005\022\026\n\016EndOrdinalWeek\030\007 \002(\005\022\024\n\014EndDayOf"
      "Week\030\010 \002(\005\022\017\n\007EndHour\030\t \002(\005\022\016\n\006EndMin\030\n "
      "\002(\005\022\023\n\013DailyAdjust\030\013 \002(\005\"\320\002\n\002ZC\022\r\n\005Label"
      "\030\001 \002(\t\022\014\n\004GUID\030\002 \002(\t\022\021\n\tConfigVer\030\003 \002(\t\022"
      "\030\n\020gSCUFeatureFlags\030\004 \002(\005\022\027\n\017gHWUStrobes"
      "Type\030\005 \002(\005\022\031\n\021IptCktProcessType\030\006 \002(\t\022%\n"
      "\tLocalCorr\030\007 \002(\0132\022.LOCAL_OUTPUT_CORR\022\025\n\003"
      "Dst\030\010 \002(\0132\010.CFG_DST\022\024\n\014DataIntCheck\030\t \002("
      "\005\022\'\n\nRemoteCorr\030\n \003(\0132\023.REMOTE_OUTPUT_CO"
      "RR\022\026\n\006Timers\030\013 \003(\0132\006.TIMER\022\032\n\007WIOInfo\030\014 "
      "\003(\0132\t.WIO_INFO\022\033\n\010Password\030\r \003(\0132\t.PASSW"
      "ORD\"(\n\tPASSWORDS\022\033\n\010Password\030\001 \003(\0132\t.PAS"
      "SWORD\"e\n\007CFG_RTC\022\017\n\007seconds\030\001 \002(\005\022\017\n\007min"
      "utes\030\002 \002(\005\022\r\n\005hours\030\003 \002(\005\022\014\n\004date\030\004 \002(\005\022"
      "\r\n\005month\030\005 \002(\005\022\014\n\004year\030\006 \002(\005"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 1068);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "zc.proto", &protobuf_RegisterTypes);
  ::google::protobuf::internal::OnShutdown(&TableStruct::Shutdown);
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;

}  // namespace protobuf_zc_2eproto


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int WIO_INFO::kMacAddrFieldNumber;
const int WIO_INFO::kLabelFieldNumber;
const int WIO_INFO::kCktTypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

WIO_INFO::WIO_INFO()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_zc_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:WIO_INFO)
}
WIO_INFO::WIO_INFO(const WIO_INFO& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  macaddr_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_macaddr()) {
    macaddr_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.macaddr_);
  }
  label_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_label()) {
    label_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.label_);
  }
  ckttype_ = from.ckttype_;
  // @@protoc_insertion_point(copy_constructor:WIO_INFO)
}

void WIO_INFO::SharedCtor() {
  _cached_size_ = 0;
  macaddr_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  label_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ckttype_ = 0;
}

WIO_INFO::~WIO_INFO() {
  // @@protoc_insertion_point(destructor:WIO_INFO)
  SharedDtor();
}

void WIO_INFO::SharedDtor() {
  macaddr_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  label_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void WIO_INFO::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* WIO_INFO::descriptor() {
  protobuf_zc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_zc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const WIO_INFO& WIO_INFO::default_instance() {
  protobuf_zc_2eproto::InitDefaults();
  return *internal_default_instance();
}

WIO_INFO* WIO_INFO::New(::google::protobuf::Arena* arena) const {
  WIO_INFO* n = new WIO_INFO;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void WIO_INFO::Clear() {
// @@protoc_insertion_point(message_clear_start:WIO_INFO)
  if (_has_bits_[0 / 32] & 3u) {
    if (has_macaddr()) {
      GOOGLE_DCHECK(!macaddr_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*macaddr_.UnsafeRawStringPointer())->clear();
    }
    if (has_label()) {
      GOOGLE_DCHECK(!label_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*label_.UnsafeRawStringPointer())->clear();
    }
  }
  ckttype_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool WIO_INFO::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:WIO_INFO)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string MacAddr = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_macaddr()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->macaddr().data(), this->macaddr().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "WIO_INFO.MacAddr");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required string Label = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_label()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->label().data(), this->label().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "WIO_INFO.Label");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 CktType = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u)) {
          set_has_ckttype();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &ckttype_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:WIO_INFO)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:WIO_INFO)
  return false;
#undef DO_
}

void WIO_INFO::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:WIO_INFO)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string MacAddr = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->macaddr().data(), this->macaddr().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "WIO_INFO.MacAddr");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->macaddr(), output);
  }

  // required string Label = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->label().data(), this->label().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "WIO_INFO.Label");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->label(), output);
  }

  // required int32 CktType = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->ckttype(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:WIO_INFO)
}

::google::protobuf::uint8* WIO_INFO::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:WIO_INFO)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string MacAddr = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->macaddr().data(), this->macaddr().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "WIO_INFO.MacAddr");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->macaddr(), target);
  }

  // required string Label = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->label().data(), this->label().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "WIO_INFO.Label");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->label(), target);
  }

  // required int32 CktType = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->ckttype(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:WIO_INFO)
  return target;
}

size_t WIO_INFO::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:WIO_INFO)
  size_t total_size = 0;

  if (has_macaddr()) {
    // required string MacAddr = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->macaddr());
  }

  if (has_label()) {
    // required string Label = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->label());
  }

  if (has_ckttype()) {
    // required int32 CktType = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->ckttype());
  }

  return total_size;
}
size_t WIO_INFO::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:WIO_INFO)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000007) ^ 0x00000007) == 0) {  // All required fields are present.
    // required string MacAddr = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->macaddr());

    // required string Label = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->label());

    // required int32 CktType = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->ckttype());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void WIO_INFO::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:WIO_INFO)
  GOOGLE_DCHECK_NE(&from, this);
  const WIO_INFO* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const WIO_INFO>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:WIO_INFO)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:WIO_INFO)
    MergeFrom(*source);
  }
}

void WIO_INFO::MergeFrom(const WIO_INFO& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:WIO_INFO)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_macaddr();
      macaddr_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.macaddr_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_label();
      label_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.label_);
    }
    if (cached_has_bits & 0x00000004u) {
      ckttype_ = from.ckttype_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void WIO_INFO::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:WIO_INFO)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void WIO_INFO::CopyFrom(const WIO_INFO& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:WIO_INFO)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool WIO_INFO::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;
  return true;
}

void WIO_INFO::Swap(WIO_INFO* other) {
  if (other == this) return;
  InternalSwap(other);
}
void WIO_INFO::InternalSwap(WIO_INFO* other) {
  macaddr_.Swap(&other->macaddr_);
  label_.Swap(&other->label_);
  std::swap(ckttype_, other->ckttype_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata WIO_INFO::GetMetadata() const {
  protobuf_zc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_zc_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// WIO_INFO

// required string MacAddr = 1;
bool WIO_INFO::has_macaddr() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void WIO_INFO::set_has_macaddr() {
  _has_bits_[0] |= 0x00000001u;
}
void WIO_INFO::clear_has_macaddr() {
  _has_bits_[0] &= ~0x00000001u;
}
void WIO_INFO::clear_macaddr() {
  macaddr_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_macaddr();
}
const ::std::string& WIO_INFO::macaddr() const {
  // @@protoc_insertion_point(field_get:WIO_INFO.MacAddr)
  return macaddr_.GetNoArena();
}
void WIO_INFO::set_macaddr(const ::std::string& value) {
  set_has_macaddr();
  macaddr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:WIO_INFO.MacAddr)
}
#if LANG_CXX11
void WIO_INFO::set_macaddr(::std::string&& value) {
  set_has_macaddr();
  macaddr_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:WIO_INFO.MacAddr)
}
#endif
void WIO_INFO::set_macaddr(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_macaddr();
  macaddr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:WIO_INFO.MacAddr)
}
void WIO_INFO::set_macaddr(const char* value, size_t size) {
  set_has_macaddr();
  macaddr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:WIO_INFO.MacAddr)
}
::std::string* WIO_INFO::mutable_macaddr() {
  set_has_macaddr();
  // @@protoc_insertion_point(field_mutable:WIO_INFO.MacAddr)
  return macaddr_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* WIO_INFO::release_macaddr() {
  // @@protoc_insertion_point(field_release:WIO_INFO.MacAddr)
  clear_has_macaddr();
  return macaddr_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void WIO_INFO::set_allocated_macaddr(::std::string* macaddr) {
  if (macaddr != NULL) {
    set_has_macaddr();
  } else {
    clear_has_macaddr();
  }
  macaddr_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), macaddr);
  // @@protoc_insertion_point(field_set_allocated:WIO_INFO.MacAddr)
}

// required string Label = 2;
bool WIO_INFO::has_label() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void WIO_INFO::set_has_label() {
  _has_bits_[0] |= 0x00000002u;
}
void WIO_INFO::clear_has_label() {
  _has_bits_[0] &= ~0x00000002u;
}
void WIO_INFO::clear_label() {
  label_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_label();
}
const ::std::string& WIO_INFO::label() const {
  // @@protoc_insertion_point(field_get:WIO_INFO.Label)
  return label_.GetNoArena();
}
void WIO_INFO::set_label(const ::std::string& value) {
  set_has_label();
  label_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:WIO_INFO.Label)
}
#if LANG_CXX11
void WIO_INFO::set_label(::std::string&& value) {
  set_has_label();
  label_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:WIO_INFO.Label)
}
#endif
void WIO_INFO::set_label(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_label();
  label_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:WIO_INFO.Label)
}
void WIO_INFO::set_label(const char* value, size_t size) {
  set_has_label();
  label_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:WIO_INFO.Label)
}
::std::string* WIO_INFO::mutable_label() {
  set_has_label();
  // @@protoc_insertion_point(field_mutable:WIO_INFO.Label)
  return label_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* WIO_INFO::release_label() {
  // @@protoc_insertion_point(field_release:WIO_INFO.Label)
  clear_has_label();
  return label_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void WIO_INFO::set_allocated_label(::std::string* label) {
  if (label != NULL) {
    set_has_label();
  } else {
    clear_has_label();
  }
  label_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), label);
  // @@protoc_insertion_point(field_set_allocated:WIO_INFO.Label)
}

// required int32 CktType = 3;
bool WIO_INFO::has_ckttype() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void WIO_INFO::set_has_ckttype() {
  _has_bits_[0] |= 0x00000004u;
}
void WIO_INFO::clear_has_ckttype() {
  _has_bits_[0] &= ~0x00000004u;
}
void WIO_INFO::clear_ckttype() {
  ckttype_ = 0;
  clear_has_ckttype();
}
::google::protobuf::int32 WIO_INFO::ckttype() const {
  // @@protoc_insertion_point(field_get:WIO_INFO.CktType)
  return ckttype_;
}
void WIO_INFO::set_ckttype(::google::protobuf::int32 value) {
  set_has_ckttype();
  ckttype_ = value;
  // @@protoc_insertion_point(field_set:WIO_INFO.CktType)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TIMER::kIDFieldNumber;
const int TIMER::kDurationFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TIMER::TIMER()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_zc_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:TIMER)
}
TIMER::TIMER(const TIMER& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&id_, &from.id_,
    reinterpret_cast<char*>(&duration_) -
    reinterpret_cast<char*>(&id_) + sizeof(duration_));
  // @@protoc_insertion_point(copy_constructor:TIMER)
}

void TIMER::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&id_, 0, reinterpret_cast<char*>(&duration_) -
    reinterpret_cast<char*>(&id_) + sizeof(duration_));
}

TIMER::~TIMER() {
  // @@protoc_insertion_point(destructor:TIMER)
  SharedDtor();
}

void TIMER::SharedDtor() {
}

void TIMER::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TIMER::descriptor() {
  protobuf_zc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_zc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TIMER& TIMER::default_instance() {
  protobuf_zc_2eproto::InitDefaults();
  return *internal_default_instance();
}

TIMER* TIMER::New(::google::protobuf::Arena* arena) const {
  TIMER* n = new TIMER;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TIMER::Clear() {
// @@protoc_insertion_point(message_clear_start:TIMER)
  if (_has_bits_[0 / 32] & 3u) {
    ::memset(&id_, 0, reinterpret_cast<char*>(&duration_) -
      reinterpret_cast<char*>(&id_) + sizeof(duration_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool TIMER::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:TIMER)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 ID = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          set_has_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 Duration = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {
          set_has_duration();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &duration_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:TIMER)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:TIMER)
  return false;
#undef DO_
}

void TIMER::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:TIMER)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 ID = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->id(), output);
  }

  // required int32 Duration = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->duration(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:TIMER)
}

::google::protobuf::uint8* TIMER::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:TIMER)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 ID = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->id(), target);
  }

  // required int32 Duration = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->duration(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:TIMER)
  return target;
}

size_t TIMER::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:TIMER)
  size_t total_size = 0;

  if (has_id()) {
    // required int32 ID = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->id());
  }

  if (has_duration()) {
    // required int32 Duration = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->duration());
  }

  return total_size;
}
size_t TIMER::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:TIMER)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required int32 ID = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->id());

    // required int32 Duration = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->duration());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TIMER::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:TIMER)
  GOOGLE_DCHECK_NE(&from, this);
  const TIMER* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TIMER>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:TIMER)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:TIMER)
    MergeFrom(*source);
  }
}

void TIMER::MergeFrom(const TIMER& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:TIMER)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      id_ = from.id_;
    }
    if (cached_has_bits & 0x00000002u) {
      duration_ = from.duration_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void TIMER::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:TIMER)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TIMER::CopyFrom(const TIMER& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:TIMER)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TIMER::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  return true;
}

void TIMER::Swap(TIMER* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TIMER::InternalSwap(TIMER* other) {
  std::swap(id_, other->id_);
  std::swap(duration_, other->duration_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TIMER::GetMetadata() const {
  protobuf_zc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_zc_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TIMER

// required int32 ID = 1;
bool TIMER::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void TIMER::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
void TIMER::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
void TIMER::clear_id() {
  id_ = 0;
  clear_has_id();
}
::google::protobuf::int32 TIMER::id() const {
  // @@protoc_insertion_point(field_get:TIMER.ID)
  return id_;
}
void TIMER::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:TIMER.ID)
}

// required int32 Duration = 2;
bool TIMER::has_duration() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void TIMER::set_has_duration() {
  _has_bits_[0] |= 0x00000002u;
}
void TIMER::clear_has_duration() {
  _has_bits_[0] &= ~0x00000002u;
}
void TIMER::clear_duration() {
  duration_ = 0;
  clear_has_duration();
}
::google::protobuf::int32 TIMER::duration() const {
  // @@protoc_insertion_point(field_get:TIMER.Duration)
  return duration_;
}
void TIMER::set_duration(::google::protobuf::int32 value) {
  set_has_duration();
  duration_ = value;
  // @@protoc_insertion_point(field_set:TIMER.Duration)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LOCAL_OUTPUT_CORR::kIptCorrsFieldNumber;
const int LOCAL_OUTPUT_CORR::kStatCorrsFieldNumber;
const int LOCAL_OUTPUT_CORR::kTrbCorrsFieldNumber;
const int LOCAL_OUTPUT_CORR::kRemTrbCorrsFieldNumber;
const int LOCAL_OUTPUT_CORR::kRemIptCorrsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LOCAL_OUTPUT_CORR::LOCAL_OUTPUT_CORR()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_zc_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:LOCAL_OUTPUT_CORR)
}
LOCAL_OUTPUT_CORR::LOCAL_OUTPUT_CORR(const LOCAL_OUTPUT_CORR& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  iptcorrs_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_iptcorrs()) {
    iptcorrs_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.iptcorrs_);
  }
  statcorrs_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_statcorrs()) {
    statcorrs_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.statcorrs_);
  }
  trbcorrs_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_trbcorrs()) {
    trbcorrs_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.trbcorrs_);
  }
  remtrbcorrs_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_remtrbcorrs()) {
    remtrbcorrs_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.remtrbcorrs_);
  }
  remiptcorrs_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_remiptcorrs()) {
    remiptcorrs_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.remiptcorrs_);
  }
  // @@protoc_insertion_point(copy_constructor:LOCAL_OUTPUT_CORR)
}

void LOCAL_OUTPUT_CORR::SharedCtor() {
  _cached_size_ = 0;
  iptcorrs_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  statcorrs_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  trbcorrs_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  remtrbcorrs_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  remiptcorrs_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

LOCAL_OUTPUT_CORR::~LOCAL_OUTPUT_CORR() {
  // @@protoc_insertion_point(destructor:LOCAL_OUTPUT_CORR)
  SharedDtor();
}

void LOCAL_OUTPUT_CORR::SharedDtor() {
  iptcorrs_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  statcorrs_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  trbcorrs_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  remtrbcorrs_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  remiptcorrs_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void LOCAL_OUTPUT_CORR::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* LOCAL_OUTPUT_CORR::descriptor() {
  protobuf_zc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_zc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const LOCAL_OUTPUT_CORR& LOCAL_OUTPUT_CORR::default_instance() {
  protobuf_zc_2eproto::InitDefaults();
  return *internal_default_instance();
}

LOCAL_OUTPUT_CORR* LOCAL_OUTPUT_CORR::New(::google::protobuf::Arena* arena) const {
  LOCAL_OUTPUT_CORR* n = new LOCAL_OUTPUT_CORR;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void LOCAL_OUTPUT_CORR::Clear() {
// @@protoc_insertion_point(message_clear_start:LOCAL_OUTPUT_CORR)
  if (_has_bits_[0 / 32] & 31u) {
    if (has_iptcorrs()) {
      GOOGLE_DCHECK(!iptcorrs_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*iptcorrs_.UnsafeRawStringPointer())->clear();
    }
    if (has_statcorrs()) {
      GOOGLE_DCHECK(!statcorrs_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*statcorrs_.UnsafeRawStringPointer())->clear();
    }
    if (has_trbcorrs()) {
      GOOGLE_DCHECK(!trbcorrs_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*trbcorrs_.UnsafeRawStringPointer())->clear();
    }
    if (has_remtrbcorrs()) {
      GOOGLE_DCHECK(!remtrbcorrs_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*remtrbcorrs_.UnsafeRawStringPointer())->clear();
    }
    if (has_remiptcorrs()) {
      GOOGLE_DCHECK(!remiptcorrs_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*remiptcorrs_.UnsafeRawStringPointer())->clear();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool LOCAL_OUTPUT_CORR::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:LOCAL_OUTPUT_CORR)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string IptCorrs = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_iptcorrs()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->iptcorrs().data(), this->iptcorrs().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "LOCAL_OUTPUT_CORR.IptCorrs");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required string StatCorrs = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_statcorrs()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->statcorrs().data(), this->statcorrs().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "LOCAL_OUTPUT_CORR.StatCorrs");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required string TrbCorrs = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_trbcorrs()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->trbcorrs().data(), this->trbcorrs().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "LOCAL_OUTPUT_CORR.TrbCorrs");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required string RemTrbCorrs = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_remtrbcorrs()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->remtrbcorrs().data(), this->remtrbcorrs().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "LOCAL_OUTPUT_CORR.RemTrbCorrs");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required string RemIptCorrs = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_remiptcorrs()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->remiptcorrs().data(), this->remiptcorrs().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "LOCAL_OUTPUT_CORR.RemIptCorrs");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:LOCAL_OUTPUT_CORR)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:LOCAL_OUTPUT_CORR)
  return false;
#undef DO_
}

void LOCAL_OUTPUT_CORR::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:LOCAL_OUTPUT_CORR)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string IptCorrs = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->iptcorrs().data(), this->iptcorrs().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "LOCAL_OUTPUT_CORR.IptCorrs");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->iptcorrs(), output);
  }

  // required string StatCorrs = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->statcorrs().data(), this->statcorrs().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "LOCAL_OUTPUT_CORR.StatCorrs");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->statcorrs(), output);
  }

  // required string TrbCorrs = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->trbcorrs().data(), this->trbcorrs().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "LOCAL_OUTPUT_CORR.TrbCorrs");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->trbcorrs(), output);
  }

  // required string RemTrbCorrs = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->remtrbcorrs().data(), this->remtrbcorrs().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "LOCAL_OUTPUT_CORR.RemTrbCorrs");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->remtrbcorrs(), output);
  }

  // required string RemIptCorrs = 5;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->remiptcorrs().data(), this->remiptcorrs().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "LOCAL_OUTPUT_CORR.RemIptCorrs");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->remiptcorrs(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:LOCAL_OUTPUT_CORR)
}

::google::protobuf::uint8* LOCAL_OUTPUT_CORR::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:LOCAL_OUTPUT_CORR)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string IptCorrs = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->iptcorrs().data(), this->iptcorrs().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "LOCAL_OUTPUT_CORR.IptCorrs");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->iptcorrs(), target);
  }

  // required string StatCorrs = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->statcorrs().data(), this->statcorrs().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "LOCAL_OUTPUT_CORR.StatCorrs");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->statcorrs(), target);
  }

  // required string TrbCorrs = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->trbcorrs().data(), this->trbcorrs().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "LOCAL_OUTPUT_CORR.TrbCorrs");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->trbcorrs(), target);
  }

  // required string RemTrbCorrs = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->remtrbcorrs().data(), this->remtrbcorrs().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "LOCAL_OUTPUT_CORR.RemTrbCorrs");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->remtrbcorrs(), target);
  }

  // required string RemIptCorrs = 5;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->remiptcorrs().data(), this->remiptcorrs().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "LOCAL_OUTPUT_CORR.RemIptCorrs");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->remiptcorrs(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:LOCAL_OUTPUT_CORR)
  return target;
}

size_t LOCAL_OUTPUT_CORR::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:LOCAL_OUTPUT_CORR)
  size_t total_size = 0;

  if (has_iptcorrs()) {
    // required string IptCorrs = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->iptcorrs());
  }

  if (has_statcorrs()) {
    // required string StatCorrs = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->statcorrs());
  }

  if (has_trbcorrs()) {
    // required string TrbCorrs = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->trbcorrs());
  }

  if (has_remtrbcorrs()) {
    // required string RemTrbCorrs = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->remtrbcorrs());
  }

  if (has_remiptcorrs()) {
    // required string RemIptCorrs = 5;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->remiptcorrs());
  }

  return total_size;
}
size_t LOCAL_OUTPUT_CORR::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:LOCAL_OUTPUT_CORR)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (((_has_bits_[0] & 0x0000001f) ^ 0x0000001f) == 0) {  // All required fields are present.
    // required string IptCorrs = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->iptcorrs());

    // required string StatCorrs = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->statcorrs());

    // required string TrbCorrs = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->trbcorrs());

    // required string RemTrbCorrs = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->remtrbcorrs());

    // required string RemIptCorrs = 5;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->remiptcorrs());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void LOCAL_OUTPUT_CORR::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:LOCAL_OUTPUT_CORR)
  GOOGLE_DCHECK_NE(&from, this);
  const LOCAL_OUTPUT_CORR* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const LOCAL_OUTPUT_CORR>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:LOCAL_OUTPUT_CORR)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:LOCAL_OUTPUT_CORR)
    MergeFrom(*source);
  }
}

void LOCAL_OUTPUT_CORR::MergeFrom(const LOCAL_OUTPUT_CORR& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:LOCAL_OUTPUT_CORR)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 31u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_iptcorrs();
      iptcorrs_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.iptcorrs_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_statcorrs();
      statcorrs_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.statcorrs_);
    }
    if (cached_has_bits & 0x00000004u) {
      set_has_trbcorrs();
      trbcorrs_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.trbcorrs_);
    }
    if (cached_has_bits & 0x00000008u) {
      set_has_remtrbcorrs();
      remtrbcorrs_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.remtrbcorrs_);
    }
    if (cached_has_bits & 0x00000010u) {
      set_has_remiptcorrs();
      remiptcorrs_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.remiptcorrs_);
    }
  }
}

void LOCAL_OUTPUT_CORR::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:LOCAL_OUTPUT_CORR)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LOCAL_OUTPUT_CORR::CopyFrom(const LOCAL_OUTPUT_CORR& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:LOCAL_OUTPUT_CORR)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LOCAL_OUTPUT_CORR::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000001f) != 0x0000001f) return false;
  return true;
}

void LOCAL_OUTPUT_CORR::Swap(LOCAL_OUTPUT_CORR* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LOCAL_OUTPUT_CORR::InternalSwap(LOCAL_OUTPUT_CORR* other) {
  iptcorrs_.Swap(&other->iptcorrs_);
  statcorrs_.Swap(&other->statcorrs_);
  trbcorrs_.Swap(&other->trbcorrs_);
  remtrbcorrs_.Swap(&other->remtrbcorrs_);
  remiptcorrs_.Swap(&other->remiptcorrs_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata LOCAL_OUTPUT_CORR::GetMetadata() const {
  protobuf_zc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_zc_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// LOCAL_OUTPUT_CORR

// required string IptCorrs = 1;
bool LOCAL_OUTPUT_CORR::has_iptcorrs() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void LOCAL_OUTPUT_CORR::set_has_iptcorrs() {
  _has_bits_[0] |= 0x00000001u;
}
void LOCAL_OUTPUT_CORR::clear_has_iptcorrs() {
  _has_bits_[0] &= ~0x00000001u;
}
void LOCAL_OUTPUT_CORR::clear_iptcorrs() {
  iptcorrs_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_iptcorrs();
}
const ::std::string& LOCAL_OUTPUT_CORR::iptcorrs() const {
  // @@protoc_insertion_point(field_get:LOCAL_OUTPUT_CORR.IptCorrs)
  return iptcorrs_.GetNoArena();
}
void LOCAL_OUTPUT_CORR::set_iptcorrs(const ::std::string& value) {
  set_has_iptcorrs();
  iptcorrs_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:LOCAL_OUTPUT_CORR.IptCorrs)
}
#if LANG_CXX11
void LOCAL_OUTPUT_CORR::set_iptcorrs(::std::string&& value) {
  set_has_iptcorrs();
  iptcorrs_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:LOCAL_OUTPUT_CORR.IptCorrs)
}
#endif
void LOCAL_OUTPUT_CORR::set_iptcorrs(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_iptcorrs();
  iptcorrs_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:LOCAL_OUTPUT_CORR.IptCorrs)
}
void LOCAL_OUTPUT_CORR::set_iptcorrs(const char* value, size_t size) {
  set_has_iptcorrs();
  iptcorrs_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:LOCAL_OUTPUT_CORR.IptCorrs)
}
::std::string* LOCAL_OUTPUT_CORR::mutable_iptcorrs() {
  set_has_iptcorrs();
  // @@protoc_insertion_point(field_mutable:LOCAL_OUTPUT_CORR.IptCorrs)
  return iptcorrs_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* LOCAL_OUTPUT_CORR::release_iptcorrs() {
  // @@protoc_insertion_point(field_release:LOCAL_OUTPUT_CORR.IptCorrs)
  clear_has_iptcorrs();
  return iptcorrs_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void LOCAL_OUTPUT_CORR::set_allocated_iptcorrs(::std::string* iptcorrs) {
  if (iptcorrs != NULL) {
    set_has_iptcorrs();
  } else {
    clear_has_iptcorrs();
  }
  iptcorrs_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), iptcorrs);
  // @@protoc_insertion_point(field_set_allocated:LOCAL_OUTPUT_CORR.IptCorrs)
}

// required string StatCorrs = 2;
bool LOCAL_OUTPUT_CORR::has_statcorrs() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void LOCAL_OUTPUT_CORR::set_has_statcorrs() {
  _has_bits_[0] |= 0x00000002u;
}
void LOCAL_OUTPUT_CORR::clear_has_statcorrs() {
  _has_bits_[0] &= ~0x00000002u;
}
void LOCAL_OUTPUT_CORR::clear_statcorrs() {
  statcorrs_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_statcorrs();
}
const ::std::string& LOCAL_OUTPUT_CORR::statcorrs() const {
  // @@protoc_insertion_point(field_get:LOCAL_OUTPUT_CORR.StatCorrs)
  return statcorrs_.GetNoArena();
}
void LOCAL_OUTPUT_CORR::set_statcorrs(const ::std::string& value) {
  set_has_statcorrs();
  statcorrs_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:LOCAL_OUTPUT_CORR.StatCorrs)
}
#if LANG_CXX11
void LOCAL_OUTPUT_CORR::set_statcorrs(::std::string&& value) {
  set_has_statcorrs();
  statcorrs_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:LOCAL_OUTPUT_CORR.StatCorrs)
}
#endif
void LOCAL_OUTPUT_CORR::set_statcorrs(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_statcorrs();
  statcorrs_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:LOCAL_OUTPUT_CORR.StatCorrs)
}
void LOCAL_OUTPUT_CORR::set_statcorrs(const char* value, size_t size) {
  set_has_statcorrs();
  statcorrs_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:LOCAL_OUTPUT_CORR.StatCorrs)
}
::std::string* LOCAL_OUTPUT_CORR::mutable_statcorrs() {
  set_has_statcorrs();
  // @@protoc_insertion_point(field_mutable:LOCAL_OUTPUT_CORR.StatCorrs)
  return statcorrs_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* LOCAL_OUTPUT_CORR::release_statcorrs() {
  // @@protoc_insertion_point(field_release:LOCAL_OUTPUT_CORR.StatCorrs)
  clear_has_statcorrs();
  return statcorrs_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void LOCAL_OUTPUT_CORR::set_allocated_statcorrs(::std::string* statcorrs) {
  if (statcorrs != NULL) {
    set_has_statcorrs();
  } else {
    clear_has_statcorrs();
  }
  statcorrs_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), statcorrs);
  // @@protoc_insertion_point(field_set_allocated:LOCAL_OUTPUT_CORR.StatCorrs)
}

// required string TrbCorrs = 3;
bool LOCAL_OUTPUT_CORR::has_trbcorrs() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void LOCAL_OUTPUT_CORR::set_has_trbcorrs() {
  _has_bits_[0] |= 0x00000004u;
}
void LOCAL_OUTPUT_CORR::clear_has_trbcorrs() {
  _has_bits_[0] &= ~0x00000004u;
}
void LOCAL_OUTPUT_CORR::clear_trbcorrs() {
  trbcorrs_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_trbcorrs();
}
const ::std::string& LOCAL_OUTPUT_CORR::trbcorrs() const {
  // @@protoc_insertion_point(field_get:LOCAL_OUTPUT_CORR.TrbCorrs)
  return trbcorrs_.GetNoArena();
}
void LOCAL_OUTPUT_CORR::set_trbcorrs(const ::std::string& value) {
  set_has_trbcorrs();
  trbcorrs_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:LOCAL_OUTPUT_CORR.TrbCorrs)
}
#if LANG_CXX11
void LOCAL_OUTPUT_CORR::set_trbcorrs(::std::string&& value) {
  set_has_trbcorrs();
  trbcorrs_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:LOCAL_OUTPUT_CORR.TrbCorrs)
}
#endif
void LOCAL_OUTPUT_CORR::set_trbcorrs(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_trbcorrs();
  trbcorrs_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:LOCAL_OUTPUT_CORR.TrbCorrs)
}
void LOCAL_OUTPUT_CORR::set_trbcorrs(const char* value, size_t size) {
  set_has_trbcorrs();
  trbcorrs_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:LOCAL_OUTPUT_CORR.TrbCorrs)
}
::std::string* LOCAL_OUTPUT_CORR::mutable_trbcorrs() {
  set_has_trbcorrs();
  // @@protoc_insertion_point(field_mutable:LOCAL_OUTPUT_CORR.TrbCorrs)
  return trbcorrs_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* LOCAL_OUTPUT_CORR::release_trbcorrs() {
  // @@protoc_insertion_point(field_release:LOCAL_OUTPUT_CORR.TrbCorrs)
  clear_has_trbcorrs();
  return trbcorrs_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void LOCAL_OUTPUT_CORR::set_allocated_trbcorrs(::std::string* trbcorrs) {
  if (trbcorrs != NULL) {
    set_has_trbcorrs();
  } else {
    clear_has_trbcorrs();
  }
  trbcorrs_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), trbcorrs);
  // @@protoc_insertion_point(field_set_allocated:LOCAL_OUTPUT_CORR.TrbCorrs)
}

// required string RemTrbCorrs = 4;
bool LOCAL_OUTPUT_CORR::has_remtrbcorrs() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void LOCAL_OUTPUT_CORR::set_has_remtrbcorrs() {
  _has_bits_[0] |= 0x00000008u;
}
void LOCAL_OUTPUT_CORR::clear_has_remtrbcorrs() {
  _has_bits_[0] &= ~0x00000008u;
}
void LOCAL_OUTPUT_CORR::clear_remtrbcorrs() {
  remtrbcorrs_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_remtrbcorrs();
}
const ::std::string& LOCAL_OUTPUT_CORR::remtrbcorrs() const {
  // @@protoc_insertion_point(field_get:LOCAL_OUTPUT_CORR.RemTrbCorrs)
  return remtrbcorrs_.GetNoArena();
}
void LOCAL_OUTPUT_CORR::set_remtrbcorrs(const ::std::string& value) {
  set_has_remtrbcorrs();
  remtrbcorrs_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:LOCAL_OUTPUT_CORR.RemTrbCorrs)
}
#if LANG_CXX11
void LOCAL_OUTPUT_CORR::set_remtrbcorrs(::std::string&& value) {
  set_has_remtrbcorrs();
  remtrbcorrs_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:LOCAL_OUTPUT_CORR.RemTrbCorrs)
}
#endif
void LOCAL_OUTPUT_CORR::set_remtrbcorrs(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_remtrbcorrs();
  remtrbcorrs_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:LOCAL_OUTPUT_CORR.RemTrbCorrs)
}
void LOCAL_OUTPUT_CORR::set_remtrbcorrs(const char* value, size_t size) {
  set_has_remtrbcorrs();
  remtrbcorrs_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:LOCAL_OUTPUT_CORR.RemTrbCorrs)
}
::std::string* LOCAL_OUTPUT_CORR::mutable_remtrbcorrs() {
  set_has_remtrbcorrs();
  // @@protoc_insertion_point(field_mutable:LOCAL_OUTPUT_CORR.RemTrbCorrs)
  return remtrbcorrs_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* LOCAL_OUTPUT_CORR::release_remtrbcorrs() {
  // @@protoc_insertion_point(field_release:LOCAL_OUTPUT_CORR.RemTrbCorrs)
  clear_has_remtrbcorrs();
  return remtrbcorrs_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void LOCAL_OUTPUT_CORR::set_allocated_remtrbcorrs(::std::string* remtrbcorrs) {
  if (remtrbcorrs != NULL) {
    set_has_remtrbcorrs();
  } else {
    clear_has_remtrbcorrs();
  }
  remtrbcorrs_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), remtrbcorrs);
  // @@protoc_insertion_point(field_set_allocated:LOCAL_OUTPUT_CORR.RemTrbCorrs)
}

// required string RemIptCorrs = 5;
bool LOCAL_OUTPUT_CORR::has_remiptcorrs() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void LOCAL_OUTPUT_CORR::set_has_remiptcorrs() {
  _has_bits_[0] |= 0x00000010u;
}
void LOCAL_OUTPUT_CORR::clear_has_remiptcorrs() {
  _has_bits_[0] &= ~0x00000010u;
}
void LOCAL_OUTPUT_CORR::clear_remiptcorrs() {
  remiptcorrs_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_remiptcorrs();
}
const ::std::string& LOCAL_OUTPUT_CORR::remiptcorrs() const {
  // @@protoc_insertion_point(field_get:LOCAL_OUTPUT_CORR.RemIptCorrs)
  return remiptcorrs_.GetNoArena();
}
void LOCAL_OUTPUT_CORR::set_remiptcorrs(const ::std::string& value) {
  set_has_remiptcorrs();
  remiptcorrs_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:LOCAL_OUTPUT_CORR.RemIptCorrs)
}
#if LANG_CXX11
void LOCAL_OUTPUT_CORR::set_remiptcorrs(::std::string&& value) {
  set_has_remiptcorrs();
  remiptcorrs_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:LOCAL_OUTPUT_CORR.RemIptCorrs)
}
#endif
void LOCAL_OUTPUT_CORR::set_remiptcorrs(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_remiptcorrs();
  remiptcorrs_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:LOCAL_OUTPUT_CORR.RemIptCorrs)
}
void LOCAL_OUTPUT_CORR::set_remiptcorrs(const char* value, size_t size) {
  set_has_remiptcorrs();
  remiptcorrs_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:LOCAL_OUTPUT_CORR.RemIptCorrs)
}
::std::string* LOCAL_OUTPUT_CORR::mutable_remiptcorrs() {
  set_has_remiptcorrs();
  // @@protoc_insertion_point(field_mutable:LOCAL_OUTPUT_CORR.RemIptCorrs)
  return remiptcorrs_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* LOCAL_OUTPUT_CORR::release_remiptcorrs() {
  // @@protoc_insertion_point(field_release:LOCAL_OUTPUT_CORR.RemIptCorrs)
  clear_has_remiptcorrs();
  return remiptcorrs_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void LOCAL_OUTPUT_CORR::set_allocated_remiptcorrs(::std::string* remiptcorrs) {
  if (remiptcorrs != NULL) {
    set_has_remiptcorrs();
  } else {
    clear_has_remiptcorrs();
  }
  remiptcorrs_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), remiptcorrs);
  // @@protoc_insertion_point(field_set_allocated:LOCAL_OUTPUT_CORR.RemIptCorrs)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int REMOTE_OUTPUT_CORR::kIptCorrsFieldNumber;
const int REMOTE_OUTPUT_CORR::kStatCorrsFieldNumber;
const int REMOTE_OUTPUT_CORR::kRemIptCorrsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

REMOTE_OUTPUT_CORR::REMOTE_OUTPUT_CORR()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_zc_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:REMOTE_OUTPUT_CORR)
}
REMOTE_OUTPUT_CORR::REMOTE_OUTPUT_CORR(const REMOTE_OUTPUT_CORR& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  iptcorrs_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_iptcorrs()) {
    iptcorrs_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.iptcorrs_);
  }
  statcorrs_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_statcorrs()) {
    statcorrs_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.statcorrs_);
  }
  remiptcorrs_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_remiptcorrs()) {
    remiptcorrs_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.remiptcorrs_);
  }
  // @@protoc_insertion_point(copy_constructor:REMOTE_OUTPUT_CORR)
}

void REMOTE_OUTPUT_CORR::SharedCtor() {
  _cached_size_ = 0;
  iptcorrs_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  statcorrs_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  remiptcorrs_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

REMOTE_OUTPUT_CORR::~REMOTE_OUTPUT_CORR() {
  // @@protoc_insertion_point(destructor:REMOTE_OUTPUT_CORR)
  SharedDtor();
}

void REMOTE_OUTPUT_CORR::SharedDtor() {
  iptcorrs_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  statcorrs_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  remiptcorrs_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void REMOTE_OUTPUT_CORR::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* REMOTE_OUTPUT_CORR::descriptor() {
  protobuf_zc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_zc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const REMOTE_OUTPUT_CORR& REMOTE_OUTPUT_CORR::default_instance() {
  protobuf_zc_2eproto::InitDefaults();
  return *internal_default_instance();
}

REMOTE_OUTPUT_CORR* REMOTE_OUTPUT_CORR::New(::google::protobuf::Arena* arena) const {
  REMOTE_OUTPUT_CORR* n = new REMOTE_OUTPUT_CORR;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void REMOTE_OUTPUT_CORR::Clear() {
// @@protoc_insertion_point(message_clear_start:REMOTE_OUTPUT_CORR)
  if (_has_bits_[0 / 32] & 7u) {
    if (has_iptcorrs()) {
      GOOGLE_DCHECK(!iptcorrs_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*iptcorrs_.UnsafeRawStringPointer())->clear();
    }
    if (has_statcorrs()) {
      GOOGLE_DCHECK(!statcorrs_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*statcorrs_.UnsafeRawStringPointer())->clear();
    }
    if (has_remiptcorrs()) {
      GOOGLE_DCHECK(!remiptcorrs_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*remiptcorrs_.UnsafeRawStringPointer())->clear();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool REMOTE_OUTPUT_CORR::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:REMOTE_OUTPUT_CORR)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string IptCorrs = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_iptcorrs()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->iptcorrs().data(), this->iptcorrs().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "REMOTE_OUTPUT_CORR.IptCorrs");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required string StatCorrs = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_statcorrs()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->statcorrs().data(), this->statcorrs().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "REMOTE_OUTPUT_CORR.StatCorrs");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required string RemIptCorrs = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_remiptcorrs()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->remiptcorrs().data(), this->remiptcorrs().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "REMOTE_OUTPUT_CORR.RemIptCorrs");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:REMOTE_OUTPUT_CORR)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:REMOTE_OUTPUT_CORR)
  return false;
#undef DO_
}

void REMOTE_OUTPUT_CORR::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:REMOTE_OUTPUT_CORR)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string IptCorrs = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->iptcorrs().data(), this->iptcorrs().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "REMOTE_OUTPUT_CORR.IptCorrs");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->iptcorrs(), output);
  }

  // required string StatCorrs = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->statcorrs().data(), this->statcorrs().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "REMOTE_OUTPUT_CORR.StatCorrs");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->statcorrs(), output);
  }

  // required string RemIptCorrs = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->remiptcorrs().data(), this->remiptcorrs().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "REMOTE_OUTPUT_CORR.RemIptCorrs");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->remiptcorrs(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:REMOTE_OUTPUT_CORR)
}

::google::protobuf::uint8* REMOTE_OUTPUT_CORR::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:REMOTE_OUTPUT_CORR)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string IptCorrs = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->iptcorrs().data(), this->iptcorrs().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "REMOTE_OUTPUT_CORR.IptCorrs");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->iptcorrs(), target);
  }

  // required string StatCorrs = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->statcorrs().data(), this->statcorrs().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "REMOTE_OUTPUT_CORR.StatCorrs");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->statcorrs(), target);
  }

  // required string RemIptCorrs = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->remiptcorrs().data(), this->remiptcorrs().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "REMOTE_OUTPUT_CORR.RemIptCorrs");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->remiptcorrs(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:REMOTE_OUTPUT_CORR)
  return target;
}

size_t REMOTE_OUTPUT_CORR::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:REMOTE_OUTPUT_CORR)
  size_t total_size = 0;

  if (has_iptcorrs()) {
    // required string IptCorrs = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->iptcorrs());
  }

  if (has_statcorrs()) {
    // required string StatCorrs = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->statcorrs());
  }

  if (has_remiptcorrs()) {
    // required string RemIptCorrs = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->remiptcorrs());
  }

  return total_size;
}
size_t REMOTE_OUTPUT_CORR::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:REMOTE_OUTPUT_CORR)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000007) ^ 0x00000007) == 0) {  // All required fields are present.
    // required string IptCorrs = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->iptcorrs());

    // required string StatCorrs = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->statcorrs());

    // required string RemIptCorrs = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->remiptcorrs());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void REMOTE_OUTPUT_CORR::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:REMOTE_OUTPUT_CORR)
  GOOGLE_DCHECK_NE(&from, this);
  const REMOTE_OUTPUT_CORR* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const REMOTE_OUTPUT_CORR>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:REMOTE_OUTPUT_CORR)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:REMOTE_OUTPUT_CORR)
    MergeFrom(*source);
  }
}

void REMOTE_OUTPUT_CORR::MergeFrom(const REMOTE_OUTPUT_CORR& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:REMOTE_OUTPUT_CORR)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_iptcorrs();
      iptcorrs_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.iptcorrs_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_statcorrs();
      statcorrs_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.statcorrs_);
    }
    if (cached_has_bits & 0x00000004u) {
      set_has_remiptcorrs();
      remiptcorrs_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.remiptcorrs_);
    }
  }
}

void REMOTE_OUTPUT_CORR::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:REMOTE_OUTPUT_CORR)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void REMOTE_OUTPUT_CORR::CopyFrom(const REMOTE_OUTPUT_CORR& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:REMOTE_OUTPUT_CORR)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool REMOTE_OUTPUT_CORR::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;
  return true;
}

void REMOTE_OUTPUT_CORR::Swap(REMOTE_OUTPUT_CORR* other) {
  if (other == this) return;
  InternalSwap(other);
}
void REMOTE_OUTPUT_CORR::InternalSwap(REMOTE_OUTPUT_CORR* other) {
  iptcorrs_.Swap(&other->iptcorrs_);
  statcorrs_.Swap(&other->statcorrs_);
  remiptcorrs_.Swap(&other->remiptcorrs_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata REMOTE_OUTPUT_CORR::GetMetadata() const {
  protobuf_zc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_zc_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// REMOTE_OUTPUT_CORR

// required string IptCorrs = 1;
bool REMOTE_OUTPUT_CORR::has_iptcorrs() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void REMOTE_OUTPUT_CORR::set_has_iptcorrs() {
  _has_bits_[0] |= 0x00000001u;
}
void REMOTE_OUTPUT_CORR::clear_has_iptcorrs() {
  _has_bits_[0] &= ~0x00000001u;
}
void REMOTE_OUTPUT_CORR::clear_iptcorrs() {
  iptcorrs_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_iptcorrs();
}
const ::std::string& REMOTE_OUTPUT_CORR::iptcorrs() const {
  // @@protoc_insertion_point(field_get:REMOTE_OUTPUT_CORR.IptCorrs)
  return iptcorrs_.GetNoArena();
}
void REMOTE_OUTPUT_CORR::set_iptcorrs(const ::std::string& value) {
  set_has_iptcorrs();
  iptcorrs_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:REMOTE_OUTPUT_CORR.IptCorrs)
}
#if LANG_CXX11
void REMOTE_OUTPUT_CORR::set_iptcorrs(::std::string&& value) {
  set_has_iptcorrs();
  iptcorrs_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:REMOTE_OUTPUT_CORR.IptCorrs)
}
#endif
void REMOTE_OUTPUT_CORR::set_iptcorrs(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_iptcorrs();
  iptcorrs_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:REMOTE_OUTPUT_CORR.IptCorrs)
}
void REMOTE_OUTPUT_CORR::set_iptcorrs(const char* value, size_t size) {
  set_has_iptcorrs();
  iptcorrs_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:REMOTE_OUTPUT_CORR.IptCorrs)
}
::std::string* REMOTE_OUTPUT_CORR::mutable_iptcorrs() {
  set_has_iptcorrs();
  // @@protoc_insertion_point(field_mutable:REMOTE_OUTPUT_CORR.IptCorrs)
  return iptcorrs_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* REMOTE_OUTPUT_CORR::release_iptcorrs() {
  // @@protoc_insertion_point(field_release:REMOTE_OUTPUT_CORR.IptCorrs)
  clear_has_iptcorrs();
  return iptcorrs_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void REMOTE_OUTPUT_CORR::set_allocated_iptcorrs(::std::string* iptcorrs) {
  if (iptcorrs != NULL) {
    set_has_iptcorrs();
  } else {
    clear_has_iptcorrs();
  }
  iptcorrs_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), iptcorrs);
  // @@protoc_insertion_point(field_set_allocated:REMOTE_OUTPUT_CORR.IptCorrs)
}

// required string StatCorrs = 2;
bool REMOTE_OUTPUT_CORR::has_statcorrs() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void REMOTE_OUTPUT_CORR::set_has_statcorrs() {
  _has_bits_[0] |= 0x00000002u;
}
void REMOTE_OUTPUT_CORR::clear_has_statcorrs() {
  _has_bits_[0] &= ~0x00000002u;
}
void REMOTE_OUTPUT_CORR::clear_statcorrs() {
  statcorrs_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_statcorrs();
}
const ::std::string& REMOTE_OUTPUT_CORR::statcorrs() const {
  // @@protoc_insertion_point(field_get:REMOTE_OUTPUT_CORR.StatCorrs)
  return statcorrs_.GetNoArena();
}
void REMOTE_OUTPUT_CORR::set_statcorrs(const ::std::string& value) {
  set_has_statcorrs();
  statcorrs_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:REMOTE_OUTPUT_CORR.StatCorrs)
}
#if LANG_CXX11
void REMOTE_OUTPUT_CORR::set_statcorrs(::std::string&& value) {
  set_has_statcorrs();
  statcorrs_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:REMOTE_OUTPUT_CORR.StatCorrs)
}
#endif
void REMOTE_OUTPUT_CORR::set_statcorrs(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_statcorrs();
  statcorrs_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:REMOTE_OUTPUT_CORR.StatCorrs)
}
void REMOTE_OUTPUT_CORR::set_statcorrs(const char* value, size_t size) {
  set_has_statcorrs();
  statcorrs_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:REMOTE_OUTPUT_CORR.StatCorrs)
}
::std::string* REMOTE_OUTPUT_CORR::mutable_statcorrs() {
  set_has_statcorrs();
  // @@protoc_insertion_point(field_mutable:REMOTE_OUTPUT_CORR.StatCorrs)
  return statcorrs_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* REMOTE_OUTPUT_CORR::release_statcorrs() {
  // @@protoc_insertion_point(field_release:REMOTE_OUTPUT_CORR.StatCorrs)
  clear_has_statcorrs();
  return statcorrs_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void REMOTE_OUTPUT_CORR::set_allocated_statcorrs(::std::string* statcorrs) {
  if (statcorrs != NULL) {
    set_has_statcorrs();
  } else {
    clear_has_statcorrs();
  }
  statcorrs_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), statcorrs);
  // @@protoc_insertion_point(field_set_allocated:REMOTE_OUTPUT_CORR.StatCorrs)
}

// required string RemIptCorrs = 3;
bool REMOTE_OUTPUT_CORR::has_remiptcorrs() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void REMOTE_OUTPUT_CORR::set_has_remiptcorrs() {
  _has_bits_[0] |= 0x00000004u;
}
void REMOTE_OUTPUT_CORR::clear_has_remiptcorrs() {
  _has_bits_[0] &= ~0x00000004u;
}
void REMOTE_OUTPUT_CORR::clear_remiptcorrs() {
  remiptcorrs_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_remiptcorrs();
}
const ::std::string& REMOTE_OUTPUT_CORR::remiptcorrs() const {
  // @@protoc_insertion_point(field_get:REMOTE_OUTPUT_CORR.RemIptCorrs)
  return remiptcorrs_.GetNoArena();
}
void REMOTE_OUTPUT_CORR::set_remiptcorrs(const ::std::string& value) {
  set_has_remiptcorrs();
  remiptcorrs_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:REMOTE_OUTPUT_CORR.RemIptCorrs)
}
#if LANG_CXX11
void REMOTE_OUTPUT_CORR::set_remiptcorrs(::std::string&& value) {
  set_has_remiptcorrs();
  remiptcorrs_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:REMOTE_OUTPUT_CORR.RemIptCorrs)
}
#endif
void REMOTE_OUTPUT_CORR::set_remiptcorrs(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_remiptcorrs();
  remiptcorrs_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:REMOTE_OUTPUT_CORR.RemIptCorrs)
}
void REMOTE_OUTPUT_CORR::set_remiptcorrs(const char* value, size_t size) {
  set_has_remiptcorrs();
  remiptcorrs_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:REMOTE_OUTPUT_CORR.RemIptCorrs)
}
::std::string* REMOTE_OUTPUT_CORR::mutable_remiptcorrs() {
  set_has_remiptcorrs();
  // @@protoc_insertion_point(field_mutable:REMOTE_OUTPUT_CORR.RemIptCorrs)
  return remiptcorrs_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* REMOTE_OUTPUT_CORR::release_remiptcorrs() {
  // @@protoc_insertion_point(field_release:REMOTE_OUTPUT_CORR.RemIptCorrs)
  clear_has_remiptcorrs();
  return remiptcorrs_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void REMOTE_OUTPUT_CORR::set_allocated_remiptcorrs(::std::string* remiptcorrs) {
  if (remiptcorrs != NULL) {
    set_has_remiptcorrs();
  } else {
    clear_has_remiptcorrs();
  }
  remiptcorrs_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), remiptcorrs);
  // @@protoc_insertion_point(field_set_allocated:REMOTE_OUTPUT_CORR.RemIptCorrs)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PASSWORD::kLenFieldNumber;
const int PASSWORD::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PASSWORD::PASSWORD()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_zc_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:PASSWORD)
}
PASSWORD::PASSWORD(const PASSWORD& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_data()) {
    data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
  }
  len_ = from.len_;
  // @@protoc_insertion_point(copy_constructor:PASSWORD)
}

void PASSWORD::SharedCtor() {
  _cached_size_ = 0;
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  len_ = 0;
}

PASSWORD::~PASSWORD() {
  // @@protoc_insertion_point(destructor:PASSWORD)
  SharedDtor();
}

void PASSWORD::SharedDtor() {
  data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void PASSWORD::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PASSWORD::descriptor() {
  protobuf_zc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_zc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PASSWORD& PASSWORD::default_instance() {
  protobuf_zc_2eproto::InitDefaults();
  return *internal_default_instance();
}

PASSWORD* PASSWORD::New(::google::protobuf::Arena* arena) const {
  PASSWORD* n = new PASSWORD;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PASSWORD::Clear() {
// @@protoc_insertion_point(message_clear_start:PASSWORD)
  if (has_data()) {
    GOOGLE_DCHECK(!data_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
    (*data_.UnsafeRawStringPointer())->clear();
  }
  len_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool PASSWORD::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:PASSWORD)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 Len = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          set_has_len();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &len_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required string Data = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_data()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->data().data(), this->data().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "PASSWORD.Data");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:PASSWORD)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:PASSWORD)
  return false;
#undef DO_
}

void PASSWORD::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:PASSWORD)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 Len = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->len(), output);
  }

  // required string Data = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "PASSWORD.Data");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->data(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:PASSWORD)
}

::google::protobuf::uint8* PASSWORD::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:PASSWORD)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 Len = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->len(), target);
  }

  // required string Data = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "PASSWORD.Data");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->data(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:PASSWORD)
  return target;
}

size_t PASSWORD::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:PASSWORD)
  size_t total_size = 0;

  if (has_data()) {
    // required string Data = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->data());
  }

  if (has_len()) {
    // required int32 Len = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->len());
  }

  return total_size;
}
size_t PASSWORD::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:PASSWORD)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required string Data = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->data());

    // required int32 Len = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->len());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PASSWORD::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:PASSWORD)
  GOOGLE_DCHECK_NE(&from, this);
  const PASSWORD* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PASSWORD>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:PASSWORD)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:PASSWORD)
    MergeFrom(*source);
  }
}

void PASSWORD::MergeFrom(const PASSWORD& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:PASSWORD)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_data();
      data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
    }
    if (cached_has_bits & 0x00000002u) {
      len_ = from.len_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void PASSWORD::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:PASSWORD)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PASSWORD::CopyFrom(const PASSWORD& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PASSWORD)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PASSWORD::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  return true;
}

void PASSWORD::Swap(PASSWORD* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PASSWORD::InternalSwap(PASSWORD* other) {
  data_.Swap(&other->data_);
  std::swap(len_, other->len_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PASSWORD::GetMetadata() const {
  protobuf_zc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_zc_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PASSWORD

// required int32 Len = 1;
bool PASSWORD::has_len() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void PASSWORD::set_has_len() {
  _has_bits_[0] |= 0x00000002u;
}
void PASSWORD::clear_has_len() {
  _has_bits_[0] &= ~0x00000002u;
}
void PASSWORD::clear_len() {
  len_ = 0;
  clear_has_len();
}
::google::protobuf::int32 PASSWORD::len() const {
  // @@protoc_insertion_point(field_get:PASSWORD.Len)
  return len_;
}
void PASSWORD::set_len(::google::protobuf::int32 value) {
  set_has_len();
  len_ = value;
  // @@protoc_insertion_point(field_set:PASSWORD.Len)
}

// required string Data = 2;
bool PASSWORD::has_data() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void PASSWORD::set_has_data() {
  _has_bits_[0] |= 0x00000001u;
}
void PASSWORD::clear_has_data() {
  _has_bits_[0] &= ~0x00000001u;
}
void PASSWORD::clear_data() {
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_data();
}
const ::std::string& PASSWORD::data() const {
  // @@protoc_insertion_point(field_get:PASSWORD.Data)
  return data_.GetNoArena();
}
void PASSWORD::set_data(const ::std::string& value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:PASSWORD.Data)
}
#if LANG_CXX11
void PASSWORD::set_data(::std::string&& value) {
  set_has_data();
  data_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:PASSWORD.Data)
}
#endif
void PASSWORD::set_data(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:PASSWORD.Data)
}
void PASSWORD::set_data(const char* value, size_t size) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:PASSWORD.Data)
}
::std::string* PASSWORD::mutable_data() {
  set_has_data();
  // @@protoc_insertion_point(field_mutable:PASSWORD.Data)
  return data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* PASSWORD::release_data() {
  // @@protoc_insertion_point(field_release:PASSWORD.Data)
  clear_has_data();
  return data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void PASSWORD::set_allocated_data(::std::string* data) {
  if (data != NULL) {
    set_has_data();
  } else {
    clear_has_data();
  }
  data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data);
  // @@protoc_insertion_point(field_set_allocated:PASSWORD.Data)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CFG_DST::kStartMonthFieldNumber;
const int CFG_DST::kStartOrdinalWeekFieldNumber;
const int CFG_DST::kStartDayOfWeekFieldNumber;
const int CFG_DST::kStartHourFieldNumber;
const int CFG_DST::kStartMinFieldNumber;
const int CFG_DST::kEndMonthFieldNumber;
const int CFG_DST::kEndOrdinalWeekFieldNumber;
const int CFG_DST::kEndDayOfWeekFieldNumber;
const int CFG_DST::kEndHourFieldNumber;
const int CFG_DST::kEndMinFieldNumber;
const int CFG_DST::kDailyAdjustFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CFG_DST::CFG_DST()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_zc_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CFG_DST)
}
CFG_DST::CFG_DST(const CFG_DST& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&startmonth_, &from.startmonth_,
    reinterpret_cast<char*>(&dailyadjust_) -
    reinterpret_cast<char*>(&startmonth_) + sizeof(dailyadjust_));
  // @@protoc_insertion_point(copy_constructor:CFG_DST)
}

void CFG_DST::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&startmonth_, 0, reinterpret_cast<char*>(&dailyadjust_) -
    reinterpret_cast<char*>(&startmonth_) + sizeof(dailyadjust_));
}

CFG_DST::~CFG_DST() {
  // @@protoc_insertion_point(destructor:CFG_DST)
  SharedDtor();
}

void CFG_DST::SharedDtor() {
}

void CFG_DST::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CFG_DST::descriptor() {
  protobuf_zc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_zc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CFG_DST& CFG_DST::default_instance() {
  protobuf_zc_2eproto::InitDefaults();
  return *internal_default_instance();
}

CFG_DST* CFG_DST::New(::google::protobuf::Arena* arena) const {
  CFG_DST* n = new CFG_DST;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CFG_DST::Clear() {
// @@protoc_insertion_point(message_clear_start:CFG_DST)
  if (_has_bits_[0 / 32] & 255u) {
    ::memset(&startmonth_, 0, reinterpret_cast<char*>(&enddayofweek_) -
      reinterpret_cast<char*>(&startmonth_) + sizeof(enddayofweek_));
  }
  if (_has_bits_[8 / 32] & 1792u) {
    ::memset(&endhour_, 0, reinterpret_cast<char*>(&dailyadjust_) -
      reinterpret_cast<char*>(&endhour_) + sizeof(dailyadjust_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CFG_DST::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CFG_DST)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 StartMonth = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          set_has_startmonth();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &startmonth_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 StartOrdinalWeek = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {
          set_has_startordinalweek();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &startordinalweek_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 StartDayOfWeek = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u)) {
          set_has_startdayofweek();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &startdayofweek_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 StartHour = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u)) {
          set_has_starthour();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &starthour_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 StartMin = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u)) {
          set_has_startmin();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &startmin_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 EndMonth = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u)) {
          set_has_endmonth();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &endmonth_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 EndOrdinalWeek = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u)) {
          set_has_endordinalweek();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &endordinalweek_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 EndDayOfWeek = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u)) {
          set_has_enddayofweek();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &enddayofweek_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 EndHour = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u)) {
          set_has_endhour();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &endhour_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 EndMin = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u)) {
          set_has_endmin();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &endmin_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 DailyAdjust = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(88u)) {
          set_has_dailyadjust();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &dailyadjust_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CFG_DST)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CFG_DST)
  return false;
#undef DO_
}

void CFG_DST::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CFG_DST)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 StartMonth = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->startmonth(), output);
  }

  // required int32 StartOrdinalWeek = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->startordinalweek(), output);
  }

  // required int32 StartDayOfWeek = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->startdayofweek(), output);
  }

  // required int32 StartHour = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->starthour(), output);
  }

  // required int32 StartMin = 5;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->startmin(), output);
  }

  // required int32 EndMonth = 6;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->endmonth(), output);
  }

  // required int32 EndOrdinalWeek = 7;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->endordinalweek(), output);
  }

  // required int32 EndDayOfWeek = 8;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(8, this->enddayofweek(), output);
  }

  // required int32 EndHour = 9;
  if (cached_has_bits & 0x00000100u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(9, this->endhour(), output);
  }

  // required int32 EndMin = 10;
  if (cached_has_bits & 0x00000200u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(10, this->endmin(), output);
  }

  // required int32 DailyAdjust = 11;
  if (cached_has_bits & 0x00000400u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(11, this->dailyadjust(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CFG_DST)
}

::google::protobuf::uint8* CFG_DST::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CFG_DST)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 StartMonth = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->startmonth(), target);
  }

  // required int32 StartOrdinalWeek = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->startordinalweek(), target);
  }

  // required int32 StartDayOfWeek = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->startdayofweek(), target);
  }

  // required int32 StartHour = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->starthour(), target);
  }

  // required int32 StartMin = 5;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->startmin(), target);
  }

  // required int32 EndMonth = 6;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->endmonth(), target);
  }

  // required int32 EndOrdinalWeek = 7;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->endordinalweek(), target);
  }

  // required int32 EndDayOfWeek = 8;
  if (cached_has_bits & 0x00000080u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(8, this->enddayofweek(), target);
  }

  // required int32 EndHour = 9;
  if (cached_has_bits & 0x00000100u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(9, this->endhour(), target);
  }

  // required int32 EndMin = 10;
  if (cached_has_bits & 0x00000200u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(10, this->endmin(), target);
  }

  // required int32 DailyAdjust = 11;
  if (cached_has_bits & 0x00000400u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(11, this->dailyadjust(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CFG_DST)
  return target;
}

size_t CFG_DST::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:CFG_DST)
  size_t total_size = 0;

  if (has_startmonth()) {
    // required int32 StartMonth = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->startmonth());
  }

  if (has_startordinalweek()) {
    // required int32 StartOrdinalWeek = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->startordinalweek());
  }

  if (has_startdayofweek()) {
    // required int32 StartDayOfWeek = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->startdayofweek());
  }

  if (has_starthour()) {
    // required int32 StartHour = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->starthour());
  }

  if (has_startmin()) {
    // required int32 StartMin = 5;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->startmin());
  }

  if (has_endmonth()) {
    // required int32 EndMonth = 6;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->endmonth());
  }

  if (has_endordinalweek()) {
    // required int32 EndOrdinalWeek = 7;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->endordinalweek());
  }

  if (has_enddayofweek()) {
    // required int32 EndDayOfWeek = 8;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->enddayofweek());
  }

  if (has_endhour()) {
    // required int32 EndHour = 9;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->endhour());
  }

  if (has_endmin()) {
    // required int32 EndMin = 10;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->endmin());
  }

  if (has_dailyadjust()) {
    // required int32 DailyAdjust = 11;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->dailyadjust());
  }

  return total_size;
}
size_t CFG_DST::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CFG_DST)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (((_has_bits_[0] & 0x000007ff) ^ 0x000007ff) == 0) {  // All required fields are present.
    // required int32 StartMonth = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->startmonth());

    // required int32 StartOrdinalWeek = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->startordinalweek());

    // required int32 StartDayOfWeek = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->startdayofweek());

    // required int32 StartHour = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->starthour());

    // required int32 StartMin = 5;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->startmin());

    // required int32 EndMonth = 6;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->endmonth());

    // required int32 EndOrdinalWeek = 7;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->endordinalweek());

    // required int32 EndDayOfWeek = 8;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->enddayofweek());

    // required int32 EndHour = 9;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->endhour());

    // required int32 EndMin = 10;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->endmin());

    // required int32 DailyAdjust = 11;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->dailyadjust());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CFG_DST::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CFG_DST)
  GOOGLE_DCHECK_NE(&from, this);
  const CFG_DST* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CFG_DST>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CFG_DST)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CFG_DST)
    MergeFrom(*source);
  }
}

void CFG_DST::MergeFrom(const CFG_DST& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CFG_DST)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      startmonth_ = from.startmonth_;
    }
    if (cached_has_bits & 0x00000002u) {
      startordinalweek_ = from.startordinalweek_;
    }
    if (cached_has_bits & 0x00000004u) {
      startdayofweek_ = from.startdayofweek_;
    }
    if (cached_has_bits & 0x00000008u) {
      starthour_ = from.starthour_;
    }
    if (cached_has_bits & 0x00000010u) {
      startmin_ = from.startmin_;
    }
    if (cached_has_bits & 0x00000020u) {
      endmonth_ = from.endmonth_;
    }
    if (cached_has_bits & 0x00000040u) {
      endordinalweek_ = from.endordinalweek_;
    }
    if (cached_has_bits & 0x00000080u) {
      enddayofweek_ = from.enddayofweek_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 1792u) {
    if (cached_has_bits & 0x00000100u) {
      endhour_ = from.endhour_;
    }
    if (cached_has_bits & 0x00000200u) {
      endmin_ = from.endmin_;
    }
    if (cached_has_bits & 0x00000400u) {
      dailyadjust_ = from.dailyadjust_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CFG_DST::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CFG_DST)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CFG_DST::CopyFrom(const CFG_DST& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CFG_DST)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CFG_DST::IsInitialized() const {
  if ((_has_bits_[0] & 0x000007ff) != 0x000007ff) return false;
  return true;
}

void CFG_DST::Swap(CFG_DST* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CFG_DST::InternalSwap(CFG_DST* other) {
  std::swap(startmonth_, other->startmonth_);
  std::swap(startordinalweek_, other->startordinalweek_);
  std::swap(startdayofweek_, other->startdayofweek_);
  std::swap(starthour_, other->starthour_);
  std::swap(startmin_, other->startmin_);
  std::swap(endmonth_, other->endmonth_);
  std::swap(endordinalweek_, other->endordinalweek_);
  std::swap(enddayofweek_, other->enddayofweek_);
  std::swap(endhour_, other->endhour_);
  std::swap(endmin_, other->endmin_);
  std::swap(dailyadjust_, other->dailyadjust_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CFG_DST::GetMetadata() const {
  protobuf_zc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_zc_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CFG_DST

// required int32 StartMonth = 1;
bool CFG_DST::has_startmonth() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CFG_DST::set_has_startmonth() {
  _has_bits_[0] |= 0x00000001u;
}
void CFG_DST::clear_has_startmonth() {
  _has_bits_[0] &= ~0x00000001u;
}
void CFG_DST::clear_startmonth() {
  startmonth_ = 0;
  clear_has_startmonth();
}
::google::protobuf::int32 CFG_DST::startmonth() const {
  // @@protoc_insertion_point(field_get:CFG_DST.StartMonth)
  return startmonth_;
}
void CFG_DST::set_startmonth(::google::protobuf::int32 value) {
  set_has_startmonth();
  startmonth_ = value;
  // @@protoc_insertion_point(field_set:CFG_DST.StartMonth)
}

// required int32 StartOrdinalWeek = 2;
bool CFG_DST::has_startordinalweek() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void CFG_DST::set_has_startordinalweek() {
  _has_bits_[0] |= 0x00000002u;
}
void CFG_DST::clear_has_startordinalweek() {
  _has_bits_[0] &= ~0x00000002u;
}
void CFG_DST::clear_startordinalweek() {
  startordinalweek_ = 0;
  clear_has_startordinalweek();
}
::google::protobuf::int32 CFG_DST::startordinalweek() const {
  // @@protoc_insertion_point(field_get:CFG_DST.StartOrdinalWeek)
  return startordinalweek_;
}
void CFG_DST::set_startordinalweek(::google::protobuf::int32 value) {
  set_has_startordinalweek();
  startordinalweek_ = value;
  // @@protoc_insertion_point(field_set:CFG_DST.StartOrdinalWeek)
}

// required int32 StartDayOfWeek = 3;
bool CFG_DST::has_startdayofweek() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void CFG_DST::set_has_startdayofweek() {
  _has_bits_[0] |= 0x00000004u;
}
void CFG_DST::clear_has_startdayofweek() {
  _has_bits_[0] &= ~0x00000004u;
}
void CFG_DST::clear_startdayofweek() {
  startdayofweek_ = 0;
  clear_has_startdayofweek();
}
::google::protobuf::int32 CFG_DST::startdayofweek() const {
  // @@protoc_insertion_point(field_get:CFG_DST.StartDayOfWeek)
  return startdayofweek_;
}
void CFG_DST::set_startdayofweek(::google::protobuf::int32 value) {
  set_has_startdayofweek();
  startdayofweek_ = value;
  // @@protoc_insertion_point(field_set:CFG_DST.StartDayOfWeek)
}

// required int32 StartHour = 4;
bool CFG_DST::has_starthour() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void CFG_DST::set_has_starthour() {
  _has_bits_[0] |= 0x00000008u;
}
void CFG_DST::clear_has_starthour() {
  _has_bits_[0] &= ~0x00000008u;
}
void CFG_DST::clear_starthour() {
  starthour_ = 0;
  clear_has_starthour();
}
::google::protobuf::int32 CFG_DST::starthour() const {
  // @@protoc_insertion_point(field_get:CFG_DST.StartHour)
  return starthour_;
}
void CFG_DST::set_starthour(::google::protobuf::int32 value) {
  set_has_starthour();
  starthour_ = value;
  // @@protoc_insertion_point(field_set:CFG_DST.StartHour)
}

// required int32 StartMin = 5;
bool CFG_DST::has_startmin() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void CFG_DST::set_has_startmin() {
  _has_bits_[0] |= 0x00000010u;
}
void CFG_DST::clear_has_startmin() {
  _has_bits_[0] &= ~0x00000010u;
}
void CFG_DST::clear_startmin() {
  startmin_ = 0;
  clear_has_startmin();
}
::google::protobuf::int32 CFG_DST::startmin() const {
  // @@protoc_insertion_point(field_get:CFG_DST.StartMin)
  return startmin_;
}
void CFG_DST::set_startmin(::google::protobuf::int32 value) {
  set_has_startmin();
  startmin_ = value;
  // @@protoc_insertion_point(field_set:CFG_DST.StartMin)
}

// required int32 EndMonth = 6;
bool CFG_DST::has_endmonth() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void CFG_DST::set_has_endmonth() {
  _has_bits_[0] |= 0x00000020u;
}
void CFG_DST::clear_has_endmonth() {
  _has_bits_[0] &= ~0x00000020u;
}
void CFG_DST::clear_endmonth() {
  endmonth_ = 0;
  clear_has_endmonth();
}
::google::protobuf::int32 CFG_DST::endmonth() const {
  // @@protoc_insertion_point(field_get:CFG_DST.EndMonth)
  return endmonth_;
}
void CFG_DST::set_endmonth(::google::protobuf::int32 value) {
  set_has_endmonth();
  endmonth_ = value;
  // @@protoc_insertion_point(field_set:CFG_DST.EndMonth)
}

// required int32 EndOrdinalWeek = 7;
bool CFG_DST::has_endordinalweek() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
void CFG_DST::set_has_endordinalweek() {
  _has_bits_[0] |= 0x00000040u;
}
void CFG_DST::clear_has_endordinalweek() {
  _has_bits_[0] &= ~0x00000040u;
}
void CFG_DST::clear_endordinalweek() {
  endordinalweek_ = 0;
  clear_has_endordinalweek();
}
::google::protobuf::int32 CFG_DST::endordinalweek() const {
  // @@protoc_insertion_point(field_get:CFG_DST.EndOrdinalWeek)
  return endordinalweek_;
}
void CFG_DST::set_endordinalweek(::google::protobuf::int32 value) {
  set_has_endordinalweek();
  endordinalweek_ = value;
  // @@protoc_insertion_point(field_set:CFG_DST.EndOrdinalWeek)
}

// required int32 EndDayOfWeek = 8;
bool CFG_DST::has_enddayofweek() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
void CFG_DST::set_has_enddayofweek() {
  _has_bits_[0] |= 0x00000080u;
}
void CFG_DST::clear_has_enddayofweek() {
  _has_bits_[0] &= ~0x00000080u;
}
void CFG_DST::clear_enddayofweek() {
  enddayofweek_ = 0;
  clear_has_enddayofweek();
}
::google::protobuf::int32 CFG_DST::enddayofweek() const {
  // @@protoc_insertion_point(field_get:CFG_DST.EndDayOfWeek)
  return enddayofweek_;
}
void CFG_DST::set_enddayofweek(::google::protobuf::int32 value) {
  set_has_enddayofweek();
  enddayofweek_ = value;
  // @@protoc_insertion_point(field_set:CFG_DST.EndDayOfWeek)
}

// required int32 EndHour = 9;
bool CFG_DST::has_endhour() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
void CFG_DST::set_has_endhour() {
  _has_bits_[0] |= 0x00000100u;
}
void CFG_DST::clear_has_endhour() {
  _has_bits_[0] &= ~0x00000100u;
}
void CFG_DST::clear_endhour() {
  endhour_ = 0;
  clear_has_endhour();
}
::google::protobuf::int32 CFG_DST::endhour() const {
  // @@protoc_insertion_point(field_get:CFG_DST.EndHour)
  return endhour_;
}
void CFG_DST::set_endhour(::google::protobuf::int32 value) {
  set_has_endhour();
  endhour_ = value;
  // @@protoc_insertion_point(field_set:CFG_DST.EndHour)
}

// required int32 EndMin = 10;
bool CFG_DST::has_endmin() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
void CFG_DST::set_has_endmin() {
  _has_bits_[0] |= 0x00000200u;
}
void CFG_DST::clear_has_endmin() {
  _has_bits_[0] &= ~0x00000200u;
}
void CFG_DST::clear_endmin() {
  endmin_ = 0;
  clear_has_endmin();
}
::google::protobuf::int32 CFG_DST::endmin() const {
  // @@protoc_insertion_point(field_get:CFG_DST.EndMin)
  return endmin_;
}
void CFG_DST::set_endmin(::google::protobuf::int32 value) {
  set_has_endmin();
  endmin_ = value;
  // @@protoc_insertion_point(field_set:CFG_DST.EndMin)
}

// required int32 DailyAdjust = 11;
bool CFG_DST::has_dailyadjust() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
void CFG_DST::set_has_dailyadjust() {
  _has_bits_[0] |= 0x00000400u;
}
void CFG_DST::clear_has_dailyadjust() {
  _has_bits_[0] &= ~0x00000400u;
}
void CFG_DST::clear_dailyadjust() {
  dailyadjust_ = 0;
  clear_has_dailyadjust();
}
::google::protobuf::int32 CFG_DST::dailyadjust() const {
  // @@protoc_insertion_point(field_get:CFG_DST.DailyAdjust)
  return dailyadjust_;
}
void CFG_DST::set_dailyadjust(::google::protobuf::int32 value) {
  set_has_dailyadjust();
  dailyadjust_ = value;
  // @@protoc_insertion_point(field_set:CFG_DST.DailyAdjust)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ZC::kLabelFieldNumber;
const int ZC::kGUIDFieldNumber;
const int ZC::kConfigVerFieldNumber;
const int ZC::kGSCUFeatureFlagsFieldNumber;
const int ZC::kGHWUStrobesTypeFieldNumber;
const int ZC::kIptCktProcessTypeFieldNumber;
const int ZC::kLocalCorrFieldNumber;
const int ZC::kDstFieldNumber;
const int ZC::kDataIntCheckFieldNumber;
const int ZC::kRemoteCorrFieldNumber;
const int ZC::kTimersFieldNumber;
const int ZC::kWIOInfoFieldNumber;
const int ZC::kPasswordFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ZC::ZC()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_zc_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ZC)
}
ZC::ZC(const ZC& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      remotecorr_(from.remotecorr_),
      timers_(from.timers_),
      wioinfo_(from.wioinfo_),
      password_(from.password_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  label_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_label()) {
    label_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.label_);
  }
  guid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_guid()) {
    guid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.guid_);
  }
  configver_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_configver()) {
    configver_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.configver_);
  }
  iptcktprocesstype_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_iptcktprocesstype()) {
    iptcktprocesstype_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.iptcktprocesstype_);
  }
  if (from.has_localcorr()) {
    localcorr_ = new ::LOCAL_OUTPUT_CORR(*from.localcorr_);
  } else {
    localcorr_ = NULL;
  }
  if (from.has_dst()) {
    dst_ = new ::CFG_DST(*from.dst_);
  } else {
    dst_ = NULL;
  }
  ::memcpy(&gscufeatureflags_, &from.gscufeatureflags_,
    reinterpret_cast<char*>(&dataintcheck_) -
    reinterpret_cast<char*>(&gscufeatureflags_) + sizeof(dataintcheck_));
  // @@protoc_insertion_point(copy_constructor:ZC)
}

void ZC::SharedCtor() {
  _cached_size_ = 0;
  label_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  guid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  configver_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  iptcktprocesstype_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&localcorr_, 0, reinterpret_cast<char*>(&dataintcheck_) -
    reinterpret_cast<char*>(&localcorr_) + sizeof(dataintcheck_));
}

ZC::~ZC() {
  // @@protoc_insertion_point(destructor:ZC)
  SharedDtor();
}

void ZC::SharedDtor() {
  label_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  guid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  configver_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  iptcktprocesstype_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) {
    delete localcorr_;
  }
  if (this != internal_default_instance()) {
    delete dst_;
  }
}

void ZC::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ZC::descriptor() {
  protobuf_zc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_zc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ZC& ZC::default_instance() {
  protobuf_zc_2eproto::InitDefaults();
  return *internal_default_instance();
}

ZC* ZC::New(::google::protobuf::Arena* arena) const {
  ZC* n = new ZC;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ZC::Clear() {
// @@protoc_insertion_point(message_clear_start:ZC)
  remotecorr_.Clear();
  timers_.Clear();
  wioinfo_.Clear();
  password_.Clear();
  if (_has_bits_[0 / 32] & 63u) {
    if (has_label()) {
      GOOGLE_DCHECK(!label_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*label_.UnsafeRawStringPointer())->clear();
    }
    if (has_guid()) {
      GOOGLE_DCHECK(!guid_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*guid_.UnsafeRawStringPointer())->clear();
    }
    if (has_configver()) {
      GOOGLE_DCHECK(!configver_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*configver_.UnsafeRawStringPointer())->clear();
    }
    if (has_iptcktprocesstype()) {
      GOOGLE_DCHECK(!iptcktprocesstype_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*iptcktprocesstype_.UnsafeRawStringPointer())->clear();
    }
    if (has_localcorr()) {
      GOOGLE_DCHECK(localcorr_ != NULL);
      localcorr_->::LOCAL_OUTPUT_CORR::Clear();
    }
    if (has_dst()) {
      GOOGLE_DCHECK(dst_ != NULL);
      dst_->::CFG_DST::Clear();
    }
  }
  if (_has_bits_[0 / 32] & 192u) {
    ::memset(&gscufeatureflags_, 0, reinterpret_cast<char*>(&ghwustrobestype_) -
      reinterpret_cast<char*>(&gscufeatureflags_) + sizeof(ghwustrobestype_));
  }
  dataintcheck_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ZC::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ZC)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string Label = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_label()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->label().data(), this->label().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "ZC.Label");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required string GUID = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_guid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->guid().data(), this->guid().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "ZC.GUID");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required string ConfigVer = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_configver()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->configver().data(), this->configver().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "ZC.ConfigVer");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 gSCUFeatureFlags = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u)) {
          set_has_gscufeatureflags();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &gscufeatureflags_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 gHWUStrobesType = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u)) {
          set_has_ghwustrobestype();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &ghwustrobestype_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required string IptCktProcessType = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_iptcktprocesstype()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->iptcktprocesstype().data(), this->iptcktprocesstype().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "ZC.IptCktProcessType");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required .LOCAL_OUTPUT_CORR LocalCorr = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_localcorr()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required .CFG_DST Dst = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_dst()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 DataIntCheck = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u)) {
          set_has_dataintcheck();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &dataintcheck_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .REMOTE_OUTPUT_CORR RemoteCorr = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_remotecorr()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .TIMER Timers = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(90u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_timers()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .WIO_INFO WIOInfo = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(98u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_wioinfo()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .PASSWORD Password = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(106u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_password()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ZC)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ZC)
  return false;
#undef DO_
}

void ZC::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ZC)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string Label = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->label().data(), this->label().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ZC.Label");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->label(), output);
  }

  // required string GUID = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->guid().data(), this->guid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ZC.GUID");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->guid(), output);
  }

  // required string ConfigVer = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->configver().data(), this->configver().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ZC.ConfigVer");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->configver(), output);
  }

  // required int32 gSCUFeatureFlags = 4;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->gscufeatureflags(), output);
  }

  // required int32 gHWUStrobesType = 5;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->ghwustrobestype(), output);
  }

  // required string IptCktProcessType = 6;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->iptcktprocesstype().data(), this->iptcktprocesstype().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ZC.IptCktProcessType");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->iptcktprocesstype(), output);
  }

  // required .LOCAL_OUTPUT_CORR LocalCorr = 7;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, *this->localcorr_, output);
  }

  // required .CFG_DST Dst = 8;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8, *this->dst_, output);
  }

  // required int32 DataIntCheck = 9;
  if (cached_has_bits & 0x00000100u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(9, this->dataintcheck(), output);
  }

  // repeated .REMOTE_OUTPUT_CORR RemoteCorr = 10;
  for (unsigned int i = 0, n = this->remotecorr_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      10, this->remotecorr(i), output);
  }

  // repeated .TIMER Timers = 11;
  for (unsigned int i = 0, n = this->timers_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      11, this->timers(i), output);
  }

  // repeated .WIO_INFO WIOInfo = 12;
  for (unsigned int i = 0, n = this->wioinfo_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      12, this->wioinfo(i), output);
  }

  // repeated .PASSWORD Password = 13;
  for (unsigned int i = 0, n = this->password_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      13, this->password(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ZC)
}

::google::protobuf::uint8* ZC::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ZC)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string Label = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->label().data(), this->label().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ZC.Label");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->label(), target);
  }

  // required string GUID = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->guid().data(), this->guid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ZC.GUID");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->guid(), target);
  }

  // required string ConfigVer = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->configver().data(), this->configver().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ZC.ConfigVer");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->configver(), target);
  }

  // required int32 gSCUFeatureFlags = 4;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->gscufeatureflags(), target);
  }

  // required int32 gHWUStrobesType = 5;
  if (cached_has_bits & 0x00000080u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->ghwustrobestype(), target);
  }

  // required string IptCktProcessType = 6;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->iptcktprocesstype().data(), this->iptcktprocesstype().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ZC.IptCktProcessType");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->iptcktprocesstype(), target);
  }

  // required .LOCAL_OUTPUT_CORR LocalCorr = 7;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        7, *this->localcorr_, deterministic, target);
  }

  // required .CFG_DST Dst = 8;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        8, *this->dst_, deterministic, target);
  }

  // required int32 DataIntCheck = 9;
  if (cached_has_bits & 0x00000100u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(9, this->dataintcheck(), target);
  }

  // repeated .REMOTE_OUTPUT_CORR RemoteCorr = 10;
  for (unsigned int i = 0, n = this->remotecorr_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        10, this->remotecorr(i), deterministic, target);
  }

  // repeated .TIMER Timers = 11;
  for (unsigned int i = 0, n = this->timers_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        11, this->timers(i), deterministic, target);
  }

  // repeated .WIO_INFO WIOInfo = 12;
  for (unsigned int i = 0, n = this->wioinfo_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        12, this->wioinfo(i), deterministic, target);
  }

  // repeated .PASSWORD Password = 13;
  for (unsigned int i = 0, n = this->password_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        13, this->password(i), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ZC)
  return target;
}

size_t ZC::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:ZC)
  size_t total_size = 0;

  if (has_label()) {
    // required string Label = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->label());
  }

  if (has_guid()) {
    // required string GUID = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->guid());
  }

  if (has_configver()) {
    // required string ConfigVer = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->configver());
  }

  if (has_iptcktprocesstype()) {
    // required string IptCktProcessType = 6;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->iptcktprocesstype());
  }

  if (has_localcorr()) {
    // required .LOCAL_OUTPUT_CORR LocalCorr = 7;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->localcorr_);
  }

  if (has_dst()) {
    // required .CFG_DST Dst = 8;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->dst_);
  }

  if (has_gscufeatureflags()) {
    // required int32 gSCUFeatureFlags = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->gscufeatureflags());
  }

  if (has_ghwustrobestype()) {
    // required int32 gHWUStrobesType = 5;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->ghwustrobestype());
  }

  if (has_dataintcheck()) {
    // required int32 DataIntCheck = 9;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->dataintcheck());
  }

  return total_size;
}
size_t ZC::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ZC)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (((_has_bits_[0] & 0x000001ff) ^ 0x000001ff) == 0) {  // All required fields are present.
    // required string Label = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->label());

    // required string GUID = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->guid());

    // required string ConfigVer = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->configver());

    // required string IptCktProcessType = 6;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->iptcktprocesstype());

    // required .LOCAL_OUTPUT_CORR LocalCorr = 7;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->localcorr_);

    // required .CFG_DST Dst = 8;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->dst_);

    // required int32 gSCUFeatureFlags = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->gscufeatureflags());

    // required int32 gHWUStrobesType = 5;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->ghwustrobestype());

    // required int32 DataIntCheck = 9;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->dataintcheck());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  // repeated .REMOTE_OUTPUT_CORR RemoteCorr = 10;
  {
    unsigned int count = this->remotecorr_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->remotecorr(i));
    }
  }

  // repeated .TIMER Timers = 11;
  {
    unsigned int count = this->timers_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->timers(i));
    }
  }

  // repeated .WIO_INFO WIOInfo = 12;
  {
    unsigned int count = this->wioinfo_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->wioinfo(i));
    }
  }

  // repeated .PASSWORD Password = 13;
  {
    unsigned int count = this->password_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->password(i));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ZC::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ZC)
  GOOGLE_DCHECK_NE(&from, this);
  const ZC* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ZC>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ZC)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ZC)
    MergeFrom(*source);
  }
}

void ZC::MergeFrom(const ZC& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ZC)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  remotecorr_.MergeFrom(from.remotecorr_);
  timers_.MergeFrom(from.timers_);
  wioinfo_.MergeFrom(from.wioinfo_);
  password_.MergeFrom(from.password_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_label();
      label_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.label_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_guid();
      guid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.guid_);
    }
    if (cached_has_bits & 0x00000004u) {
      set_has_configver();
      configver_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.configver_);
    }
    if (cached_has_bits & 0x00000008u) {
      set_has_iptcktprocesstype();
      iptcktprocesstype_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.iptcktprocesstype_);
    }
    if (cached_has_bits & 0x00000010u) {
      mutable_localcorr()->::LOCAL_OUTPUT_CORR::MergeFrom(from.localcorr());
    }
    if (cached_has_bits & 0x00000020u) {
      mutable_dst()->::CFG_DST::MergeFrom(from.dst());
    }
    if (cached_has_bits & 0x00000040u) {
      gscufeatureflags_ = from.gscufeatureflags_;
    }
    if (cached_has_bits & 0x00000080u) {
      ghwustrobestype_ = from.ghwustrobestype_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 0x00000100u) {
    set_dataintcheck(from.dataintcheck());
  }
}

void ZC::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ZC)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ZC::CopyFrom(const ZC& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ZC)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ZC::IsInitialized() const {
  if ((_has_bits_[0] & 0x000001ff) != 0x000001ff) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->remotecorr())) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->timers())) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->wioinfo())) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->password())) return false;
  if (has_localcorr()) {
    if (!this->localcorr_->IsInitialized()) return false;
  }
  if (has_dst()) {
    if (!this->dst_->IsInitialized()) return false;
  }
  return true;
}

void ZC::Swap(ZC* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ZC::InternalSwap(ZC* other) {
  remotecorr_.InternalSwap(&other->remotecorr_);
  timers_.InternalSwap(&other->timers_);
  wioinfo_.InternalSwap(&other->wioinfo_);
  password_.InternalSwap(&other->password_);
  label_.Swap(&other->label_);
  guid_.Swap(&other->guid_);
  configver_.Swap(&other->configver_);
  iptcktprocesstype_.Swap(&other->iptcktprocesstype_);
  std::swap(localcorr_, other->localcorr_);
  std::swap(dst_, other->dst_);
  std::swap(gscufeatureflags_, other->gscufeatureflags_);
  std::swap(ghwustrobestype_, other->ghwustrobestype_);
  std::swap(dataintcheck_, other->dataintcheck_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ZC::GetMetadata() const {
  protobuf_zc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_zc_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ZC

// required string Label = 1;
bool ZC::has_label() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void ZC::set_has_label() {
  _has_bits_[0] |= 0x00000001u;
}
void ZC::clear_has_label() {
  _has_bits_[0] &= ~0x00000001u;
}
void ZC::clear_label() {
  label_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_label();
}
const ::std::string& ZC::label() const {
  // @@protoc_insertion_point(field_get:ZC.Label)
  return label_.GetNoArena();
}
void ZC::set_label(const ::std::string& value) {
  set_has_label();
  label_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ZC.Label)
}
#if LANG_CXX11
void ZC::set_label(::std::string&& value) {
  set_has_label();
  label_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ZC.Label)
}
#endif
void ZC::set_label(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_label();
  label_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ZC.Label)
}
void ZC::set_label(const char* value, size_t size) {
  set_has_label();
  label_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ZC.Label)
}
::std::string* ZC::mutable_label() {
  set_has_label();
  // @@protoc_insertion_point(field_mutable:ZC.Label)
  return label_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ZC::release_label() {
  // @@protoc_insertion_point(field_release:ZC.Label)
  clear_has_label();
  return label_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ZC::set_allocated_label(::std::string* label) {
  if (label != NULL) {
    set_has_label();
  } else {
    clear_has_label();
  }
  label_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), label);
  // @@protoc_insertion_point(field_set_allocated:ZC.Label)
}

// required string GUID = 2;
bool ZC::has_guid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void ZC::set_has_guid() {
  _has_bits_[0] |= 0x00000002u;
}
void ZC::clear_has_guid() {
  _has_bits_[0] &= ~0x00000002u;
}
void ZC::clear_guid() {
  guid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_guid();
}
const ::std::string& ZC::guid() const {
  // @@protoc_insertion_point(field_get:ZC.GUID)
  return guid_.GetNoArena();
}
void ZC::set_guid(const ::std::string& value) {
  set_has_guid();
  guid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ZC.GUID)
}
#if LANG_CXX11
void ZC::set_guid(::std::string&& value) {
  set_has_guid();
  guid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ZC.GUID)
}
#endif
void ZC::set_guid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_guid();
  guid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ZC.GUID)
}
void ZC::set_guid(const char* value, size_t size) {
  set_has_guid();
  guid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ZC.GUID)
}
::std::string* ZC::mutable_guid() {
  set_has_guid();
  // @@protoc_insertion_point(field_mutable:ZC.GUID)
  return guid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ZC::release_guid() {
  // @@protoc_insertion_point(field_release:ZC.GUID)
  clear_has_guid();
  return guid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ZC::set_allocated_guid(::std::string* guid) {
  if (guid != NULL) {
    set_has_guid();
  } else {
    clear_has_guid();
  }
  guid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), guid);
  // @@protoc_insertion_point(field_set_allocated:ZC.GUID)
}

// required string ConfigVer = 3;
bool ZC::has_configver() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void ZC::set_has_configver() {
  _has_bits_[0] |= 0x00000004u;
}
void ZC::clear_has_configver() {
  _has_bits_[0] &= ~0x00000004u;
}
void ZC::clear_configver() {
  configver_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_configver();
}
const ::std::string& ZC::configver() const {
  // @@protoc_insertion_point(field_get:ZC.ConfigVer)
  return configver_.GetNoArena();
}
void ZC::set_configver(const ::std::string& value) {
  set_has_configver();
  configver_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ZC.ConfigVer)
}
#if LANG_CXX11
void ZC::set_configver(::std::string&& value) {
  set_has_configver();
  configver_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ZC.ConfigVer)
}
#endif
void ZC::set_configver(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_configver();
  configver_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ZC.ConfigVer)
}
void ZC::set_configver(const char* value, size_t size) {
  set_has_configver();
  configver_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ZC.ConfigVer)
}
::std::string* ZC::mutable_configver() {
  set_has_configver();
  // @@protoc_insertion_point(field_mutable:ZC.ConfigVer)
  return configver_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ZC::release_configver() {
  // @@protoc_insertion_point(field_release:ZC.ConfigVer)
  clear_has_configver();
  return configver_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ZC::set_allocated_configver(::std::string* configver) {
  if (configver != NULL) {
    set_has_configver();
  } else {
    clear_has_configver();
  }
  configver_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), configver);
  // @@protoc_insertion_point(field_set_allocated:ZC.ConfigVer)
}

// required int32 gSCUFeatureFlags = 4;
bool ZC::has_gscufeatureflags() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
void ZC::set_has_gscufeatureflags() {
  _has_bits_[0] |= 0x00000040u;
}
void ZC::clear_has_gscufeatureflags() {
  _has_bits_[0] &= ~0x00000040u;
}
void ZC::clear_gscufeatureflags() {
  gscufeatureflags_ = 0;
  clear_has_gscufeatureflags();
}
::google::protobuf::int32 ZC::gscufeatureflags() const {
  // @@protoc_insertion_point(field_get:ZC.gSCUFeatureFlags)
  return gscufeatureflags_;
}
void ZC::set_gscufeatureflags(::google::protobuf::int32 value) {
  set_has_gscufeatureflags();
  gscufeatureflags_ = value;
  // @@protoc_insertion_point(field_set:ZC.gSCUFeatureFlags)
}

// required int32 gHWUStrobesType = 5;
bool ZC::has_ghwustrobestype() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
void ZC::set_has_ghwustrobestype() {
  _has_bits_[0] |= 0x00000080u;
}
void ZC::clear_has_ghwustrobestype() {
  _has_bits_[0] &= ~0x00000080u;
}
void ZC::clear_ghwustrobestype() {
  ghwustrobestype_ = 0;
  clear_has_ghwustrobestype();
}
::google::protobuf::int32 ZC::ghwustrobestype() const {
  // @@protoc_insertion_point(field_get:ZC.gHWUStrobesType)
  return ghwustrobestype_;
}
void ZC::set_ghwustrobestype(::google::protobuf::int32 value) {
  set_has_ghwustrobestype();
  ghwustrobestype_ = value;
  // @@protoc_insertion_point(field_set:ZC.gHWUStrobesType)
}

// required string IptCktProcessType = 6;
bool ZC::has_iptcktprocesstype() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void ZC::set_has_iptcktprocesstype() {
  _has_bits_[0] |= 0x00000008u;
}
void ZC::clear_has_iptcktprocesstype() {
  _has_bits_[0] &= ~0x00000008u;
}
void ZC::clear_iptcktprocesstype() {
  iptcktprocesstype_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_iptcktprocesstype();
}
const ::std::string& ZC::iptcktprocesstype() const {
  // @@protoc_insertion_point(field_get:ZC.IptCktProcessType)
  return iptcktprocesstype_.GetNoArena();
}
void ZC::set_iptcktprocesstype(const ::std::string& value) {
  set_has_iptcktprocesstype();
  iptcktprocesstype_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ZC.IptCktProcessType)
}
#if LANG_CXX11
void ZC::set_iptcktprocesstype(::std::string&& value) {
  set_has_iptcktprocesstype();
  iptcktprocesstype_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ZC.IptCktProcessType)
}
#endif
void ZC::set_iptcktprocesstype(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_iptcktprocesstype();
  iptcktprocesstype_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ZC.IptCktProcessType)
}
void ZC::set_iptcktprocesstype(const char* value, size_t size) {
  set_has_iptcktprocesstype();
  iptcktprocesstype_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ZC.IptCktProcessType)
}
::std::string* ZC::mutable_iptcktprocesstype() {
  set_has_iptcktprocesstype();
  // @@protoc_insertion_point(field_mutable:ZC.IptCktProcessType)
  return iptcktprocesstype_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ZC::release_iptcktprocesstype() {
  // @@protoc_insertion_point(field_release:ZC.IptCktProcessType)
  clear_has_iptcktprocesstype();
  return iptcktprocesstype_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ZC::set_allocated_iptcktprocesstype(::std::string* iptcktprocesstype) {
  if (iptcktprocesstype != NULL) {
    set_has_iptcktprocesstype();
  } else {
    clear_has_iptcktprocesstype();
  }
  iptcktprocesstype_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), iptcktprocesstype);
  // @@protoc_insertion_point(field_set_allocated:ZC.IptCktProcessType)
}

// required .LOCAL_OUTPUT_CORR LocalCorr = 7;
bool ZC::has_localcorr() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void ZC::set_has_localcorr() {
  _has_bits_[0] |= 0x00000010u;
}
void ZC::clear_has_localcorr() {
  _has_bits_[0] &= ~0x00000010u;
}
void ZC::clear_localcorr() {
  if (localcorr_ != NULL) localcorr_->::LOCAL_OUTPUT_CORR::Clear();
  clear_has_localcorr();
}
const ::LOCAL_OUTPUT_CORR& ZC::localcorr() const {
  // @@protoc_insertion_point(field_get:ZC.LocalCorr)
  return localcorr_ != NULL ? *localcorr_
                         : *::LOCAL_OUTPUT_CORR::internal_default_instance();
}
::LOCAL_OUTPUT_CORR* ZC::mutable_localcorr() {
  set_has_localcorr();
  if (localcorr_ == NULL) {
    localcorr_ = new ::LOCAL_OUTPUT_CORR;
  }
  // @@protoc_insertion_point(field_mutable:ZC.LocalCorr)
  return localcorr_;
}
::LOCAL_OUTPUT_CORR* ZC::release_localcorr() {
  // @@protoc_insertion_point(field_release:ZC.LocalCorr)
  clear_has_localcorr();
  ::LOCAL_OUTPUT_CORR* temp = localcorr_;
  localcorr_ = NULL;
  return temp;
}
void ZC::set_allocated_localcorr(::LOCAL_OUTPUT_CORR* localcorr) {
  delete localcorr_;
  localcorr_ = localcorr;
  if (localcorr) {
    set_has_localcorr();
  } else {
    clear_has_localcorr();
  }
  // @@protoc_insertion_point(field_set_allocated:ZC.LocalCorr)
}

// required .CFG_DST Dst = 8;
bool ZC::has_dst() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void ZC::set_has_dst() {
  _has_bits_[0] |= 0x00000020u;
}
void ZC::clear_has_dst() {
  _has_bits_[0] &= ~0x00000020u;
}
void ZC::clear_dst() {
  if (dst_ != NULL) dst_->::CFG_DST::Clear();
  clear_has_dst();
}
const ::CFG_DST& ZC::dst() const {
  // @@protoc_insertion_point(field_get:ZC.Dst)
  return dst_ != NULL ? *dst_
                         : *::CFG_DST::internal_default_instance();
}
::CFG_DST* ZC::mutable_dst() {
  set_has_dst();
  if (dst_ == NULL) {
    dst_ = new ::CFG_DST;
  }
  // @@protoc_insertion_point(field_mutable:ZC.Dst)
  return dst_;
}
::CFG_DST* ZC::release_dst() {
  // @@protoc_insertion_point(field_release:ZC.Dst)
  clear_has_dst();
  ::CFG_DST* temp = dst_;
  dst_ = NULL;
  return temp;
}
void ZC::set_allocated_dst(::CFG_DST* dst) {
  delete dst_;
  dst_ = dst;
  if (dst) {
    set_has_dst();
  } else {
    clear_has_dst();
  }
  // @@protoc_insertion_point(field_set_allocated:ZC.Dst)
}

// required int32 DataIntCheck = 9;
bool ZC::has_dataintcheck() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
void ZC::set_has_dataintcheck() {
  _has_bits_[0] |= 0x00000100u;
}
void ZC::clear_has_dataintcheck() {
  _has_bits_[0] &= ~0x00000100u;
}
void ZC::clear_dataintcheck() {
  dataintcheck_ = 0;
  clear_has_dataintcheck();
}
::google::protobuf::int32 ZC::dataintcheck() const {
  // @@protoc_insertion_point(field_get:ZC.DataIntCheck)
  return dataintcheck_;
}
void ZC::set_dataintcheck(::google::protobuf::int32 value) {
  set_has_dataintcheck();
  dataintcheck_ = value;
  // @@protoc_insertion_point(field_set:ZC.DataIntCheck)
}

// repeated .REMOTE_OUTPUT_CORR RemoteCorr = 10;
int ZC::remotecorr_size() const {
  return remotecorr_.size();
}
void ZC::clear_remotecorr() {
  remotecorr_.Clear();
}
const ::REMOTE_OUTPUT_CORR& ZC::remotecorr(int index) const {
  // @@protoc_insertion_point(field_get:ZC.RemoteCorr)
  return remotecorr_.Get(index);
}
::REMOTE_OUTPUT_CORR* ZC::mutable_remotecorr(int index) {
  // @@protoc_insertion_point(field_mutable:ZC.RemoteCorr)
  return remotecorr_.Mutable(index);
}
::REMOTE_OUTPUT_CORR* ZC::add_remotecorr() {
  // @@protoc_insertion_point(field_add:ZC.RemoteCorr)
  return remotecorr_.Add();
}
::google::protobuf::RepeatedPtrField< ::REMOTE_OUTPUT_CORR >*
ZC::mutable_remotecorr() {
  // @@protoc_insertion_point(field_mutable_list:ZC.RemoteCorr)
  return &remotecorr_;
}
const ::google::protobuf::RepeatedPtrField< ::REMOTE_OUTPUT_CORR >&
ZC::remotecorr() const {
  // @@protoc_insertion_point(field_list:ZC.RemoteCorr)
  return remotecorr_;
}

// repeated .TIMER Timers = 11;
int ZC::timers_size() const {
  return timers_.size();
}
void ZC::clear_timers() {
  timers_.Clear();
}
const ::TIMER& ZC::timers(int index) const {
  // @@protoc_insertion_point(field_get:ZC.Timers)
  return timers_.Get(index);
}
::TIMER* ZC::mutable_timers(int index) {
  // @@protoc_insertion_point(field_mutable:ZC.Timers)
  return timers_.Mutable(index);
}
::TIMER* ZC::add_timers() {
  // @@protoc_insertion_point(field_add:ZC.Timers)
  return timers_.Add();
}
::google::protobuf::RepeatedPtrField< ::TIMER >*
ZC::mutable_timers() {
  // @@protoc_insertion_point(field_mutable_list:ZC.Timers)
  return &timers_;
}
const ::google::protobuf::RepeatedPtrField< ::TIMER >&
ZC::timers() const {
  // @@protoc_insertion_point(field_list:ZC.Timers)
  return timers_;
}

// repeated .WIO_INFO WIOInfo = 12;
int ZC::wioinfo_size() const {
  return wioinfo_.size();
}
void ZC::clear_wioinfo() {
  wioinfo_.Clear();
}
const ::WIO_INFO& ZC::wioinfo(int index) const {
  // @@protoc_insertion_point(field_get:ZC.WIOInfo)
  return wioinfo_.Get(index);
}
::WIO_INFO* ZC::mutable_wioinfo(int index) {
  // @@protoc_insertion_point(field_mutable:ZC.WIOInfo)
  return wioinfo_.Mutable(index);
}
::WIO_INFO* ZC::add_wioinfo() {
  // @@protoc_insertion_point(field_add:ZC.WIOInfo)
  return wioinfo_.Add();
}
::google::protobuf::RepeatedPtrField< ::WIO_INFO >*
ZC::mutable_wioinfo() {
  // @@protoc_insertion_point(field_mutable_list:ZC.WIOInfo)
  return &wioinfo_;
}
const ::google::protobuf::RepeatedPtrField< ::WIO_INFO >&
ZC::wioinfo() const {
  // @@protoc_insertion_point(field_list:ZC.WIOInfo)
  return wioinfo_;
}

// repeated .PASSWORD Password = 13;
int ZC::password_size() const {
  return password_.size();
}
void ZC::clear_password() {
  password_.Clear();
}
const ::PASSWORD& ZC::password(int index) const {
  // @@protoc_insertion_point(field_get:ZC.Password)
  return password_.Get(index);
}
::PASSWORD* ZC::mutable_password(int index) {
  // @@protoc_insertion_point(field_mutable:ZC.Password)
  return password_.Mutable(index);
}
::PASSWORD* ZC::add_password() {
  // @@protoc_insertion_point(field_add:ZC.Password)
  return password_.Add();
}
::google::protobuf::RepeatedPtrField< ::PASSWORD >*
ZC::mutable_password() {
  // @@protoc_insertion_point(field_mutable_list:ZC.Password)
  return &password_;
}
const ::google::protobuf::RepeatedPtrField< ::PASSWORD >&
ZC::password() const {
  // @@protoc_insertion_point(field_list:ZC.Password)
  return password_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PASSWORDS::kPasswordFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PASSWORDS::PASSWORDS()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_zc_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:PASSWORDS)
}
PASSWORDS::PASSWORDS(const PASSWORDS& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      password_(from.password_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:PASSWORDS)
}

void PASSWORDS::SharedCtor() {
  _cached_size_ = 0;
}

PASSWORDS::~PASSWORDS() {
  // @@protoc_insertion_point(destructor:PASSWORDS)
  SharedDtor();
}

void PASSWORDS::SharedDtor() {
}

void PASSWORDS::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PASSWORDS::descriptor() {
  protobuf_zc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_zc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PASSWORDS& PASSWORDS::default_instance() {
  protobuf_zc_2eproto::InitDefaults();
  return *internal_default_instance();
}

PASSWORDS* PASSWORDS::New(::google::protobuf::Arena* arena) const {
  PASSWORDS* n = new PASSWORDS;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PASSWORDS::Clear() {
// @@protoc_insertion_point(message_clear_start:PASSWORDS)
  password_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool PASSWORDS::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:PASSWORDS)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .PASSWORD Password = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_password()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:PASSWORDS)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:PASSWORDS)
  return false;
#undef DO_
}

void PASSWORDS::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:PASSWORDS)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .PASSWORD Password = 1;
  for (unsigned int i = 0, n = this->password_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->password(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:PASSWORDS)
}

::google::protobuf::uint8* PASSWORDS::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:PASSWORDS)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .PASSWORD Password = 1;
  for (unsigned int i = 0, n = this->password_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->password(i), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:PASSWORDS)
  return target;
}

size_t PASSWORDS::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:PASSWORDS)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // repeated .PASSWORD Password = 1;
  {
    unsigned int count = this->password_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->password(i));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PASSWORDS::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:PASSWORDS)
  GOOGLE_DCHECK_NE(&from, this);
  const PASSWORDS* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PASSWORDS>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:PASSWORDS)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:PASSWORDS)
    MergeFrom(*source);
  }
}

void PASSWORDS::MergeFrom(const PASSWORDS& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:PASSWORDS)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  password_.MergeFrom(from.password_);
}

void PASSWORDS::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:PASSWORDS)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PASSWORDS::CopyFrom(const PASSWORDS& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PASSWORDS)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PASSWORDS::IsInitialized() const {
  if (!::google::protobuf::internal::AllAreInitialized(this->password())) return false;
  return true;
}

void PASSWORDS::Swap(PASSWORDS* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PASSWORDS::InternalSwap(PASSWORDS* other) {
  password_.InternalSwap(&other->password_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PASSWORDS::GetMetadata() const {
  protobuf_zc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_zc_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PASSWORDS

// repeated .PASSWORD Password = 1;
int PASSWORDS::password_size() const {
  return password_.size();
}
void PASSWORDS::clear_password() {
  password_.Clear();
}
const ::PASSWORD& PASSWORDS::password(int index) const {
  // @@protoc_insertion_point(field_get:PASSWORDS.Password)
  return password_.Get(index);
}
::PASSWORD* PASSWORDS::mutable_password(int index) {
  // @@protoc_insertion_point(field_mutable:PASSWORDS.Password)
  return password_.Mutable(index);
}
::PASSWORD* PASSWORDS::add_password() {
  // @@protoc_insertion_point(field_add:PASSWORDS.Password)
  return password_.Add();
}
::google::protobuf::RepeatedPtrField< ::PASSWORD >*
PASSWORDS::mutable_password() {
  // @@protoc_insertion_point(field_mutable_list:PASSWORDS.Password)
  return &password_;
}
const ::google::protobuf::RepeatedPtrField< ::PASSWORD >&
PASSWORDS::password() const {
  // @@protoc_insertion_point(field_list:PASSWORDS.Password)
  return password_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CFG_RTC::kSecondsFieldNumber;
const int CFG_RTC::kMinutesFieldNumber;
const int CFG_RTC::kHoursFieldNumber;
const int CFG_RTC::kDateFieldNumber;
const int CFG_RTC::kMonthFieldNumber;
const int CFG_RTC::kYearFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CFG_RTC::CFG_RTC()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_zc_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CFG_RTC)
}
CFG_RTC::CFG_RTC(const CFG_RTC& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&seconds_, &from.seconds_,
    reinterpret_cast<char*>(&year_) -
    reinterpret_cast<char*>(&seconds_) + sizeof(year_));
  // @@protoc_insertion_point(copy_constructor:CFG_RTC)
}

void CFG_RTC::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&seconds_, 0, reinterpret_cast<char*>(&year_) -
    reinterpret_cast<char*>(&seconds_) + sizeof(year_));
}

CFG_RTC::~CFG_RTC() {
  // @@protoc_insertion_point(destructor:CFG_RTC)
  SharedDtor();
}

void CFG_RTC::SharedDtor() {
}

void CFG_RTC::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CFG_RTC::descriptor() {
  protobuf_zc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_zc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CFG_RTC& CFG_RTC::default_instance() {
  protobuf_zc_2eproto::InitDefaults();
  return *internal_default_instance();
}

CFG_RTC* CFG_RTC::New(::google::protobuf::Arena* arena) const {
  CFG_RTC* n = new CFG_RTC;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CFG_RTC::Clear() {
// @@protoc_insertion_point(message_clear_start:CFG_RTC)
  if (_has_bits_[0 / 32] & 63u) {
    ::memset(&seconds_, 0, reinterpret_cast<char*>(&year_) -
      reinterpret_cast<char*>(&seconds_) + sizeof(year_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CFG_RTC::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CFG_RTC)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 seconds = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          set_has_seconds();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &seconds_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 minutes = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {
          set_has_minutes();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &minutes_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 hours = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u)) {
          set_has_hours();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &hours_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 date = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u)) {
          set_has_date();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &date_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 month = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u)) {
          set_has_month();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &month_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 year = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u)) {
          set_has_year();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &year_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CFG_RTC)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CFG_RTC)
  return false;
#undef DO_
}

void CFG_RTC::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CFG_RTC)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 seconds = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->seconds(), output);
  }

  // required int32 minutes = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->minutes(), output);
  }

  // required int32 hours = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->hours(), output);
  }

  // required int32 date = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->date(), output);
  }

  // required int32 month = 5;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->month(), output);
  }

  // required int32 year = 6;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->year(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CFG_RTC)
}

::google::protobuf::uint8* CFG_RTC::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CFG_RTC)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 seconds = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->seconds(), target);
  }

  // required int32 minutes = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->minutes(), target);
  }

  // required int32 hours = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->hours(), target);
  }

  // required int32 date = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->date(), target);
  }

  // required int32 month = 5;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->month(), target);
  }

  // required int32 year = 6;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->year(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CFG_RTC)
  return target;
}

size_t CFG_RTC::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:CFG_RTC)
  size_t total_size = 0;

  if (has_seconds()) {
    // required int32 seconds = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->seconds());
  }

  if (has_minutes()) {
    // required int32 minutes = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->minutes());
  }

  if (has_hours()) {
    // required int32 hours = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->hours());
  }

  if (has_date()) {
    // required int32 date = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->date());
  }

  if (has_month()) {
    // required int32 month = 5;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->month());
  }

  if (has_year()) {
    // required int32 year = 6;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->year());
  }

  return total_size;
}
size_t CFG_RTC::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CFG_RTC)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (((_has_bits_[0] & 0x0000003f) ^ 0x0000003f) == 0) {  // All required fields are present.
    // required int32 seconds = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->seconds());

    // required int32 minutes = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->minutes());

    // required int32 hours = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->hours());

    // required int32 date = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->date());

    // required int32 month = 5;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->month());

    // required int32 year = 6;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->year());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CFG_RTC::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CFG_RTC)
  GOOGLE_DCHECK_NE(&from, this);
  const CFG_RTC* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CFG_RTC>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CFG_RTC)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CFG_RTC)
    MergeFrom(*source);
  }
}

void CFG_RTC::MergeFrom(const CFG_RTC& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CFG_RTC)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 63u) {
    if (cached_has_bits & 0x00000001u) {
      seconds_ = from.seconds_;
    }
    if (cached_has_bits & 0x00000002u) {
      minutes_ = from.minutes_;
    }
    if (cached_has_bits & 0x00000004u) {
      hours_ = from.hours_;
    }
    if (cached_has_bits & 0x00000008u) {
      date_ = from.date_;
    }
    if (cached_has_bits & 0x00000010u) {
      month_ = from.month_;
    }
    if (cached_has_bits & 0x00000020u) {
      year_ = from.year_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CFG_RTC::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CFG_RTC)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CFG_RTC::CopyFrom(const CFG_RTC& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CFG_RTC)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CFG_RTC::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000003f) != 0x0000003f) return false;
  return true;
}

void CFG_RTC::Swap(CFG_RTC* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CFG_RTC::InternalSwap(CFG_RTC* other) {
  std::swap(seconds_, other->seconds_);
  std::swap(minutes_, other->minutes_);
  std::swap(hours_, other->hours_);
  std::swap(date_, other->date_);
  std::swap(month_, other->month_);
  std::swap(year_, other->year_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CFG_RTC::GetMetadata() const {
  protobuf_zc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_zc_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CFG_RTC

// required int32 seconds = 1;
bool CFG_RTC::has_seconds() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CFG_RTC::set_has_seconds() {
  _has_bits_[0] |= 0x00000001u;
}
void CFG_RTC::clear_has_seconds() {
  _has_bits_[0] &= ~0x00000001u;
}
void CFG_RTC::clear_seconds() {
  seconds_ = 0;
  clear_has_seconds();
}
::google::protobuf::int32 CFG_RTC::seconds() const {
  // @@protoc_insertion_point(field_get:CFG_RTC.seconds)
  return seconds_;
}
void CFG_RTC::set_seconds(::google::protobuf::int32 value) {
  set_has_seconds();
  seconds_ = value;
  // @@protoc_insertion_point(field_set:CFG_RTC.seconds)
}

// required int32 minutes = 2;
bool CFG_RTC::has_minutes() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void CFG_RTC::set_has_minutes() {
  _has_bits_[0] |= 0x00000002u;
}
void CFG_RTC::clear_has_minutes() {
  _has_bits_[0] &= ~0x00000002u;
}
void CFG_RTC::clear_minutes() {
  minutes_ = 0;
  clear_has_minutes();
}
::google::protobuf::int32 CFG_RTC::minutes() const {
  // @@protoc_insertion_point(field_get:CFG_RTC.minutes)
  return minutes_;
}
void CFG_RTC::set_minutes(::google::protobuf::int32 value) {
  set_has_minutes();
  minutes_ = value;
  // @@protoc_insertion_point(field_set:CFG_RTC.minutes)
}

// required int32 hours = 3;
bool CFG_RTC::has_hours() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void CFG_RTC::set_has_hours() {
  _has_bits_[0] |= 0x00000004u;
}
void CFG_RTC::clear_has_hours() {
  _has_bits_[0] &= ~0x00000004u;
}
void CFG_RTC::clear_hours() {
  hours_ = 0;
  clear_has_hours();
}
::google::protobuf::int32 CFG_RTC::hours() const {
  // @@protoc_insertion_point(field_get:CFG_RTC.hours)
  return hours_;
}
void CFG_RTC::set_hours(::google::protobuf::int32 value) {
  set_has_hours();
  hours_ = value;
  // @@protoc_insertion_point(field_set:CFG_RTC.hours)
}

// required int32 date = 4;
bool CFG_RTC::has_date() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void CFG_RTC::set_has_date() {
  _has_bits_[0] |= 0x00000008u;
}
void CFG_RTC::clear_has_date() {
  _has_bits_[0] &= ~0x00000008u;
}
void CFG_RTC::clear_date() {
  date_ = 0;
  clear_has_date();
}
::google::protobuf::int32 CFG_RTC::date() const {
  // @@protoc_insertion_point(field_get:CFG_RTC.date)
  return date_;
}
void CFG_RTC::set_date(::google::protobuf::int32 value) {
  set_has_date();
  date_ = value;
  // @@protoc_insertion_point(field_set:CFG_RTC.date)
}

// required int32 month = 5;
bool CFG_RTC::has_month() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void CFG_RTC::set_has_month() {
  _has_bits_[0] |= 0x00000010u;
}
void CFG_RTC::clear_has_month() {
  _has_bits_[0] &= ~0x00000010u;
}
void CFG_RTC::clear_month() {
  month_ = 0;
  clear_has_month();
}
::google::protobuf::int32 CFG_RTC::month() const {
  // @@protoc_insertion_point(field_get:CFG_RTC.month)
  return month_;
}
void CFG_RTC::set_month(::google::protobuf::int32 value) {
  set_has_month();
  month_ = value;
  // @@protoc_insertion_point(field_set:CFG_RTC.month)
}

// required int32 year = 6;
bool CFG_RTC::has_year() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void CFG_RTC::set_has_year() {
  _has_bits_[0] |= 0x00000020u;
}
void CFG_RTC::clear_has_year() {
  _has_bits_[0] &= ~0x00000020u;
}
void CFG_RTC::clear_year() {
  year_ = 0;
  clear_has_year();
}
::google::protobuf::int32 CFG_RTC::year() const {
  // @@protoc_insertion_point(field_get:CFG_RTC.year)
  return year_;
}
void CFG_RTC::set_year(::google::protobuf::int32 value) {
  set_has_year();
  year_ = value;
  // @@protoc_insertion_point(field_set:CFG_RTC.year)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)
